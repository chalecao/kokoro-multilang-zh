(function(Wn,er){typeof exports=="object"&&typeof module<"u"?er(exports):typeof define=="function"&&define.amd?define(["exports"],er):(Wn=typeof globalThis<"u"?globalThis:Wn||self,er(Wn.Kokoro={}))})(this,function(Wn){"use strict";var Y_=Object.defineProperty;var J_=(Wn,er,Ks)=>er in Wn?Y_(Wn,er,{enumerable:!0,configurable:!0,writable:!0,value:Ks}):Wn[er]=Ks;var Me=(Wn,er,Ks)=>J_(Wn,typeof er!="symbol"?er+"":er,Ks);var er=typeof document<"u"?document.currentScript:null,Ks,Vi,Th={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(Te,k,n)=>{Te.exports=n.p+"ort-wasm-simd-threaded.jsep.wasm"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb":(Te,k,n)=>{Te.exports=n.p+"ort.bundle.min.mjs"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(Te,k,n)=>{n.r(k),n.d(k,{Environment:()=>nt,Interpreter:()=>ft,Template:()=>yt,parse:()=>Z,tokenize:()=>_});var p=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),I=Object.freeze({set:p.Set,for:p.For,in:p.In,is:p.Is,if:p.If,else:p.Else,endif:p.EndIf,elif:p.ElseIf,endfor:p.EndFor,and:p.And,or:p.Or,not:p.Not,"not in":p.NotIn,macro:p.Macro,endmacro:p.EndMacro,true:p.BooleanLiteral,false:p.BooleanLiteral,none:p.NullLiteral,True:p.BooleanLiteral,False:p.BooleanLiteral,None:p.NullLiteral}),V=class{constructor(U,ae){this.value=U,this.type=ae}};function Y(U){return/\w/.test(U)}function z(U){return/[0-9]/.test(U)}var $=[["{%",p.OpenStatement],["%}",p.CloseStatement],["{{",p.OpenExpression],["}}",p.CloseExpression],["(",p.OpenParen],[")",p.CloseParen],["{",p.OpenCurlyBracket],["}",p.CloseCurlyBracket],["[",p.OpenSquareBracket],["]",p.CloseSquareBracket],[",",p.Comma],[".",p.Dot],[":",p.Colon],["|",p.Pipe],["<=",p.ComparisonBinaryOperator],[">=",p.ComparisonBinaryOperator],["==",p.ComparisonBinaryOperator],["!=",p.ComparisonBinaryOperator],["<",p.ComparisonBinaryOperator],[">",p.ComparisonBinaryOperator],["+",p.AdditiveBinaryOperator],["-",p.AdditiveBinaryOperator],["*",p.MultiplicativeBinaryOperator],["/",p.MultiplicativeBinaryOperator],["%",p.MultiplicativeBinaryOperator],["=",p.Equals]],y=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function _(U,ae={}){var Ze,ct,$t;const H=[],me=function(mt,It={}){return mt.endsWith(`
`)&&(mt=mt.slice(0,-1)),mt=mt.replace(/{#.*?#}/gs,"{##}"),It.lstrip_blocks&&(mt=mt.replace(/^[ \t]*({[#%])/gm,"$1")),It.trim_blocks&&(mt=mt.replace(/([#%]})\n/g,"$1")),mt.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}(U,ae);let Oe=0;const tt=mt=>{let It="";for(;mt(me[Oe]);)if(me[Oe]!=="\\"){if(It+=me[Oe++],Oe>=me.length)throw new SyntaxError("Unexpected end of input")}else{if(++Oe,Oe>=me.length)throw new SyntaxError("Unexpected end of input");const Ft=me[Oe++],Rt=y.get(Ft);if(Rt===void 0)throw new SyntaxError(`Unexpected escaped character: ${Ft}`);It+=Rt}return It};e:for(;Oe<me.length;){const mt=(Ze=H.at(-1))==null?void 0:Ze.type;if(mt===void 0||mt===p.CloseStatement||mt===p.CloseExpression){let Ft="";for(;Oe<me.length&&(me[Oe]!=="{"||me[Oe+1]!=="%"&&me[Oe+1]!=="{");)Ft+=me[Oe++];if(Ft.length>0){H.push(new V(Ft,p.Text));continue}}tt(Ft=>/\s/.test(Ft));const It=me[Oe];if(It==="-"||It==="+"){const Ft=(ct=H.at(-1))==null?void 0:ct.type;if(Ft===p.Text||Ft===void 0)throw new SyntaxError(`Unexpected character: ${It}`);switch(Ft){case p.Identifier:case p.NumericLiteral:case p.BooleanLiteral:case p.NullLiteral:case p.StringLiteral:case p.CloseParen:case p.CloseSquareBracket:break;default:{++Oe;const Rt=tt(z);H.push(new V(`${It}${Rt}`,Rt.length>0?p.NumericLiteral:p.UnaryOperator));continue}}}for(const[Ft,Rt]of $)if(me.slice(Oe,Oe+Ft.length)===Ft){H.push(new V(Ft,Rt)),Oe+=Ft.length;continue e}if(It!=="'"&&It!=='"')if(z(It)){const Ft=tt(z);H.push(new V(Ft,p.NumericLiteral))}else{if(!Y(It))throw new SyntaxError(`Unexpected character: ${It}`);{const Ft=tt(Y),Rt=Object.hasOwn(I,Ft)?I[Ft]:p.Identifier;Rt===p.In&&(($t=H.at(-1))==null?void 0:$t.type)===p.Not?(H.pop(),H.push(new V("not in",p.NotIn))):H.push(new V(Ft,Rt))}}else{++Oe;const Ft=tt(Rt=>Rt!==It);H.push(new V(Ft,p.StringLiteral)),++Oe}}return H}var A=class{constructor(){Me(this,"type","Statement")}},b=class extends A{constructor(ae){super();Me(this,"type","Program");this.body=ae}},j=class extends A{constructor(ae,H,me){super();Me(this,"type","If");this.test=ae,this.body=H,this.alternate=me}},re=class extends A{constructor(ae,H,me,Oe){super();Me(this,"type","For");this.loopvar=ae,this.iterable=H,this.body=me,this.defaultBlock=Oe}},se=class extends A{constructor(ae,H){super();Me(this,"type","Set");this.assignee=ae,this.value=H}},le=class extends A{constructor(ae,H,me){super();Me(this,"type","Macro");this.name=ae,this.args=H,this.body=me}},L=class extends A{constructor(){super(...arguments);Me(this,"type","Expression")}},G=class extends L{constructor(ae,H,me){super();Me(this,"type","MemberExpression");this.object=ae,this.property=H,this.computed=me}},ie=class extends L{constructor(ae,H){super();Me(this,"type","CallExpression");this.callee=ae,this.args=H}},N=class extends L{constructor(ae){super();Me(this,"type","Identifier");this.value=ae}},v=class extends L{constructor(ae){super();Me(this,"type","Literal");this.value=ae}},O=class extends v{constructor(){super(...arguments);Me(this,"type","NumericLiteral")}},x=class extends v{constructor(){super(...arguments);Me(this,"type","StringLiteral")}},R=class extends v{constructor(){super(...arguments);Me(this,"type","BooleanLiteral")}},K=class extends v{constructor(){super(...arguments);Me(this,"type","NullLiteral")}},fe=class extends v{constructor(){super(...arguments);Me(this,"type","ArrayLiteral")}},de=class extends v{constructor(){super(...arguments);Me(this,"type","TupleLiteral")}},ge=class extends v{constructor(){super(...arguments);Me(this,"type","ObjectLiteral")}},Ae=class extends L{constructor(ae,H,me){super();Me(this,"type","BinaryExpression");this.operator=ae,this.left=H,this.right=me}},we=class extends L{constructor(ae,H){super();Me(this,"type","FilterExpression");this.operand=ae,this.filter=H}},Se=class extends L{constructor(ae,H){super();Me(this,"type","SelectExpression");this.iterable=ae,this.test=H}},Re=class extends L{constructor(ae,H,me){super();Me(this,"type","TestExpression");this.operand=ae,this.negate=H,this.test=me}},Ue=class extends L{constructor(ae,H){super();Me(this,"type","UnaryExpression");this.operator=ae,this.argument=H}},dt=class extends L{constructor(ae=void 0,H=void 0,me=void 0){super();Me(this,"type","SliceExpression");this.start=ae,this.stop=H,this.step=me}},oe=class extends L{constructor(ae,H){super();Me(this,"type","KeywordArgumentExpression");this.key=ae,this.value=H}};function Z(U){const ae=new b([]);let H=0;function me(it,St){const Bt=U[H++];if(!Bt||Bt.type!==it)throw new Error(`Parser Error: ${St}. ${Bt.type} !== ${it}.`);return Bt}function Oe(){switch(U[H].type){case p.Text:return new x(me(p.Text,"Expected text token").value);case p.OpenStatement:return function(){let it;switch(me(p.OpenStatement,"Expected opening statement token"),U[H].type){case p.Set:++H,it=ct(),me(p.CloseStatement,"Expected closing statement token");break;case p.If:++H,it=$t(),me(p.OpenStatement,"Expected {% token"),me(p.EndIf,"Expected endif token"),me(p.CloseStatement,"Expected %} token");break;case p.Macro:++H,it=function(){const St=an();if(St.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const Bt=Gr();me(p.CloseStatement,"Expected closing statement token");const Ir=[];for(;tt(p.OpenStatement,p.EndMacro);)Ir.push(Oe());return new le(St,Bt,Ir)}(),me(p.OpenStatement,"Expected {% token"),me(p.EndMacro,"Expected endmacro token"),me(p.CloseStatement,"Expected %} token");break;case p.For:++H,it=function(){const St=mt(!0);if(!(St instanceof N||St instanceof de))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${St.type} instead`);me(p.In,"Expected `in` keyword following loop variable");const Bt=It();me(p.CloseStatement,"Expected closing statement token");const Ir=[];for(;tt(p.OpenStatement,p.EndFor)&&tt(p.OpenStatement,p.Else);)Ir.push(Oe());const Mn=[];if(Ze(p.OpenStatement,p.Else))for(++H,++H,me(p.CloseStatement,"Expected closing statement token");tt(p.OpenStatement,p.EndFor);)Mn.push(Oe());return new re(St,Bt,Ir,Mn)}(),me(p.OpenStatement,"Expected {% token"),me(p.EndFor,"Expected endfor token"),me(p.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${U[H].type}`)}return it}();case p.OpenExpression:return function(){me(p.OpenExpression,"Expected opening expression token");const it=It();return me(p.CloseExpression,"Expected closing expression token"),it}();default:throw new SyntaxError(`Unexpected token type: ${U[H].type}`)}}function tt(...it){return H+it.length<=U.length&&it.some((St,Bt)=>St!==U[H+Bt].type)}function Ze(...it){return H+it.length<=U.length&&it.every((St,Bt)=>St===U[H+Bt].type)}function ct(){const it=It();if(Ze(p.Equals)){++H;const St=ct();return new se(it,St)}return it}function $t(){var Ir,Mn,gn,F,ar,Cn,wn,yn;const it=It();me(p.CloseStatement,"Expected closing statement token");const St=[],Bt=[];for(;((Ir=U[H])==null?void 0:Ir.type)!==p.OpenStatement||((Mn=U[H+1])==null?void 0:Mn.type)!==p.ElseIf&&((gn=U[H+1])==null?void 0:gn.type)!==p.Else&&((F=U[H+1])==null?void 0:F.type)!==p.EndIf;)St.push(Oe());if(((ar=U[H])==null?void 0:ar.type)===p.OpenStatement&&((Cn=U[H+1])==null?void 0:Cn.type)!==p.EndIf)if(++H,Ze(p.ElseIf))me(p.ElseIf,"Expected elseif token"),Bt.push($t());else for(me(p.Else,"Expected else token"),me(p.CloseStatement,"Expected closing statement token");((wn=U[H])==null?void 0:wn.type)!==p.OpenStatement||((yn=U[H+1])==null?void 0:yn.type)!==p.EndIf;)Bt.push(Oe());return new j(it,St,Bt)}function mt(it=!1){const St=it?an:It,Bt=[St()],Ir=Ze(p.Comma);for(;Ir&&(++H,Bt.push(St()),Ze(p.Comma)););return Ir?new de(Bt):Bt[0]}function It(){return function(){const it=Ft();if(Ze(p.If)){++H;const St=Ft();if(Ze(p.Else)){++H;const Bt=Ft();return new j(St,[it],[Bt])}return new Se(it,St)}return it}()}function Ft(){let it=Rt();for(;Ze(p.Or);){const St=U[H];++H;const Bt=Rt();it=new Ae(St,it,Bt)}return it}function Rt(){let it=_r();for(;Ze(p.And);){const St=U[H];++H;const Bt=_r();it=new Ae(St,it,Bt)}return it}function _r(){let it;for(;Ze(p.Not);){const St=U[H];++H;const Bt=_r();it=new Ue(St,Bt)}return it??function(){let St=yr();for(;Ze(p.ComparisonBinaryOperator)||Ze(p.In)||Ze(p.NotIn);){const Bt=U[H];++H;const Ir=yr();St=new Ae(Bt,St,Ir)}return St}()}function yr(){let it=Dn();for(;Ze(p.AdditiveBinaryOperator);){const St=U[H];++H;const Bt=Dn();it=new Ae(St,it,Bt)}return it}function Dr(it){let St=new ie(it,Gr());return St=Gt(St),Ze(p.OpenParen)&&(St=Dr(St)),St}function Gr(){me(p.OpenParen,"Expected opening parenthesis for arguments list");const it=function(){const St=[];for(;!Ze(p.CloseParen);){let Bt=It();if(Ze(p.Equals)){if(++H,!(Bt instanceof N))throw new SyntaxError("Expected identifier for keyword argument");const Ir=It();Bt=new oe(Bt,Ir)}St.push(Bt),Ze(p.Comma)&&++H}return St}();return me(p.CloseParen,"Expected closing parenthesis for arguments list"),it}function hn(){const it=[];let St=!1;for(;!Ze(p.CloseSquareBracket);)Ze(p.Colon)?(it.push(void 0),++H,St=!0):(it.push(It()),Ze(p.Colon)&&(++H,St=!0));if(it.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(St){if(it.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new dt(...it)}return it[0]}function Gt(it){for(;Ze(p.Dot)||Ze(p.OpenSquareBracket);){const St=U[H];let Bt;++H;const Ir=St.type!==p.Dot;if(Ir)Bt=hn(),me(p.CloseSquareBracket,"Expected closing square bracket");else if(Bt=an(),Bt.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");it=new G(it,Bt,Ir)}return it}function Dn(){let it=sn();for(;Ze(p.MultiplicativeBinaryOperator);){const St=U[H];++H;const Bt=sn();it=new Ae(St,it,Bt)}return it}function sn(){let it=function(){let St=function(){const Bt=Gt(an());return Ze(p.OpenParen)?Dr(Bt):Bt}();for(;Ze(p.Pipe);){++H;let Bt=an();if(!(Bt instanceof N))throw new SyntaxError("Expected identifier for the filter");Ze(p.OpenParen)&&(Bt=Dr(Bt)),St=new we(St,Bt)}return St}();for(;Ze(p.Is);){++H;const St=Ze(p.Not);St&&++H;let Bt=an();if(Bt instanceof R?Bt=new N(Bt.value.toString()):Bt instanceof K&&(Bt=new N("none")),!(Bt instanceof N))throw new SyntaxError("Expected identifier for the test");it=new Re(it,St,Bt)}return it}function an(){const it=U[H];switch(it.type){case p.NumericLiteral:return++H,new O(Number(it.value));case p.StringLiteral:return++H,new x(it.value);case p.BooleanLiteral:return++H,new R(it.value.toLowerCase()==="true");case p.NullLiteral:return++H,new K(null);case p.Identifier:return++H,new N(it.value);case p.OpenParen:{++H;const St=mt();if(U[H].type!==p.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${U[H].type} instead`);return++H,St}case p.OpenSquareBracket:{++H;const St=[];for(;!Ze(p.CloseSquareBracket);)St.push(It()),Ze(p.Comma)&&++H;return++H,new fe(St)}case p.OpenCurlyBracket:{++H;const St=new Map;for(;!Ze(p.CloseCurlyBracket);){const Bt=It();me(p.Colon,"Expected colon between key and value in object literal");const Ir=It();St.set(Bt,Ir),Ze(p.Comma)&&++H}return++H,new ge(St)}default:throw new SyntaxError(`Unexpected token: ${it.type}`)}}for(;H<U.length;)ae.body.push(Oe());return ae}function pe(U,ae,H=1){ae===void 0&&(ae=U,U=0);const me=[];for(let Oe=U;Oe<ae;Oe+=H)me.push(Oe);return me}function Ee(U,ae,H,me=1){const Oe=Math.sign(me);Oe>=0?(ae=(ae??(ae=0))<0?Math.max(U.length+ae,0):Math.min(ae,U.length),H=(H??(H=U.length))<0?Math.max(U.length+H,0):Math.min(H,U.length)):(ae=(ae??(ae=U.length-1))<0?Math.max(U.length+ae,-1):Math.min(ae,U.length-1),H=(H??(H=-1))<-1?Math.max(U.length+H,-1):Math.min(H,U.length-1));const tt=[];for(let Ze=ae;Oe*Ze<Oe*H;Ze+=me)tt.push(U[Ze]);return tt}function qe(U){return U.replace(/\b\w/g,ae=>ae.toUpperCase())}var xe=class{constructor(U=void 0){Me(this,"type","RuntimeValue");Me(this,"value");Me(this,"builtins",new Map);this.value=U}__bool__(){return new at(!!this.value)}},je=class extends xe{constructor(){super(...arguments);Me(this,"type","NumericValue")}},He=class extends xe{constructor(){super(...arguments);Me(this,"type","StringValue");Me(this,"builtins",new Map([["upper",new et(()=>new He(this.value.toUpperCase()))],["lower",new et(()=>new He(this.value.toLowerCase()))],["strip",new et(()=>new He(this.value.trim()))],["title",new et(()=>new He(qe(this.value)))],["length",new je(this.value.length)],["rstrip",new et(()=>new He(this.value.trimEnd()))],["lstrip",new et(()=>new He(this.value.trimStart()))],["split",new et(ae=>{const H=ae[0]??new ue;if(!(H instanceof He||H instanceof ue))throw new Error("sep argument must be a string or null");const me=ae[1]??new je(-1);if(!(me instanceof je))throw new Error("maxsplit argument must be a number");let Oe=[];if(H instanceof ue){const tt=this.value.trimStart();for(const{0:Ze,index:ct}of tt.matchAll(/\S+/g)){if(me.value!==-1&&Oe.length>=me.value&&ct!==void 0){Oe.push(Ze+tt.slice(ct+Ze.length));break}Oe.push(Ze)}}else{if(H.value==="")throw new Error("empty separator");Oe=this.value.split(H.value),me.value!==-1&&Oe.length>me.value&&Oe.push(Oe.splice(me.value).join(H.value))}return new Ce(Oe.map(tt=>new He(tt)))})]]))}},at=class extends xe{constructor(){super(...arguments);Me(this,"type","BooleanValue")}},Je=class extends xe{constructor(){super(...arguments);Me(this,"type","ObjectValue");Me(this,"builtins",new Map([["get",new et(([ae,H])=>{if(!(ae instanceof He))throw new Error(`Object key must be a string: got ${ae.type}`);return this.value.get(ae.value)??H??new ue})],["items",new et(()=>new Ce(Array.from(this.value.entries()).map(([ae,H])=>new Ce([new He(ae),H]))))]]))}__bool__(){return new at(this.value.size>0)}},be=class extends Je{constructor(){super(...arguments);Me(this,"type","KeywordArgumentsValue")}},Ce=class extends xe{constructor(){super(...arguments);Me(this,"type","ArrayValue");Me(this,"builtins",new Map([["length",new je(this.value.length)]]))}__bool__(){return new at(this.value.length>0)}},We=class extends Ce{constructor(){super(...arguments);Me(this,"type","TupleValue")}},et=class extends xe{constructor(){super(...arguments);Me(this,"type","FunctionValue")}},ue=class extends xe{constructor(){super(...arguments);Me(this,"type","NullValue")}},Be=class extends xe{constructor(){super(...arguments);Me(this,"type","UndefinedValue")}},nt=class{constructor(U){Me(this,"variables",new Map([["namespace",new et(U=>{if(U.length===0)return new Je(new Map);if(U.length!==1||!(U[0]instanceof Je))throw new Error("`namespace` expects either zero arguments or a single object argument");return U[0]})]]));Me(this,"tests",new Map([["boolean",U=>U.type==="BooleanValue"],["callable",U=>U instanceof et],["odd",U=>{if(U.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${U.type}`);return U.value%2!=0}],["even",U=>{if(U.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${U.type}`);return U.value%2==0}],["false",U=>U.type==="BooleanValue"&&!U.value],["true",U=>U.type==="BooleanValue"&&U.value],["none",U=>U.type==="NullValue"],["string",U=>U.type==="StringValue"],["number",U=>U.type==="NumericValue"],["integer",U=>U.type==="NumericValue"&&Number.isInteger(U.value)],["iterable",U=>U.type==="ArrayValue"||U.type==="StringValue"],["mapping",U=>U.type==="ObjectValue"],["lower",U=>{const ae=U.value;return U.type==="StringValue"&&ae===ae.toLowerCase()}],["upper",U=>{const ae=U.value;return U.type==="StringValue"&&ae===ae.toUpperCase()}],["none",U=>U.type==="NullValue"],["defined",U=>U.type!=="UndefinedValue"],["undefined",U=>U.type==="UndefinedValue"],["equalto",(U,ae)=>U.value===ae.value],["eq",(U,ae)=>U.value===ae.value]]));this.parent=U}set(U,ae){return this.declareVariable(U,ht(ae))}declareVariable(U,ae){if(this.variables.has(U))throw new SyntaxError(`Variable already declared: ${U}`);return this.variables.set(U,ae),ae}setVariable(U,ae){return this.variables.set(U,ae),ae}resolve(U){if(this.variables.has(U))return this;if(this.parent)return this.parent.resolve(U);throw new Error(`Unknown variable: ${U}`)}lookupVariable(U){try{return this.resolve(U).variables.get(U)??new Be}catch{return new Be}}},ft=class{constructor(U){Me(this,"global");this.global=U??new nt}run(U){return this.evaluate(U,this.global)}evaluateBinaryExpression(U,ae){const H=this.evaluate(U.left,ae);switch(U.operator.value){case"and":return H.__bool__().value?this.evaluate(U.right,ae):H;case"or":return H.__bool__().value?H:this.evaluate(U.right,ae)}const me=this.evaluate(U.right,ae);switch(U.operator.value){case"==":return new at(H.value==me.value);case"!=":return new at(H.value!=me.value)}if(H instanceof Be||me instanceof Be)throw new Error("Cannot perform operation on undefined values");if(H instanceof ue||me instanceof ue)throw new Error("Cannot perform operation on null values");if(H instanceof je&&me instanceof je)switch(U.operator.value){case"+":return new je(H.value+me.value);case"-":return new je(H.value-me.value);case"*":return new je(H.value*me.value);case"/":return new je(H.value/me.value);case"%":return new je(H.value%me.value);case"<":return new at(H.value<me.value);case">":return new at(H.value>me.value);case">=":return new at(H.value>=me.value);case"<=":return new at(H.value<=me.value)}else if(H instanceof Ce&&me instanceof Ce){if(U.operator.value==="+")return new Ce(H.value.concat(me.value))}else if(me instanceof Ce){const Oe=me.value.find(tt=>tt.value===H.value)!==void 0;switch(U.operator.value){case"in":return new at(Oe);case"not in":return new at(!Oe)}}if((H instanceof He||me instanceof He)&&U.operator.value==="+")return new He(H.value.toString()+me.value.toString());if(H instanceof He&&me instanceof He)switch(U.operator.value){case"in":return new at(me.value.includes(H.value));case"not in":return new at(!me.value.includes(H.value))}if(H instanceof He&&me instanceof Je)switch(U.operator.value){case"in":return new at(me.value.has(H.value));case"not in":return new at(!me.value.has(H.value))}throw new SyntaxError(`Unknown operator "${U.operator.value}" between ${H.type} and ${me.type}`)}evaluateArguments(U,ae){const H=[],me=new Map;for(const Oe of U)if(Oe.type==="KeywordArgumentExpression"){const tt=Oe;me.set(tt.key.value,this.evaluate(tt.value,ae))}else{if(me.size>0)throw new Error("Positional arguments must come before keyword arguments");H.push(this.evaluate(Oe,ae))}return[H,me]}evaluateFilterExpression(U,ae){const H=this.evaluate(U.operand,ae);if(U.filter.type==="Identifier"){const me=U.filter;if(me.value==="tojson")return new He(gt(H));if(H instanceof Ce)switch(me.value){case"list":return H;case"first":return H.value[0];case"last":return H.value[H.value.length-1];case"length":return new je(H.value.length);case"reverse":return new Ce(H.value.reverse());case"sort":return new Ce(H.value.sort((Oe,tt)=>{if(Oe.type!==tt.type)throw new Error(`Cannot compare different types: ${Oe.type} and ${tt.type}`);switch(Oe.type){case"NumericValue":return Oe.value-tt.value;case"StringValue":return Oe.value.localeCompare(tt.value);default:throw new Error(`Cannot compare type: ${Oe.type}`)}}));case"join":return new He(H.value.map(Oe=>Oe.value).join(""));default:throw new Error(`Unknown ArrayValue filter: ${me.value}`)}else if(H instanceof He)switch(me.value){case"length":return new je(H.value.length);case"upper":return new He(H.value.toUpperCase());case"lower":return new He(H.value.toLowerCase());case"title":return new He(qe(H.value));case"capitalize":return new He(H.value.charAt(0).toUpperCase()+H.value.slice(1));case"trim":return new He(H.value.trim());case"indent":return new He(H.value.split(`
`).map((Oe,tt)=>tt===0||Oe.length===0?Oe:"    "+Oe).join(`
`));case"join":case"string":return H;default:throw new Error(`Unknown StringValue filter: ${me.value}`)}else{if(H instanceof je){if(me.value==="abs")return new je(Math.abs(H.value));throw new Error(`Unknown NumericValue filter: ${me.value}`)}if(H instanceof Je)switch(me.value){case"items":return new Ce(Array.from(H.value.entries()).map(([Oe,tt])=>new Ce([new He(Oe),tt])));case"length":return new je(H.value.size);default:throw new Error(`Unknown ObjectValue filter: ${me.value}`)}}throw new Error(`Cannot apply filter "${me.value}" to type: ${H.type}`)}if(U.filter.type==="CallExpression"){const me=U.filter;if(me.callee.type!=="Identifier")throw new Error(`Unknown filter: ${me.callee.type}`);const Oe=me.callee.value;if(Oe==="tojson"){const[,tt]=this.evaluateArguments(me.args,ae),Ze=tt.get("indent")??new ue;if(!(Ze instanceof je||Ze instanceof ue))throw new Error("If set, indent must be a number");return new He(gt(H,Ze.value))}if(Oe==="join"){let tt;if(H instanceof He)tt=Array.from(H.value);else{if(!(H instanceof Ce))throw new Error(`Cannot apply filter "${Oe}" to type: ${H.type}`);tt=H.value.map(mt=>mt.value)}const[Ze,ct]=this.evaluateArguments(me.args,ae),$t=Ze.at(0)??ct.get("separator")??new He("");if(!($t instanceof He))throw new Error("separator must be a string");return new He(tt.join($t.value))}if(H instanceof Ce){switch(Oe){case"selectattr":case"rejectattr":{const tt=Oe==="selectattr";if(H.value.some(Ft=>!(Ft instanceof Je)))throw new Error(`\`${Oe}\` can only be applied to array of objects`);if(me.args.some(Ft=>Ft.type!=="StringLiteral"))throw new Error(`arguments of \`${Oe}\` must be strings`);const[Ze,ct,$t]=me.args.map(Ft=>this.evaluate(Ft,ae));let mt;if(ct){const Ft=ae.tests.get(ct.value);if(!Ft)throw new Error(`Unknown test: ${ct.value}`);mt=Ft}else mt=(...Ft)=>Ft[0].__bool__().value;const It=H.value.filter(Ft=>{const Rt=Ft.value.get(Ze.value),_r=!!Rt&&mt(Rt,$t);return tt?_r:!_r});return new Ce(It)}case"map":{const[,tt]=this.evaluateArguments(me.args,ae);if(tt.has("attribute")){const Ze=tt.get("attribute");if(!(Ze instanceof He))throw new Error("attribute must be a string");const ct=tt.get("default"),$t=H.value.map(mt=>{if(!(mt instanceof Je))throw new Error("items in map must be an object");return mt.value.get(Ze.value)??ct??new Be});return new Ce($t)}throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${Oe}`)}if(H instanceof He){if(Oe==="indent"){const[tt,Ze]=this.evaluateArguments(me.args,ae),ct=tt.at(0)??Ze.get("width")??new je(4);if(!(ct instanceof je))throw new Error("width must be a number");const $t=tt.at(1)??Ze.get("first")??new at(!1),mt=tt.at(2)??Ze.get("blank")??new at(!1),It=H.value.split(`
`),Ft=" ".repeat(ct.value),Rt=It.map((_r,yr)=>!$t.value&&yr===0||!mt.value&&_r.length===0?_r:Ft+_r);return new He(Rt.join(`
`))}throw new Error(`Unknown StringValue filter: ${Oe}`)}throw new Error(`Cannot apply filter "${Oe}" to type: ${H.type}`)}throw new Error(`Unknown filter: ${U.filter.type}`)}evaluateTestExpression(U,ae){const H=this.evaluate(U.operand,ae),me=ae.tests.get(U.test.value);if(!me)throw new Error(`Unknown test: ${U.test.value}`);const Oe=me(H);return new at(U.negate?!Oe:Oe)}evaluateUnaryExpression(U,ae){const H=this.evaluate(U.argument,ae);if(U.operator.value==="not")return new at(!H.value);throw new SyntaxError(`Unknown operator: ${U.operator.value}`)}evalProgram(U,ae){return this.evaluateBlock(U.body,ae)}evaluateBlock(U,ae){let H="";for(const me of U){const Oe=this.evaluate(me,ae);Oe.type!=="NullValue"&&Oe.type!=="UndefinedValue"&&(H+=Oe.value)}return new He(H)}evaluateIdentifier(U,ae){return ae.lookupVariable(U.value)}evaluateCallExpression(U,ae){const[H,me]=this.evaluateArguments(U.args,ae);me.size>0&&H.push(new be(me));const Oe=this.evaluate(U.callee,ae);if(Oe.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${Oe.type}`);return Oe.value(H,ae)}evaluateSliceExpression(U,ae,H){if(!(U instanceof Ce||U instanceof He))throw new Error("Slice object must be an array or string");const me=this.evaluate(ae.start,H),Oe=this.evaluate(ae.stop,H),tt=this.evaluate(ae.step,H);if(!(me instanceof je||me instanceof Be))throw new Error("Slice start must be numeric or undefined");if(!(Oe instanceof je||Oe instanceof Be))throw new Error("Slice stop must be numeric or undefined");if(!(tt instanceof je||tt instanceof Be))throw new Error("Slice step must be numeric or undefined");return U instanceof Ce?new Ce(Ee(U.value,me.value,Oe.value,tt.value)):new He(Ee(Array.from(U.value),me.value,Oe.value,tt.value).join(""))}evaluateMemberExpression(U,ae){const H=this.evaluate(U.object,ae);let me,Oe;if(U.computed){if(U.property.type==="SliceExpression")return this.evaluateSliceExpression(H,U.property,ae);me=this.evaluate(U.property,ae)}else me=new He(U.property.value);if(H instanceof Je){if(!(me instanceof He))throw new Error(`Cannot access property with non-string: got ${me.type}`);Oe=H.value.get(me.value)??H.builtins.get(me.value)}else if(H instanceof Ce||H instanceof He)if(me instanceof je)Oe=H.value.at(me.value),H instanceof He&&(Oe=new He(H.value.at(me.value)));else{if(!(me instanceof He))throw new Error(`Cannot access property with non-string/non-number: got ${me.type}`);Oe=H.builtins.get(me.value)}else{if(!(me instanceof He))throw new Error(`Cannot access property with non-string: got ${me.type}`);Oe=H.builtins.get(me.value)}return Oe instanceof xe?Oe:new Be}evaluateSet(U,ae){const H=this.evaluate(U.value,ae);if(U.assignee.type==="Identifier"){const me=U.assignee.value;ae.setVariable(me,H)}else{if(U.assignee.type!=="MemberExpression")throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(U.assignee)}`);{const me=U.assignee,Oe=this.evaluate(me.object,ae);if(!(Oe instanceof Je))throw new Error("Cannot assign to member of non-object");if(me.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");Oe.value.set(me.property.value,H)}}return new ue}evaluateIf(U,ae){const H=this.evaluate(U.test,ae);return this.evaluateBlock(H.__bool__().value?U.body:U.alternate,ae)}evaluateFor(U,ae){const H=new nt(ae);let me,Oe;if(U.iterable.type==="SelectExpression"){const mt=U.iterable;Oe=this.evaluate(mt.iterable,H),me=mt.test}else Oe=this.evaluate(U.iterable,H);if(!(Oe instanceof Ce))throw new Error(`Expected iterable type in for loop: got ${Oe.type}`);const tt=[],Ze=[];for(let mt=0;mt<Oe.value.length;++mt){const It=new nt(H),Ft=Oe.value[mt];let Rt;if(U.loopvar.type==="Identifier")Rt=_r=>_r.setVariable(U.loopvar.value,Ft);else{if(U.loopvar.type!=="TupleLiteral")throw new Error(`Invalid loop variable(s): ${U.loopvar.type}`);{const _r=U.loopvar;if(Ft.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${Ft.type}`);const yr=Ft;if(_r.value.length!==yr.value.length)throw new Error(`Too ${_r.value.length>yr.value.length?"few":"many"} items to unpack`);Rt=Dr=>{for(let Gr=0;Gr<_r.value.length;++Gr){if(_r.value[Gr].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${_r.value[Gr].type}`);Dr.setVariable(_r.value[Gr].value,yr.value[Gr])}}}}me&&(Rt(It),!this.evaluate(me,It).__bool__().value)||(tt.push(Ft),Ze.push(Rt))}let ct="",$t=!0;for(let mt=0;mt<tt.length;++mt){const It=new Map([["index",new je(mt+1)],["index0",new je(mt)],["revindex",new je(tt.length-mt)],["revindex0",new je(tt.length-mt-1)],["first",new at(mt===0)],["last",new at(mt===tt.length-1)],["length",new je(tt.length)],["previtem",mt>0?tt[mt-1]:new Be],["nextitem",mt<tt.length-1?tt[mt+1]:new Be]]);H.setVariable("loop",new Je(It)),Ze[mt](H),ct+=this.evaluateBlock(U.body,H).value,$t=!1}return $t&&(ct+=this.evaluateBlock(U.defaultBlock,H).value),new He(ct)}evaluateMacro(U,ae){return ae.setVariable(U.name.value,new et((H,me)=>{var Ze;const Oe=new nt(me);let tt;H=H.slice(),((Ze=H.at(-1))==null?void 0:Ze.type)==="KeywordArgumentsValue"&&(tt=H.pop());for(let ct=0;ct<U.args.length;++ct){const $t=U.args[ct],mt=H[ct];if($t.type==="Identifier"){const It=$t;if(!mt)throw new Error(`Missing positional argument: ${It.value}`);Oe.setVariable(It.value,mt)}else{if($t.type!=="KeywordArgumentExpression")throw new Error(`Unknown argument type: ${$t.type}`);{const It=$t,Ft=mt??(tt==null?void 0:tt.value.get(It.key.value))??this.evaluate(It.value,Oe);Oe.setVariable(It.key.value,Ft)}}}return this.evaluateBlock(U.body,Oe)})),new ue}evaluate(U,ae){if(U===void 0)return new Be;switch(U.type){case"Program":return this.evalProgram(U,ae);case"Set":return this.evaluateSet(U,ae);case"If":return this.evaluateIf(U,ae);case"For":return this.evaluateFor(U,ae);case"Macro":return this.evaluateMacro(U,ae);case"NumericLiteral":return new je(Number(U.value));case"StringLiteral":return new He(U.value);case"BooleanLiteral":return new at(U.value);case"NullLiteral":return new ue(U.value);case"ArrayLiteral":return new Ce(U.value.map(H=>this.evaluate(H,ae)));case"TupleLiteral":return new We(U.value.map(H=>this.evaluate(H,ae)));case"ObjectLiteral":{const H=new Map;for(const[me,Oe]of U.value){const tt=this.evaluate(me,ae);if(!(tt instanceof He))throw new Error(`Object keys must be strings: got ${tt.type}`);H.set(tt.value,this.evaluate(Oe,ae))}return new Je(H)}case"Identifier":return this.evaluateIdentifier(U,ae);case"CallExpression":return this.evaluateCallExpression(U,ae);case"MemberExpression":return this.evaluateMemberExpression(U,ae);case"UnaryExpression":return this.evaluateUnaryExpression(U,ae);case"BinaryExpression":return this.evaluateBinaryExpression(U,ae);case"FilterExpression":return this.evaluateFilterExpression(U,ae);case"TestExpression":return this.evaluateTestExpression(U,ae);default:throw new SyntaxError(`Unknown node type: ${U.type}`)}}};function ht(U){switch(typeof U){case"number":return new je(U);case"string":return new He(U);case"boolean":return new at(U);case"undefined":return new Be;case"object":return U===null?new ue:Array.isArray(U)?new Ce(U.map(ht)):new Je(new Map(Object.entries(U).map(([ae,H])=>[ae,ht(H)])));case"function":return new et((ae,H)=>ht(U(...ae.map(me=>me.value))??null));default:throw new Error(`Cannot convert to runtime value: ${U}`)}}function gt(U,ae,H){const me=H??0;switch(U.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(U.value);case"ArrayValue":case"ObjectValue":{const Oe=ae?" ".repeat(ae):"",tt=`
`+Oe.repeat(me),Ze=tt+Oe;if(U.type==="ArrayValue"){const ct=U.value.map($t=>gt($t,ae,me+1));return ae?`[${Ze}${ct.join(`,${Ze}`)}${tt}]`:`[${ct.join(", ")}]`}{const ct=Array.from(U.value.entries()).map(([$t,mt])=>{const It=`"${$t}": ${gt(mt,ae,me+1)}`;return ae?`${Ze}${It}`:It});return ae?`{${ct.join(",")}${tt}}`:`{${ct.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${U.type}`)}}var yt=class{constructor(U){Me(this,"parsed");const ae=_(U,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=Z(ae)}render(U){const ae=new nt;if(ae.set("false",!1),ae.set("true",!0),ae.set("raise_exception",H=>{throw new Error(H)}),ae.set("range",pe),U)for(const[H,me]of Object.entries(U))ae.set(H,me);return new ft(ae).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(Te,k,n)=>{n.r(k),n.d(k,{registerBackend:()=>V,resolveBackendAndExecutionProviders:()=>z});const p=new Map,I=[],V=($,y,_)=>{if(!y||typeof y.init!="function"||typeof y.createInferenceSessionHandler!="function")throw new TypeError("not a valid backend");{const A=p.get($);if(A===void 0)p.set($,{backend:y,priority:_});else{if(A.priority>_)return;if(A.priority===_&&A.backend!==y)throw new Error(`cannot register backend "${$}" using priority ${_}`)}if(_>=0){const b=I.indexOf($);b!==-1&&I.splice(b,1);for(let j=0;j<I.length;j++)if(p.get(I[j]).priority<=_)return void I.splice(j,0,$);I.push($)}}},Y=async $=>{const y=p.get($);if(!y)return"backend not found.";if(y.initialized)return y.backend;if(y.aborted)return y.error;{const _=!!y.initPromise;try{return _||(y.initPromise=y.backend.init($)),await y.initPromise,y.initialized=!0,y.backend}catch(A){return _||(y.error=`${A}`,y.aborted=!0),y.error}finally{delete y.initPromise}}},z=async $=>{const y=$.executionProviders||[],_=y.map(le=>typeof le=="string"?le:le.name),A=_.length===0?I:_;let b;const j=[],re=new Set;for(const le of A){const L=await Y(le);typeof L=="string"?j.push({name:le,err:L}):(b||(b=L),b===L&&re.add(le))}if(!b)throw new Error(`no available backend found. ERR: ${j.map(le=>`[${le.name}] ${le.err}`).join(", ")}`);for(const{name:le,err:L}of j)_.includes(le)&&console.warn(`removing requested execution provider "${le}" from session options because it is not available: ${L}`);const se=y.filter(le=>re.has(typeof le=="string"?le:le.name));return[b,new Proxy($,{get:(le,L)=>L==="executionProviders"?se:Reflect.get(le,L)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(Te,k,n)=>{n.r(k),n.d(k,{registerBackend:()=>p.registerBackend});var p=n("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(Te,k,n)=>{n.r(k),n.d(k,{env:()=>V});var p=n("./node_modules/onnxruntime-common/dist/esm/version.js");let I="warning";const V={wasm:{},webgl:{},webgpu:{},versions:{common:p.version},set logLevel(Y){if(Y!==void 0){if(typeof Y!="string"||["verbose","info","warning","error","fatal"].indexOf(Y)===-1)throw new Error(`Unsupported logging level: ${Y}`);I=Y}},get logLevel(){return I}};Object.defineProperty(V,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(Te,k,n)=>{n.r(k),n.d(k,{env:()=>p});const p=n("./node_modules/onnxruntime-common/dist/esm/env-impl.js").env},"./node_modules/onnxruntime-common/dist/esm/index.js":(Te,k,n)=>{n.r(k),n.d(k,{InferenceSession:()=>V.InferenceSession,TRACE:()=>z.TRACE,TRACE_FUNC_BEGIN:()=>z.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>z.TRACE_FUNC_END,Tensor:()=>Y.Tensor,TrainingSession:()=>$.TrainingSession,env:()=>I.env,registerBackend:()=>p.registerBackend});var p=n("./node_modules/onnxruntime-common/dist/esm/backend.js"),I=n("./node_modules/onnxruntime-common/dist/esm/env.js"),V=n("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),Y=n("./node_modules/onnxruntime-common/dist/esm/tensor.js");n("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),n("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var z=n("./node_modules/onnxruntime-common/dist/esm/trace.js");n("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),n("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var $=n("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(Te,k,n)=>{n.r(k),n.d(k,{InferenceSession:()=>Y});var p=n("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),I=n("./node_modules/onnxruntime-common/dist/esm/tensor.js"),V=n("./node_modules/onnxruntime-common/dist/esm/trace.js");class Y{constructor($){this.handler=$}async run($,y,_){(0,V.TRACE_FUNC_BEGIN)();const A={};let b={};if(typeof $!="object"||$===null||$ instanceof I.Tensor||Array.isArray($))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let j=!0;if(typeof y=="object"){if(y===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(y instanceof I.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(y)){if(y.length===0)throw new TypeError("'fetches' cannot be an empty array.");j=!1;for(const le of y){if(typeof le!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(le)===-1)throw new RangeError(`'fetches' contains invalid output name: ${le}.`);A[le]=null}if(typeof _=="object"&&_!==null)b=_;else if(_!==void 0)throw new TypeError("'options' must be an object.")}else{let le=!1;const L=Object.getOwnPropertyNames(y);for(const G of this.outputNames)if(L.indexOf(G)!==-1){const ie=y[G];(ie===null||ie instanceof I.Tensor)&&(le=!0,j=!1,A[G]=ie)}if(le){if(typeof _=="object"&&_!==null)b=_;else if(_!==void 0)throw new TypeError("'options' must be an object.")}else b=y}}else if(y!==void 0)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const le of this.inputNames)if($[le]===void 0)throw new Error(`input '${le}' is missing in 'feeds'.`);if(j)for(const le of this.outputNames)A[le]=null;const re=await this.handler.run($,A,b),se={};for(const le in re)if(Object.hasOwnProperty.call(re,le)){const L=re[le];L instanceof I.Tensor?se[le]=L:se[le]=new I.Tensor(L.type,L.data,L.dims)}return(0,V.TRACE_FUNC_END)(),se}async release(){return this.handler.dispose()}static async create($,y,_,A){let b;(0,V.TRACE_FUNC_BEGIN)();let j={};if(typeof $=="string"){if(b=$,typeof y=="object"&&y!==null)j=y;else if(y!==void 0)throw new TypeError("'options' must be an object.")}else if($ instanceof Uint8Array){if(b=$,typeof y=="object"&&y!==null)j=y;else if(y!==void 0)throw new TypeError("'options' must be an object.")}else{if(!($ instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&$ instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{const L=$;let G=0,ie=$.byteLength;if(typeof y=="object"&&y!==null)j=y;else if(typeof y=="number"){if(G=y,!Number.isSafeInteger(G))throw new RangeError("'byteOffset' must be an integer.");if(G<0||G>=L.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${L.byteLength}).`);if(ie=$.byteLength-G,typeof _=="number"){if(ie=_,!Number.isSafeInteger(ie))throw new RangeError("'byteLength' must be an integer.");if(ie<=0||G+ie>L.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${L.byteLength-G}].`);if(typeof A=="object"&&A!==null)j=A;else if(A!==void 0)throw new TypeError("'options' must be an object.")}else if(_!==void 0)throw new TypeError("'byteLength' must be a number.")}else if(y!==void 0)throw new TypeError("'options' must be an object.");b=new Uint8Array(L,G,ie)}}const[re,se]=await(0,p.resolveBackendAndExecutionProviders)(j),le=await re.createInferenceSessionHandler(b,se);return(0,V.TRACE_FUNC_END)(),new Y(le)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(Te,k,n)=>{n.r(k),n.d(k,{InferenceSession:()=>p});const p=n("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js").InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(Te,k,n)=>{n.r(k)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(Te,k,n)=>{n.r(k)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(Te,k,n)=>{n.r(k),n.d(k,{tensorToDataURL:()=>p,tensorToImageData:()=>I});const p=(V,Y)=>{const z=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);z.width=V.dims[3],z.height=V.dims[2];const $=z.getContext("2d");if($!=null){let y,_;(Y==null?void 0:Y.tensorLayout)!==void 0&&Y.tensorLayout==="NHWC"?(y=V.dims[2],_=V.dims[3]):(y=V.dims[3],_=V.dims[2]);const A=(Y==null?void 0:Y.format)!==void 0?Y.format:"RGB",b=Y==null?void 0:Y.norm;let j,re;b===void 0||b.mean===void 0?j=[255,255,255,255]:typeof b.mean=="number"?j=[b.mean,b.mean,b.mean,b.mean]:(j=[b.mean[0],b.mean[1],b.mean[2],0],b.mean[3]!==void 0&&(j[3]=b.mean[3])),b===void 0||b.bias===void 0?re=[0,0,0,0]:typeof b.bias=="number"?re=[b.bias,b.bias,b.bias,b.bias]:(re=[b.bias[0],b.bias[1],b.bias[2],0],b.bias[3]!==void 0&&(re[3]=b.bias[3]));const se=_*y;let le=0,L=se,G=2*se,ie=-1;A==="RGBA"?(le=0,L=se,G=2*se,ie=3*se):A==="RGB"?(le=0,L=se,G=2*se):A==="RBG"&&(le=0,G=se,L=2*se);for(let N=0;N<_;N++)for(let v=0;v<y;v++){const O=(V.data[le++]-re[0])*j[0],x=(V.data[L++]-re[1])*j[1],R=(V.data[G++]-re[2])*j[2],K=ie===-1?255:(V.data[ie++]-re[3])*j[3];$.fillStyle="rgba("+O+","+x+","+R+","+K+")",$.fillRect(v,N,1,1)}if("toDataURL"in z)return z.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},I=(V,Y)=>{const z=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let $;if(z==null)throw new Error("Can not access image data");{let y,_,A;(Y==null?void 0:Y.tensorLayout)!==void 0&&Y.tensorLayout==="NHWC"?(y=V.dims[2],_=V.dims[1],A=V.dims[3]):(y=V.dims[3],_=V.dims[2],A=V.dims[1]);const b=Y!==void 0&&Y.format!==void 0?Y.format:"RGB",j=Y==null?void 0:Y.norm;let re,se;j===void 0||j.mean===void 0?re=[255,255,255,255]:typeof j.mean=="number"?re=[j.mean,j.mean,j.mean,j.mean]:(re=[j.mean[0],j.mean[1],j.mean[2],255],j.mean[3]!==void 0&&(re[3]=j.mean[3])),j===void 0||j.bias===void 0?se=[0,0,0,0]:typeof j.bias=="number"?se=[j.bias,j.bias,j.bias,j.bias]:(se=[j.bias[0],j.bias[1],j.bias[2],0],j.bias[3]!==void 0&&(se[3]=j.bias[3]));const le=_*y;if(Y!==void 0&&(Y.format!==void 0&&A===4&&Y.format!=="RGBA"||A===3&&Y.format!=="RGB"&&Y.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const L=4;let G=0,ie=1,N=2,v=3,O=0,x=le,R=2*le,K=-1;b==="RGBA"?(O=0,x=le,R=2*le,K=3*le):b==="RGB"?(O=0,x=le,R=2*le):b==="RBG"&&(O=0,R=le,x=2*le),$=z.createImageData(y,_);for(let fe=0;fe<_*y;G+=L,ie+=L,N+=L,v+=L,fe++)$.data[G]=(V.data[O++]-se[0])*re[0],$.data[ie]=(V.data[x++]-se[1])*re[1],$.data[N]=(V.data[R++]-se[2])*re[2],$.data[v]=K===-1?255:(V.data[K++]-se[3])*re[3]}return $}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(Te,k,n)=>{n.r(k)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(Te,k,n)=>{n.r(k),n.d(k,{bufferToTensor:()=>I,tensorFromGpuBuffer:()=>z,tensorFromImage:()=>V,tensorFromMLTensor:()=>$,tensorFromPinnedBuffer:()=>y,tensorFromTexture:()=>Y});var p=n("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const I=(_,A)=>{if(_===void 0)throw new Error("Image buffer must be defined");if(A.height===void 0||A.width===void 0)throw new Error("Image height and width must be defined");if(A.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:b,width:j}=A,re=A.norm??{mean:255,bias:0};let se,le;se=typeof re.mean=="number"?[re.mean,re.mean,re.mean,re.mean]:[re.mean[0],re.mean[1],re.mean[2],re.mean[3]??255],le=typeof re.bias=="number"?[re.bias,re.bias,re.bias,re.bias]:[re.bias[0],re.bias[1],re.bias[2],re.bias[3]??0];const L=A.format!==void 0?A.format:"RGBA",G=A.tensorFormat!==void 0&&A.tensorFormat!==void 0?A.tensorFormat:"RGB",ie=b*j,N=G==="RGBA"?new Float32Array(4*ie):new Float32Array(3*ie);let v=4,O=0,x=1,R=2,K=3,fe=0,de=ie,ge=2*ie,Ae=-1;L==="RGB"&&(v=3,O=0,x=1,R=2,K=-1),G==="RGBA"?Ae=3*ie:G==="RBG"?(fe=0,ge=ie,de=2*ie):G==="BGR"&&(ge=0,de=ie,fe=2*ie);for(let we=0;we<ie;we++,O+=v,R+=v,x+=v,K+=v)N[fe++]=(_[O]+le[0])/se[0],N[de++]=(_[x]+le[1])/se[1],N[ge++]=(_[R]+le[2])/se[2],Ae!==-1&&K!==-1&&(N[Ae++]=(_[K]+le[3])/se[3]);return G==="RGBA"?new p.Tensor("float32",N,[1,4,b,j]):new p.Tensor("float32",N,[1,3,b,j])},V=async(_,A)=>{const b=typeof HTMLImageElement<"u"&&_ instanceof HTMLImageElement,j=typeof ImageData<"u"&&_ instanceof ImageData,re=typeof ImageBitmap<"u"&&_ instanceof ImageBitmap,se=typeof _=="string";let le,L=A??{};const G=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},ie=N=>typeof HTMLCanvasElement<"u"&&N instanceof HTMLCanvasElement||N instanceof OffscreenCanvas?N.getContext("2d"):null;if(b){const N=G();N.width=_.width,N.height=_.height;const v=ie(N);if(v==null)throw new Error("Can not access image data");{let O=_.height,x=_.width;if(A!==void 0&&A.resizedHeight!==void 0&&A.resizedWidth!==void 0&&(O=A.resizedHeight,x=A.resizedWidth),A!==void 0){if(L=A,A.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");L.tensorFormat="RGBA",L.height=O,L.width=x}else L.tensorFormat="RGBA",L.height=O,L.width=x;v.drawImage(_,0,0),le=v.getImageData(0,0,x,O).data}}else{if(!j){if(re){if(A===void 0)throw new Error("Please provide image config with format for Imagebitmap");const N=G();N.width=_.width,N.height=_.height;const v=ie(N);if(v!=null){const O=_.height,x=_.width;return v.drawImage(_,0,0,x,O),le=v.getImageData(0,0,x,O).data,L.height=O,L.width=x,I(le,L)}throw new Error("Can not access image data")}if(se)return new Promise((N,v)=>{const O=G(),x=ie(O);if(!_||!x)return v();const R=new Image;R.crossOrigin="Anonymous",R.src=_,R.onload=()=>{O.width=R.width,O.height=R.height,x.drawImage(R,0,0,O.width,O.height);const K=x.getImageData(0,0,O.width,O.height);L.height=O.height,L.width=O.width,N(I(K.data,L))}});throw new Error("Input data provided is not supported - aborted tensor creation")}{let N,v;if(A!==void 0&&A.resizedWidth!==void 0&&A.resizedHeight!==void 0?(N=A.resizedHeight,v=A.resizedWidth):(N=_.height,v=_.width),A!==void 0&&(L=A),L.format="RGBA",L.height=N,L.width=v,A!==void 0){const O=G();O.width=v,O.height=N;const x=ie(O);if(x==null)throw new Error("Can not access image data");x.putImageData(_,0,0),le=x.getImageData(0,0,v,N).data}else le=_.data}}if(le!==void 0)return I(le,L);throw new Error("Input data provided is not supported - aborted tensor creation")},Y=(_,A)=>{const{width:b,height:j,download:re,dispose:se}=A,le=[1,j,b,4];return new p.Tensor({location:"texture",type:"float32",texture:_,dims:le,download:re,dispose:se})},z=(_,A)=>{const{dataType:b,dims:j,download:re,dispose:se}=A;return new p.Tensor({location:"gpu-buffer",type:b??"float32",gpuBuffer:_,dims:j,download:re,dispose:se})},$=(_,A)=>{const{dataType:b,dims:j,download:re,dispose:se}=A;return new p.Tensor({location:"ml-tensor",type:b??"float32",mlTensor:_,dims:j,download:re,dispose:se})},y=(_,A,b)=>new p.Tensor({location:"cpu-pinned",type:_,data:A,dims:b??[A.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(Te,k,n)=>{n.r(k)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(Te,k,n)=>{n.r(k),n.d(k,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>I,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>p,checkTypedArray:()=>Y});const p=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),I=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let V=!1;const Y=()=>{if(!V){V=!0;const z=typeof BigInt64Array<"u"&&BigInt64Array.from,$=typeof BigUint64Array<"u"&&BigUint64Array.from,y=typeof Float16Array<"u"&&Float16Array.from;z&&(p.set("int64",BigInt64Array),I.set(BigInt64Array,"int64")),$&&(p.set("uint64",BigUint64Array),I.set(BigUint64Array,"uint64")),y?(p.set("float16",Float16Array),I.set(Float16Array,"float16")):p.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(Te,k,n)=>{n.r(k),n.d(k,{Tensor:()=>z});var p=n("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),I=n("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),V=n("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),Y=n("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class z{constructor(y,_,A){let b,j;if((0,V.checkTypedArray)(),typeof y=="object"&&"location"in y)switch(this.dataLocation=y.location,b=y.type,j=y.dims,y.location){case"cpu-pinned":{const se=V.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(b);if(!se)throw new TypeError(`unsupported type "${b}" to create tensor from pinned buffer`);if(!(y.data instanceof se))throw new TypeError(`buffer should be of type ${se.name}`);this.cpuData=y.data;break}case"texture":if(b!=="float32")throw new TypeError(`unsupported type "${b}" to create tensor from texture`);this.gpuTextureData=y.texture,this.downloader=y.download,this.disposer=y.dispose;break;case"gpu-buffer":if(b!=="float32"&&b!=="float16"&&b!=="int32"&&b!=="int64"&&b!=="uint32"&&b!=="uint8"&&b!=="bool"&&b!=="uint4"&&b!=="int4")throw new TypeError(`unsupported type "${b}" to create tensor from gpu buffer`);this.gpuBufferData=y.gpuBuffer,this.downloader=y.download,this.disposer=y.dispose;break;case"ml-tensor":if(b!=="float32"&&b!=="float16"&&b!=="int32"&&b!=="int64"&&b!=="uint32"&&b!=="uint64"&&b!=="int8"&&b!=="uint8"&&b!=="bool")throw new TypeError(`unsupported type "${b}" to create tensor from MLTensor`);this.mlTensorData=y.mlTensor,this.downloader=y.download,this.disposer=y.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let se,le;if(typeof y=="string")if(b=y,le=A,y==="string"){if(!Array.isArray(_))throw new TypeError("A string tensor's data must be a string array.");se=_}else{const L=V.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(y);if(L===void 0)throw new TypeError(`Unsupported tensor type: ${y}.`);if(Array.isArray(_)){if(y==="float16"&&L===Uint16Array||y==="uint4"||y==="int4")throw new TypeError(`Creating a ${y} tensor from number array is not supported. Please use ${L.name} as data.`);se=y==="uint64"||y==="int64"?L.from(_,BigInt):L.from(_)}else if(_ instanceof L)se=_;else{if(!(_ instanceof Uint8ClampedArray))throw new TypeError(`A ${b} tensor's data must be type of ${L}`);if(y!=="uint8")throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");se=Uint8Array.from(_)}}else if(le=_,Array.isArray(y)){if(y.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const L=typeof y[0];if(L==="string")b="string",se=y;else{if(L!=="boolean")throw new TypeError(`Invalid element type of data array: ${L}.`);b="bool",se=Uint8Array.from(y)}}else if(y instanceof Uint8ClampedArray)b="uint8",se=Uint8Array.from(y);else{const L=V.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(y.constructor);if(L===void 0)throw new TypeError(`Unsupported type for tensor data: ${y.constructor}.`);b=L,se=y}if(le===void 0)le=[se.length];else if(!Array.isArray(le))throw new TypeError("A tensor's dims must be a number array");j=le,this.cpuData=se,this.dataLocation="cpu"}const re=(0,Y.calculateSize)(j);if(this.cpuData&&re!==this.cpuData.length&&(b!=="uint4"&&b!=="int4"||Math.ceil(re/2)!==this.cpuData.length))throw new Error(`Tensor's size(${re}) does not match data length(${this.cpuData.length}).`);this.type=b,this.dims=j,this.size=re}static async fromImage(y,_){return(0,I.tensorFromImage)(y,_)}static fromTexture(y,_){return(0,I.tensorFromTexture)(y,_)}static fromGpuBuffer(y,_){return(0,I.tensorFromGpuBuffer)(y,_)}static fromMLTensor(y,_){return(0,I.tensorFromMLTensor)(y,_)}static fromPinnedBuffer(y,_,A){return(0,I.tensorFromPinnedBuffer)(y,_,A)}toDataURL(y){return(0,p.tensorToDataURL)(this,y)}toImageData(y){return(0,p.tensorToImageData)(this,y)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(y){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const _=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=_,y&&this.disposer&&(this.disposer(),this.disposer=void 0),_}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(y){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,Y.tensorReshape)(this,y)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(Te,k,n)=>{n.r(k),n.d(k,{calculateSize:()=>I,tensorReshape:()=>V});var p=n("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const I=Y=>{let z=1;for(let $=0;$<Y.length;$++){const y=Y[$];if(typeof y!="number"||!Number.isSafeInteger(y))throw new TypeError(`dims[${$}] must be an integer, got: ${y}`);if(y<0)throw new RangeError(`dims[${$}] must be a non-negative integer, got: ${y}`);z*=y}return z},V=(Y,z)=>{switch(Y.location){case"cpu":return new p.Tensor(Y.type,Y.data,z);case"cpu-pinned":return new p.Tensor({location:"cpu-pinned",data:Y.data,type:Y.type,dims:z});case"texture":return new p.Tensor({location:"texture",texture:Y.texture,type:Y.type,dims:z});case"gpu-buffer":return new p.Tensor({location:"gpu-buffer",gpuBuffer:Y.gpuBuffer,type:Y.type,dims:z});case"ml-tensor":return new p.Tensor({location:"ml-tensor",mlTensor:Y.mlTensor,type:Y.type,dims:z});default:throw new Error(`tensorReshape: tensor location ${Y.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(Te,k,n)=>{n.r(k),n.d(k,{Tensor:()=>p});const p=n("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js").Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(Te,k,n)=>{n.r(k),n.d(k,{TRACE:()=>I,TRACE_FUNC_BEGIN:()=>Y,TRACE_FUNC_END:()=>z});var p=n("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const I=($,y)=>{(p.env.trace===void 0?p.env.wasm.trace:p.env.trace)&&console.timeStamp(`${$}::ORT::${y}`)},V=($,y)=>{var b;const _=((b=new Error().stack)==null?void 0:b.split(/\r\n|\r|\n/g))||[];let A=!1;for(let j=0;j<_.length;j++){if(A&&!_[j].includes("TRACE_FUNC")){let re=`FUNC_${$}::${_[j].trim().split(" ")[1]}`;return y&&(re+=`::${y}`),void I("CPU",re)}_[j].includes("TRACE_FUNC")&&(A=!0)}},Y=$=>{(p.env.trace===void 0?p.env.wasm.trace:p.env.trace)&&V("BEGIN",$)},z=$=>{(p.env.trace===void 0?p.env.wasm.trace:p.env.trace)&&V("END",$)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(Te,k,n)=>{n.r(k),n.d(k,{TrainingSession:()=>V});var p=n("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),I=n("./node_modules/onnxruntime-common/dist/esm/tensor.js");class V{constructor(z,$,y){this.handler=z,this.hasOptimizerModel=$,this.hasEvalModel=y}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(z,$){const y=z.evalModel||"",_=z.optimizerModel||"",A=$||{},[b,j]=await(0,p.resolveBackendAndExecutionProviders)(A);if(b.createTrainingSessionHandler){const re=await b.createTrainingSessionHandler(z.checkpointState,z.trainModel,y,_,j);return new V(re,!!z.optimizerModel,!!z.evalModel)}throw new Error("Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.")}typeNarrowingForRunStep(z,$,y,_,A){const b={};let j={};if(typeof y!="object"||y===null||y instanceof I.Tensor||Array.isArray(y))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let re=!0;if(typeof _=="object"){if(_===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(_ instanceof I.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(_)){if(_.length===0)throw new TypeError("'fetches' cannot be an empty array.");re=!1;for(const se of _){if(typeof se!="string")throw new TypeError("'fetches' must be a string array or an object.");if($.indexOf(se)===-1)throw new RangeError(`'fetches' contains invalid output name: ${se}.`);b[se]=null}if(typeof A=="object"&&A!==null)j=A;else if(A!==void 0)throw new TypeError("'options' must be an object.")}else{let se=!1;const le=Object.getOwnPropertyNames(_);for(const L of $)if(le.indexOf(L)!==-1){const G=_[L];(G===null||G instanceof I.Tensor)&&(se=!0,re=!1,b[L]=G)}if(se){if(typeof A=="object"&&A!==null)j=A;else if(A!==void 0)throw new TypeError("'options' must be an object.")}else j=_}}else if(_!==void 0)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const se of z)if(y[se]===void 0)throw new Error(`input '${se}' is missing in 'feeds'.`);if(re)for(const se of $)b[se]=null;return[b,j]}convertHandlerReturnTypeToMapOfTensors(z){const $={};for(const y in z)if(Object.hasOwnProperty.call(z,y)){const _=z[y];_ instanceof I.Tensor?$[y]=_:$[y]=new I.Tensor(_.type,_.data,_.dims)}return $}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(z,$,y){const[_,A]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,z,$,y),b=await this.handler.runTrainStep(z,_,A);return this.convertHandlerReturnTypeToMapOfTensors(b)}async runOptimizerStep(z){if(!this.hasOptimizerModel)throw new Error("This TrainingSession has no OptimizerModel loaded.");await this.handler.runOptimizerStep(z||{})}async runEvalStep(z,$,y){if(this.hasEvalModel){const[_,A]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,z,$,y),b=await this.handler.runEvalStep(z,_,A);return this.convertHandlerReturnTypeToMapOfTensors(b)}throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(z=!0){return this.handler.getParametersSize(z)}async loadParametersBuffer(z,$=!0){const y=await this.getParametersSize($);if(z.length!==4*y)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(z,$)}async getContiguousParameters(z=!0){return this.handler.getContiguousParameters(z)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(Te,k,n)=>{n.r(k),n.d(k,{TrainingSession:()=>p});const p=n("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js").TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(Te,k,n)=>{n.r(k),n.d(k,{version:()=>p});const p="1.20.1"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96":(Te,k,n)=>{n.r(k),n.d(k,{InferenceSession:()=>dt,TRACE:()=>Ae,TRACE_FUNC_BEGIN:()=>Se,TRACE_FUNC_END:()=>Re,Tensor:()=>ge,default:()=>If,env:()=>b,registerBackend:()=>Y});var p,I,V,Y,z,$,y,_,A,b,j,re,se,le,L,G,ie,N,v,O,x,R,K,fe,de,ge,Ae,we,Se,Re,Ue,dt,oe=Object.defineProperty,Z=Object.getOwnPropertyDescriptor,pe=Object.getOwnPropertyNames,Ee=Object.prototype.hasOwnProperty,qe=(p=function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')},typeof require<"u"?require:typeof Proxy<"u"?new Proxy(p,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):p),xe=(e,t)=>()=>(e&&(t=e(e=0)),t),je=(e,t)=>{for(var r in t)oe(e,r,{get:t[r],enumerable:!0})},He=e=>((t,r,s,i)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of pe(r))!Ee.call(t,o)&&o!==s&&oe(t,o,{get:()=>r[o],enumerable:!(i=Z(r,o))||i.enumerable});return t})(oe({},"__esModule",{value:!0}),e),at=xe(()=>{I=new Map,V=[],Y=(e,t,r)=>{if(!t||typeof t.init!="function"||typeof t.createInferenceSessionHandler!="function")throw new TypeError("not a valid backend");{let s=I.get(e);if(s===void 0)I.set(e,{backend:t,priority:r});else{if(s.priority>r)return;if(s.priority===r&&s.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let i=V.indexOf(e);i!==-1&&V.splice(i,1);for(let o=0;o<V.length;o++)if(I.get(V[o]).priority<=r)return void V.splice(o,0,e);V.push(e)}}},z=async e=>{let t=I.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(s){return r||(t.error=`${s}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},$=async e=>{let t,r=e.executionProviders||[],s=r.map(h=>typeof h=="string"?h:h.name),i=s.length===0?V:s,o=[],a=new Set;for(let h of i){let f=await z(h);typeof f=="string"?o.push({name:h,err:f}):(t||(t=f),t===f&&a.add(h))}if(!t)throw new Error(`no available backend found. ERR: ${o.map(h=>`[${h.name}] ${h.err}`).join(", ")}`);for(let{name:h,err:f}of o)s.includes(h)&&console.warn(`removing requested execution provider "${h}" from session options because it is not available: ${f}`);let c=r.filter(h=>a.has(typeof h=="string"?h:h.name));return[t,new Proxy(e,{get:(h,f)=>f==="executionProviders"?c:Reflect.get(h,f)})]}}),Je=xe(()=>{at()}),be=xe(()=>{y="1.21.0-dev.20250206-d981b153d3"}),Ce=xe(()=>{be(),_="warning",A={wasm:{},webgl:{},webgpu:{},versions:{common:y},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);_=e}},get logLevel(){return _}},Object.defineProperty(A,"logLevel",{enumerable:!0})}),We=xe(()=>{Ce(),b=A}),et=xe(()=>{j=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let s=r.getContext("2d");if(s!=null){let i,o;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],o=e.dims[3]):(i=e.dims[3],o=e.dims[2]);let a,c,h=(t==null?void 0:t.format)!==void 0?t.format:"RGB",f=t==null?void 0:t.norm;f===void 0||f.mean===void 0?a=[255,255,255,255]:typeof f.mean=="number"?a=[f.mean,f.mean,f.mean,f.mean]:(a=[f.mean[0],f.mean[1],f.mean[2],0],f.mean[3]!==void 0&&(a[3]=f.mean[3])),f===void 0||f.bias===void 0?c=[0,0,0,0]:typeof f.bias=="number"?c=[f.bias,f.bias,f.bias,f.bias]:(c=[f.bias[0],f.bias[1],f.bias[2],0],f.bias[3]!==void 0&&(c[3]=f.bias[3]));let E=o*i,C=0,d=E,D=2*E,W=-1;h==="RGBA"?(C=0,d=E,D=2*E,W=3*E):h==="RGB"?(C=0,d=E,D=2*E):h==="RBG"&&(C=0,D=E,d=2*E);for(let J=0;J<o;J++)for(let X=0;X<i;X++){let ne=(e.data[C++]-c[0])*a[0],he=(e.data[d++]-c[1])*a[1],ke=(e.data[D++]-c[2])*a[2],Fe=W===-1?255:(e.data[W++]-c[3])*a[3];s.fillStyle="rgba("+ne+","+he+","+ke+","+Fe+")",s.fillRect(X,J,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},re=(e,t)=>{let r,s=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(s==null)throw new Error("Can not access image data");{let i,o,a;(t==null?void 0:t.tensorLayout)!==void 0&&t.tensorLayout==="NHWC"?(i=e.dims[2],o=e.dims[1],a=e.dims[3]):(i=e.dims[3],o=e.dims[2],a=e.dims[1]);let c,h,f=t!==void 0&&t.format!==void 0?t.format:"RGB",E=t==null?void 0:t.norm;E===void 0||E.mean===void 0?c=[255,255,255,255]:typeof E.mean=="number"?c=[E.mean,E.mean,E.mean,E.mean]:(c=[E.mean[0],E.mean[1],E.mean[2],255],E.mean[3]!==void 0&&(c[3]=E.mean[3])),E===void 0||E.bias===void 0?h=[0,0,0,0]:typeof E.bias=="number"?h=[E.bias,E.bias,E.bias,E.bias]:(h=[E.bias[0],E.bias[1],E.bias[2],0],E.bias[3]!==void 0&&(h[3]=E.bias[3]));let C=o*i;if(t!==void 0&&(t.format!==void 0&&a===4&&t.format!=="RGBA"||a===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let d=4,D=0,W=1,J=2,X=3,ne=0,he=C,ke=2*C,Fe=-1;f==="RGBA"?(ne=0,he=C,ke=2*C,Fe=3*C):f==="RGB"?(ne=0,he=C,ke=2*C):f==="RBG"&&(ne=0,ke=C,he=2*C),r=s.createImageData(i,o);for(let ze=0;ze<o*i;D+=d,W+=d,J+=d,X+=d,ze++)r.data[D]=(e.data[ne++]-h[0])*c[0],r.data[W]=(e.data[he++]-h[1])*c[1],r.data[J]=(e.data[ke++]-h[2])*c[2],r.data[X]=Fe===-1?255:(e.data[Fe++]-h[3])*c[3]}return r}}),ue=xe(()=>{ft(),se=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let r,s,{height:i,width:o}=t,a=t.norm??{mean:255,bias:0};r=typeof a.mean=="number"?[a.mean,a.mean,a.mean,a.mean]:[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],s=typeof a.bias=="number"?[a.bias,a.bias,a.bias,a.bias]:[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];let c=t.format!==void 0?t.format:"RGBA",h=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",f=i*o,E=h==="RGBA"?new Float32Array(4*f):new Float32Array(3*f),C=4,d=0,D=1,W=2,J=3,X=0,ne=f,he=2*f,ke=-1;c==="RGB"&&(C=3,d=0,D=1,W=2,J=-1),h==="RGBA"?ke=3*f:h==="RBG"?(X=0,he=f,ne=2*f):h==="BGR"&&(he=0,ne=f,X=2*f);for(let Fe=0;Fe<f;Fe++,d+=C,W+=C,D+=C,J+=C)E[X++]=(e[d]+s[0])/r[0],E[ne++]=(e[D]+s[1])/r[1],E[he++]=(e[W]+s[2])/r[2],ke!==-1&&J!==-1&&(E[ke++]=(e[J]+s[3])/r[3]);return new de("float32",E,h==="RGBA"?[1,4,i,o]:[1,3,i,o])},le=async(e,t)=>{let r,s=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,i=typeof ImageData<"u"&&e instanceof ImageData,o=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,a=typeof e=="string",c=t??{},h=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},f=E=>typeof HTMLCanvasElement<"u"&&E instanceof HTMLCanvasElement||E instanceof OffscreenCanvas?E.getContext("2d"):null;if(s){let E=h();E.width=e.width,E.height=e.height;let C=f(E);if(C==null)throw new Error("Can not access image data");{let d=e.height,D=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(d=t.resizedHeight,D=t.resizedWidth),t!==void 0){if(c=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");c.tensorFormat="RGBA",c.height=d,c.width=D}else c.tensorFormat="RGBA",c.height=d,c.width=D;C.drawImage(e,0,0),r=C.getImageData(0,0,D,d).data}}else{if(!i){if(o){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let E=h();E.width=e.width,E.height=e.height;let C=f(E);if(C!=null){let d=e.height,D=e.width;return C.drawImage(e,0,0,D,d),r=C.getImageData(0,0,D,d).data,c.height=d,c.width=D,se(r,c)}throw new Error("Can not access image data")}if(a)return new Promise((E,C)=>{let d=h(),D=f(d);if(!e||!D)return C();let W=new Image;W.crossOrigin="Anonymous",W.src=e,W.onload=()=>{d.width=W.width,d.height=W.height,D.drawImage(W,0,0,d.width,d.height);let J=D.getImageData(0,0,d.width,d.height);c.height=d.height,c.width=d.width,E(se(J.data,c))}});throw new Error("Input data provided is not supported - aborted tensor creation")}{let E,C;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(E=t.resizedHeight,C=t.resizedWidth):(E=e.height,C=e.width),t!==void 0&&(c=t),c.format="RGBA",c.height=E,c.width=C,t!==void 0){let d=h();d.width=C,d.height=E;let D=f(d);if(D==null)throw new Error("Can not access image data");D.putImageData(e,0,0),r=D.getImageData(0,0,C,E).data}else r=e.data}}if(r!==void 0)return se(r,c);throw new Error("Input data provided is not supported - aborted tensor creation")},L=(e,t)=>{let{width:r,height:s,download:i,dispose:o}=t;return new de({location:"texture",type:"float32",texture:e,dims:[1,s,r,4],download:i,dispose:o})},G=(e,t)=>{let{dataType:r,dims:s,download:i,dispose:o}=t;return new de({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:s,download:i,dispose:o})},ie=(e,t)=>{let{dataType:r,dims:s,download:i,dispose:o}=t;return new de({location:"ml-tensor",type:r??"float32",mlTensor:e,dims:s,download:i,dispose:o})},N=(e,t,r)=>new de({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})}),Be=xe(()=>{v=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),O=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),x=!1,R=()=>{if(!x){x=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;e&&(v.set("int64",BigInt64Array),O.set(BigInt64Array,"int64")),t&&(v.set("uint64",BigUint64Array),O.set(BigUint64Array,"uint64")),r?(v.set("float16",Float16Array),O.set(Float16Array,"float16")):v.set("float16",Uint16Array)}}}),nt=xe(()=>{ft(),K=e=>{let t=1;for(let r=0;r<e.length;r++){let s=e[r];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${r}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${s}`);t*=s}return t},fe=(e,t)=>{switch(e.location){case"cpu":return new de(e.type,e.data,t);case"cpu-pinned":return new de({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new de({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new de({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new de({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),ft=xe(()=>{et(),ue(),Be(),nt(),de=class{constructor(e,t,r){let s,i;if(R(),typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,s=e.type,i=e.dims,e.location){case"cpu-pinned":{let a=v.get(s);if(!a)throw new TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(e.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=e.data;break}case"texture":if(s!=="float32")throw new TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;case"ml-tensor":if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint64"&&s!=="int8"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,c;if(typeof e=="string")if(s=e,c=r,e==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{let h=v.get(e);if(h===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(e==="float16"&&h===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${h.name} as data.`);a=e==="uint64"||e==="int64"?h.from(t,BigInt):h.from(t)}else if(t instanceof h)a=t;else{if(!(t instanceof Uint8ClampedArray))throw new TypeError(`A ${s} tensor's data must be type of ${h}`);if(e!=="uint8")throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");a=Uint8Array.from(t)}}else if(c=t,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let h=typeof e[0];if(h==="string")s="string",a=e;else{if(h!=="boolean")throw new TypeError(`Invalid element type of data array: ${h}.`);s="bool",a=Uint8Array.from(e)}}else if(e instanceof Uint8ClampedArray)s="uint8",a=Uint8Array.from(e);else{let h=O.get(e.constructor);if(h===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);s=h,a=e}if(c===void 0)c=[a.length];else if(!Array.isArray(c))throw new TypeError("A tensor's dims must be a number array");i=c,this.cpuData=a,this.dataLocation="cpu"}let o=K(i);if(this.cpuData&&o!==this.cpuData.length&&(s!=="uint4"&&s!=="int4"||Math.ceil(o/2)!==this.cpuData.length))throw new Error(`Tensor's size(${o}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=i,this.size=o}static async fromImage(e,t){return le(e,t)}static fromTexture(e,t){return L(e,t)}static fromGpuBuffer(e,t){return G(e,t)}static fromMLTensor(e,t){return ie(e,t)}static fromPinnedBuffer(e,t,r){return N(e,t,r)}toDataURL(e){return j(this,e)}toImageData(e){return re(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return fe(this,e)}}}),ht=xe(()=>{ft(),ge=de}),gt=xe(()=>{Ce(),Ae=(e,t)=>{(typeof A.trace>"u"?!A.wasm.trace:!A.trace)||console.timeStamp(`${e}::ORT::${t}`)},we=(e,t)=>{var i;let r=((i=new Error().stack)==null?void 0:i.split(/\r\n|\r|\n/g))||[],s=!1;for(let o=0;o<r.length;o++){if(s&&!r[o].includes("TRACE_FUNC")){let a=`FUNC_${e}::${r[o].trim().split(" ")[1]}`;return t&&(a+=`::${t}`),void Ae("CPU",a)}r[o].includes("TRACE_FUNC")&&(s=!0)}},Se=e=>{(typeof A.trace>"u"?!A.wasm.trace:!A.trace)||we("BEGIN",e)},Re=e=>{(typeof A.trace>"u"?!A.wasm.trace:!A.trace)||we("END",e)}}),yt=xe(()=>{at(),ht(),gt(),Ue=class pf{constructor(t){this.handler=t}async run(t,r,s){Se();let i={},o={};if(typeof t!="object"||t===null||t instanceof ge||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof ge)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");a=!1;for(let f of r){if(typeof f!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(f)===-1)throw new RangeError(`'fetches' contains invalid output name: ${f}.`);i[f]=null}if(typeof s=="object"&&s!==null)o=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let f=!1,E=Object.getOwnPropertyNames(r);for(let C of this.outputNames)if(E.indexOf(C)!==-1){let d=r[C];(d===null||d instanceof ge)&&(f=!0,a=!1,i[C]=d)}if(f){if(typeof s=="object"&&s!==null)o=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else o=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let f of this.inputNames)if(typeof t[f]>"u")throw new Error(`input '${f}' is missing in 'feeds'.`);if(a)for(let f of this.outputNames)i[f]=null;let c=await this.handler.run(t,i,o),h={};for(let f in c)if(Object.hasOwnProperty.call(c,f)){let E=c[f];h[f]=E instanceof ge?E:new ge(E.type,E.data,E.dims)}return Re(),h}async release(){return this.handler.dispose()}static async create(t,r,s,i){Se();let o,a={};if(typeof t=="string"){if(o=t,typeof r=="object"&&r!==null)a=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(o=t,typeof r=="object"&&r!==null)a=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else{if(!(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{let E=t,C=0,d=t.byteLength;if(typeof r=="object"&&r!==null)a=r;else if(typeof r=="number"){if(C=r,!Number.isSafeInteger(C))throw new RangeError("'byteOffset' must be an integer.");if(C<0||C>=E.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${E.byteLength}).`);if(d=t.byteLength-C,typeof s=="number"){if(d=s,!Number.isSafeInteger(d))throw new RangeError("'byteLength' must be an integer.");if(d<=0||C+d>E.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${E.byteLength-C}].`);if(typeof i=="object"&&i!==null)a=i;else if(typeof i<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");o=new Uint8Array(E,C,d)}}let[c,h]=await $(a),f=await c.createInferenceSessionHandler(o,h);return Re(),new pf(f)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),U=xe(()=>{yt(),dt=Ue}),ae=xe(()=>{}),H=xe(()=>{}),me=xe(()=>{}),Oe=xe(()=>{}),tt={};je(tt,{InferenceSession:()=>dt,TRACE:()=>Ae,TRACE_FUNC_BEGIN:()=>Se,TRACE_FUNC_END:()=>Re,Tensor:()=>ge,env:()=>b,registerBackend:()=>Y});var Ze=xe(()=>{Je(),We(),U(),ht(),ae(),H(),gt(),me(),Oe()}),ct=xe(()=>{}),$t={};je($t,{default:()=>Ft});var mt,It,Ft,Rt=xe(()=>{var e;jh(),js(),jo(),mt="ort-wasm-proxy-worker",(It=((e=globalThis.self)==null?void 0:e.name)===mt)&&(self.onmessage=t=>{let{type:r,in:s}=t.data;try{switch(r){case"init-wasm":Hn(s.wasm).then(()=>{rs(s).then(()=>{postMessage({type:r})},i=>{postMessage({type:r,err:i})})},i=>{postMessage({type:r,err:i})});break;case"init-ep":{let{epName:i,env:o}=s;hs(o,i).then(()=>{postMessage({type:r})},a=>{postMessage({type:r,err:a})});break}case"copy-from":{let{buffer:i}=s,o=ei(i);postMessage({type:r,out:o});break}case"create":{let{model:i,options:o}=s;Pi(i,o).then(a=>{postMessage({type:r,out:a})},a=>{postMessage({type:r,err:a})});break}case"release":Ai(s),postMessage({type:r});break;case"run":{let{sessionId:i,inputIndices:o,inputs:a,outputIndices:c,options:h}=s;Ii(i,o,a,c,new Array(c.length).fill(null),h).then(f=>{f.some(E=>E[3]!=="cpu")?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:f},Fi([...a,...f]))},f=>{postMessage({type:r,err:f})});break}case"end-profiling":ti(s),postMessage({type:r})}}catch(i){postMessage({type:r,err:i})}}),Ft=It?null:t=>new Worker(t??Gt,{type:"module",name:mt})}),_r={};je(_r,{default:()=>Gr});var yr,Dr,Gr,hn,Gt,Dn,sn,an,it,St,Bt,Ir,Mn,gn,F,ar,Cn,wn,yn,In,ws,Hn,Nr,Wr,fn,pr,as,ys,os,Jn,ls,Fn,Kn,zn,On,Zn,u,m,T,q,_e,Ie,De,Ke,kt,Dt,tr,wt,Qt,Xt,qr,jr,$r,Ne,M,ee,ce,ve,Ge,Le,_t,Mt,ye,Ot,nr,Or,br,fr,Ur,vr,Lr,Lt,gr,Tn,Fr,Hr,jt,$n,rt,Et,Ln,rn,Yr,Kr,ln,En,zs,us,rl,nl,Pn,sl,il,Os,al,ol,ll,ul,dl,Ls,cl,pl,hl,jn,ml,qi,fl,_l,Wi,gl,wl,Hi,sp,yl,Nn,bl,Ns,Ki,Un,vl,xl,kl,Ml,Tl,Qi,$l,Xi,bs,El,Qn,Sl,ip,Cl,Yi,Pl,Al,Il,Fl,zl,oi,Ji,Ol,Ll,li,Nl,ui,Zi,Bl,Rl,Bs,Dl,jl,ea,Ul,Vl,ta,Gl,ql,ra,Wl,xr,na,Hl,Kl,sa,Ql,Xl,ia,Yl,Jl,aa,Zl,eu,oa,tu,Qs,la,di,ru,ua,nu,su,da,iu,au,ca,ou,lu,pa,uu,du,ha,cu,pu,ci,hu,ma,pi,mu,fu,fa,_u,gu,_a,wu,yu,bu,vu,ga,Vn,xu,wa,ku,Mu,ya,Tu,$u,ba,Eu,Su,va,Cu,Pu,xa,Au,Iu,ds,vs,xs,ka,_n,Ma,Fu,Xs,Ta,zu,$a,Ea,Sa,Ou,Ca,Pa,hi,Lu,Nu,Bu,mi,Ys,Ru,fi,Du,ju,Aa,Uu,Vu,Ia,_i,Gu,Js,Fa,za,gi,qu,Oa,La,Na,Wu,Ba,Ra,Hu,Ku,wi,Qu,Xu,Yu,Da,Ju,Zu,ja,ed,td,Ua,Va,yi,bi,rd,nd,Ga,qa,sd,Wa,id,ad,Ha,od,vi,ld,ud,dd,cd,pd,Ka,hd,md,Qa,fd,_d,gd,wd,Xa,yd,bd,Ya,vd,xd,Ja,kd,Md,Gn,es,ks,Ms,Td,Za,$d,Ed,Sd,Cd,Pd,Ad,eo,bn,Id,to,ro,Fd,qn,zd,Od,Ld,Nd,no,so,Bd,Rd,Dd,xi,io,jd,ao,Zs,Ud,Vd,Gd,qd,ki,Wd,Hd,Kd,ap,Qd,Xd,Yd,Rs,Jd,Zd,ec,tc,rc,nc,sc,Mi,Ti,oo,lo,uo,co,ic,po,ho,mo,fo,ac,_o,go,oc,wo,$i,lc,uc,dc,cc,yo,Ei,op,pc,hc,bo,mc,fc,vo,_c,gc,xo,lp,wc,ko,Mo,yc,bc,To,vc,xc,$o,Eo,kc,So,Mc,Tc,$c,Ec,Sc,Cc,Pc,Ac,Ic,Co,Fc,zc,Ds,Oc,Po,Sr,up,dp,cp,Ao,Lc,Nc,Bc,Io,Fo,zo,pp,Rc,Dc,Oo,hp,mp,jc,Uc,Vc,Gc,qc,Wc,Hc,Lo,Kc,No,Bo,Ro,fp,Qc,Do,Xc,Yc,_p=xe(()=>{var e;yr=typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:er&&er.tagName.toUpperCase()==="SCRIPT"&&er.src||new URL("kokoro.umd.js",document.baseURI).href,Dr=async function(t={}){function r(){return Qe.buffer!=Nt.buffer&&zr(),Nt}function s(){return Qe.buffer!=Nt.buffer&&zr(),wr}function i(){return Qe.buffer!=Nt.buffer&&zr(),Zr}function o(){return Qe.buffer!=Nt.buffer&&zr(),kn}function a(){return Qe.buffer!=Nt.buffer&&zr(),Es}function c(){return Qe.buffer!=Nt.buffer&&zr(),Gs}function h(){return Qe.buffer!=Nt.buffer&&zr(),Bi}function f(){return Qe.buffer!=Nt.buffer&&zr(),Cs}var E,C,d=Object.assign({},t),D=new Promise((l,g)=>{E=l,C=g}),W=typeof window=="object",J=typeof importScripts=="function",X=J&&self.name=="em-pthread";d.mountExternalData=(l,g)=>{l.startsWith("./")&&(l=l.substring(2)),(d.Fb||(d.Fb=new Map)).set(l,g)},d.unmountExternalData=()=>{delete d.Fb};var ne=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let he=()=>{let l=(S,B,te)=>(...$e)=>{let ot=Is,lt=B==null?void 0:B();$e=S(...$e);let Ct=B==null?void 0:B();return lt!==Ct&&(S=Ct,te(lt),B=te=null),Is!=ot?new Promise((At,Kt)=>{gh={resolve:At,reject:Kt}}):$e},g=S=>async(...B)=>{var te;try{if(d.Gb)throw Error("Session already started");let $e=d.Gb={hc:B[0],errors:[]},ot=await S(...B);if(d.Gb!==$e)throw Error("Session mismatch");(te=d.Hb)==null||te.flush();let lt=$e.errors;if(0<lt.length){let Ct=await Promise.all(lt);if(Ct=Ct.filter(At=>At),0<Ct.length)throw Error(Ct.join(`
`))}return ot}finally{d.Gb=null}};d._OrtCreateSession=l(d._OrtCreateSession,()=>d._OrtCreateSession,S=>d._OrtCreateSession=S),d._OrtRun=g(l(d._OrtRun,()=>d._OrtRun,S=>d._OrtRun=S)),d._OrtRunWithBinding=g(l(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,S=>d._OrtRunWithBinding=S)),d._OrtBindInput=l(d._OrtBindInput,()=>d._OrtBindInput,S=>d._OrtBindInput=S),he=void 0};d.jsepInit=(l,g)=>{if(he==null||he(),l==="webgpu"){[d.Hb,d.Vb,d.Zb,d.Ob,d.Yb,d.kb,d.$b,d.cc,d.Wb,d.Xb,d.ac]=g;let S=d.Hb;d.jsepRegisterBuffer=(B,te,$e,ot)=>S.registerBuffer(B,te,$e,ot),d.jsepGetBuffer=B=>S.getBuffer(B),d.jsepCreateDownloader=(B,te,$e)=>S.createDownloader(B,te,$e),d.jsepOnCreateSession=B=>{S.onCreateSession(B)},d.jsepOnReleaseSession=B=>{S.onReleaseSession(B)},d.jsepOnRunStart=B=>S.onRunStart(B),d.dc=(B,te)=>{S.upload(B,te)}}else if(l==="webnn"){[d.Hb,d.bc,d.Pb,d.jsepEnsureTensor,d.ec,d.jsepDownloadTensor]=g,d.jsepReleaseTensorId=d.Pb;let S=d.Hb;d.jsepOnRunStart=B=>S.onRunStart(B),d.jsepRegisterMLContext=(B,te)=>{S.registerMLContext(B,te)},d.jsepOnReleaseSession=B=>{S.onReleaseSession(B)},d.jsepCreateMLTensorDownloader=(B,te)=>S.createMLTensorDownloader(B,te),d.jsepRegisterMLTensor=(B,te,$e)=>S.registerMLTensor(B,te,$e),d.jsepCreateMLContext=B=>S.createMLContext(B),d.jsepRegisterMLConstant=(B,te,$e,ot,lt)=>S.registerMLConstant(B,te,$e,ot,lt,d.Fb)}};var ke,Fe,ze=Object.assign({},d),Ve=(l,g)=>{throw g},pt="";(W||J)&&(J?pt=self.location.href:typeof document<"u"&&document.currentScript&&(pt=document.currentScript.src),yr&&(pt=yr),pt=pt.startsWith("blob:")?"":pt.substr(0,pt.replace(/[?#].*/,"").lastIndexOf("/")+1),J&&(Fe=l=>{var g=new XMLHttpRequest;return g.open("GET",l,!1),g.responseType="arraybuffer",g.send(null),new Uint8Array(g.response)}),ke=(l,g,S)=>{var B=new XMLHttpRequest;B.open("GET",l,!0),B.responseType="arraybuffer",B.onload=()=>{B.status==200||B.status==0&&B.response?g(B.response):S()},B.onerror=S,B.send(null)});var vt,qt=console.log.bind(console),Wt=console.error.bind(console),mr=qt,Ht=Wt;if(Object.assign(d,ze),ze=null,X){let l=function(g){try{var S=g.data,B=S.cmd;if(B==="load"){let te=[];self.onmessage=$e=>te.push($e),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let $e of te)l($e);self.onmessage=l};for(let $e of S.handlers)d[$e]&&!d[$e].proxy||(d[$e]=(...ot)=>{postMessage({Nb:"callHandler",pc:$e,args:ot})},$e=="print"&&(mr=d[$e]),$e=="printErr"&&(Ht=d[$e]));Qe=S.wasmMemory,zr(),ir(S.wasmModule)}else if(B==="run"){vh(S.pthread_ptr,0,0,1,0,0),fh(S.pthread_ptr),Of(),rm(),rr||(Zm(),rr=!0);try{Lf(S.start_routine,S.arg)}catch(te){if(te!="unwind")throw te}}else B==="cancel"?Zo()&&Gp(-1):S.target!=="setimmediate"&&(B==="checkMailbox"?rr&&zp():B&&(Ht(`worker: received unknown command ${B}`),Ht(S)))}catch(te){throw ef(),te}};var ir,rr=!1;Ht=function(...g){g=g.join(" "),console.error(g)},self.alert=function(...g){postMessage({Nb:"alert",text:g.join(" "),rc:Zo()})},d.instantiateWasm=(g,S)=>new Promise(B=>{ir=te=>{te=new WebAssembly.Instance(te,Yh()),S(te),B()}}),self.onunhandledrejection=g=>{throw g.reason||g},self.onmessage=l}d.wasmBinary&&(vt=d.wasmBinary);var Qe,Ut,zt,Nt,wr,Zr,kn,Es,Gs,Bi,ns,Ss,Cs,ss=!1;function zr(){var l=Qe.buffer;d.HEAP8=Nt=new Int8Array(l),d.HEAP16=Zr=new Int16Array(l),d.HEAPU8=wr=new Uint8Array(l),d.HEAPU16=kn=new Uint16Array(l),d.HEAP32=Es=new Int32Array(l),d.HEAPU32=Gs=new Uint32Array(l),d.HEAPF32=Bi=new Float32Array(l),d.HEAPF64=Cs=new Float64Array(l),d.HEAP64=ns=new BigInt64Array(l),d.HEAPU64=Ss=new BigUint64Array(l)}if(!X){if(!((Qe=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof ne))throw Ht("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");zr()}var Rn=[],qs=[],rh=[],Ri=0,tp=null;function Wh(){if(--Ri==0&&tp){var l=tp;tp=null,l()}}function ri(l){throw Ht(l="Aborted("+l+")"),ss=!0,zt=1,l=new WebAssembly.RuntimeError(l+". Build with -sASSERTIONS for more info."),C(l),l}var nh,Hh=l=>l.startsWith("data:application/octet-stream;base64,"),Kh=l=>l.startsWith("file://");function Qh(l){if(l==nh&&vt)return new Uint8Array(vt);if(Fe)return Fe(l);throw"both async and sync fetching of the wasm failed"}function Xh(l,g,S){return function(B){if(!vt&&(W||J)){if(typeof fetch=="function"&&!Kh(B))return fetch(B,{credentials:"same-origin"}).then(te=>{if(!te.ok)throw`failed to load wasm binary file at '${B}'`;return te.arrayBuffer()}).catch(()=>Qh(B));if(ke)return new Promise((te,$e)=>{ke(B,ot=>te(new Uint8Array(ot)),$e)})}return Promise.resolve().then(()=>Qh(B))}(l).then(B=>WebAssembly.instantiate(B,g)).then(S,B=>{Ht(`failed to asynchronously prepare wasm: ${B}`),ri(B)})}function Yh(){return{a:{O:zf,Aa:Ff,b:Bf,aa:am,B:um,qa:dm,Y:pm,_:hm,ra:mm,oa:fm,ha:_m,na:gm,L:wm,Z:ym,W:bm,pa:vm,X:xm,va:Rf,F:Df,Q:jf,P:Vf,E:qf,u:Wf,q:Hf,G:Kf,A:t_,R:r_,ua:n_,ka:s_,U:i_,ba:a_,H:o_,ja:fh,ta:l_,t:u_,Ba:d_,x:h_,o:m_,m:__,c:hh,n:g_,k:b_,w:v_,p:x_,f:k_,s:M_,l:T_,e:$_,j:E_,i:S_,g:C_,d:P_,ea:A_,fa:I_,ga:F_,ca:Lm,da:Nm,T:z_,h:O_,D:L_,I:N_,M:B_,y:R_,sa:D_,V:j_,v:Rm,z:U_,N:V_,S:G_,za:q_,ya:W_,la:Um,ma:Vm,$:lh,C:Gm,K:qm,ia:Wm,J:Hm,a:Qe,xa:oh,wa:Xm,r:Q_}}}var sh={916868:(l,g,S,B,te)=>{if(d===void 0||!d.Fb)return 1;if((l=on(Number(l>>>0))).startsWith("./")&&(l=l.substring(2)),!(l=d.Fb.get(l)))return 2;if(g=Number(g>>>0),S=Number(S>>>0),B=Number(B>>>0),g+S>l.byteLength)return 3;try{let $e=l.subarray(g,g+S);switch(te){case 0:s().set($e,B>>>0);break;case 1:d.dc(B,$e);break;default:return 4}return 0}catch{return 4}},917583:(l,g,S)=>{d.ec(l,s().subarray(g>>>0,g+S>>>0))},917646:()=>d.bc(),917687:l=>{d.Pb(l)},917723:()=>{d.Wb()},917754:()=>{d.Xb()},917783:()=>{d.ac()},917808:l=>d.Vb(l),917841:l=>d.Zb(l),917873:(l,g,S)=>{d.Ob(Number(l),Number(g),Number(S),!0)},917936:(l,g,S)=>{d.Ob(Number(l),Number(g),Number(S))},917993:()=>typeof wasmOffsetConverter<"u",918050:l=>{d.kb("Abs",l,void 0)},918101:l=>{d.kb("Neg",l,void 0)},918152:l=>{d.kb("Floor",l,void 0)},918205:l=>{d.kb("Ceil",l,void 0)},918257:l=>{d.kb("Reciprocal",l,void 0)},918315:l=>{d.kb("Sqrt",l,void 0)},918367:l=>{d.kb("Exp",l,void 0)},918418:l=>{d.kb("Erf",l,void 0)},918469:l=>{d.kb("Sigmoid",l,void 0)},918524:(l,g,S)=>{d.kb("HardSigmoid",l,{alpha:g,beta:S})},918603:l=>{d.kb("Log",l,void 0)},918654:l=>{d.kb("Sin",l,void 0)},918705:l=>{d.kb("Cos",l,void 0)},918756:l=>{d.kb("Tan",l,void 0)},918807:l=>{d.kb("Asin",l,void 0)},918859:l=>{d.kb("Acos",l,void 0)},918911:l=>{d.kb("Atan",l,void 0)},918963:l=>{d.kb("Sinh",l,void 0)},919015:l=>{d.kb("Cosh",l,void 0)},919067:l=>{d.kb("Asinh",l,void 0)},919120:l=>{d.kb("Acosh",l,void 0)},919173:l=>{d.kb("Atanh",l,void 0)},919226:l=>{d.kb("Tanh",l,void 0)},919278:l=>{d.kb("Not",l,void 0)},919329:(l,g,S)=>{d.kb("Clip",l,{min:g,max:S})},919398:l=>{d.kb("Clip",l,void 0)},919450:(l,g)=>{d.kb("Elu",l,{alpha:g})},919508:l=>{d.kb("Gelu",l,void 0)},919560:l=>{d.kb("Relu",l,void 0)},919612:(l,g)=>{d.kb("LeakyRelu",l,{alpha:g})},919676:(l,g)=>{d.kb("ThresholdedRelu",l,{alpha:g})},919746:(l,g)=>{d.kb("Cast",l,{to:g})},919804:l=>{d.kb("Add",l,void 0)},919855:l=>{d.kb("Sub",l,void 0)},919906:l=>{d.kb("Mul",l,void 0)},919957:l=>{d.kb("Div",l,void 0)},920008:l=>{d.kb("Pow",l,void 0)},920059:l=>{d.kb("Equal",l,void 0)},920112:l=>{d.kb("Greater",l,void 0)},920167:l=>{d.kb("GreaterOrEqual",l,void 0)},920229:l=>{d.kb("Less",l,void 0)},920281:l=>{d.kb("LessOrEqual",l,void 0)},920340:(l,g,S,B,te)=>{d.kb("ReduceMean",l,{keepDims:!!g,noopWithEmptyAxes:!!S,axes:B?Array.from(a().subarray(Number(B)>>>0,Number(te)>>>0)):[]})},920515:(l,g,S,B,te)=>{d.kb("ReduceMax",l,{keepDims:!!g,noopWithEmptyAxes:!!S,axes:B?Array.from(a().subarray(Number(B)>>>0,Number(te)>>>0)):[]})},920689:(l,g,S,B,te)=>{d.kb("ReduceMin",l,{keepDims:!!g,noopWithEmptyAxes:!!S,axes:B?Array.from(a().subarray(Number(B)>>>0,Number(te)>>>0)):[]})},920863:(l,g,S,B,te)=>{d.kb("ReduceProd",l,{keepDims:!!g,noopWithEmptyAxes:!!S,axes:B?Array.from(a().subarray(Number(B)>>>0,Number(te)>>>0)):[]})},921038:(l,g,S,B,te)=>{d.kb("ReduceSum",l,{keepDims:!!g,noopWithEmptyAxes:!!S,axes:B?Array.from(a().subarray(Number(B)>>>0,Number(te)>>>0)):[]})},921212:(l,g,S,B,te)=>{d.kb("ReduceL1",l,{keepDims:!!g,noopWithEmptyAxes:!!S,axes:B?Array.from(a().subarray(Number(B)>>>0,Number(te)>>>0)):[]})},921385:(l,g,S,B,te)=>{d.kb("ReduceL2",l,{keepDims:!!g,noopWithEmptyAxes:!!S,axes:B?Array.from(a().subarray(Number(B)>>>0,Number(te)>>>0)):[]})},921558:(l,g,S,B,te)=>{d.kb("ReduceLogSum",l,{keepDims:!!g,noopWithEmptyAxes:!!S,axes:B?Array.from(a().subarray(Number(B)>>>0,Number(te)>>>0)):[]})},921735:(l,g,S,B,te)=>{d.kb("ReduceSumSquare",l,{keepDims:!!g,noopWithEmptyAxes:!!S,axes:B?Array.from(a().subarray(Number(B)>>>0,Number(te)>>>0)):[]})},921915:(l,g,S,B,te)=>{d.kb("ReduceLogSumExp",l,{keepDims:!!g,noopWithEmptyAxes:!!S,axes:B?Array.from(a().subarray(Number(B)>>>0,Number(te)>>>0)):[]})},922095:l=>{d.kb("Where",l,void 0)},922148:(l,g,S)=>{d.kb("Transpose",l,{perm:g?Array.from(a().subarray(Number(g)>>>0,Number(S)>>>0)):[]})},922272:(l,g,S,B)=>{d.kb("DepthToSpace",l,{blocksize:g,mode:on(S),format:B?"NHWC":"NCHW"})},922405:(l,g,S,B)=>{d.kb("DepthToSpace",l,{blocksize:g,mode:on(S),format:B?"NHWC":"NCHW"})},922538:(l,g,S,B,te,$e,ot,lt,Ct,At,Kt,hr,Tr,tn,gs)=>{d.kb("ConvTranspose",l,{format:Ct?"NHWC":"NCHW",autoPad:g,dilations:[S],group:B,kernelShape:[te],pads:[$e,ot],strides:[lt],wIsConst:()=>!!r()[At>>>0],outputPadding:Kt?Array.from(a().subarray(Number(Kt)>>>0,Number(hr)>>>0)):[],outputShape:Tr?Array.from(a().subarray(Number(Tr)>>>0,Number(tn)>>>0)):[],activation:on(gs)})},922971:(l,g,S,B,te,$e,ot,lt,Ct,At,Kt,hr,Tr,tn)=>{d.kb("ConvTranspose",l,{format:lt?"NHWC":"NCHW",autoPad:g,dilations:Array.from(a().subarray(Number(S)>>>0,2+(Number(S)>>>0)>>>0)),group:B,kernelShape:Array.from(a().subarray(Number(te)>>>0,2+(Number(te)>>>0)>>>0)),pads:Array.from(a().subarray(Number($e)>>>0,4+(Number($e)>>>0)>>>0)),strides:Array.from(a().subarray(Number(ot)>>>0,2+(Number(ot)>>>0)>>>0)),wIsConst:()=>!!r()[Ct>>>0],outputPadding:At?Array.from(a().subarray(Number(At)>>>0,Number(Kt)>>>0)):[],outputShape:hr?Array.from(a().subarray(Number(hr)>>>0,Number(Tr)>>>0)):[],activation:on(tn)})},923632:(l,g,S,B,te,$e,ot,lt,Ct,At,Kt,hr,Tr,tn,gs)=>{d.kb("ConvTranspose",l,{format:Ct?"NHWC":"NCHW",autoPad:g,dilations:[S],group:B,kernelShape:[te],pads:[$e,ot],strides:[lt],wIsConst:()=>!!r()[At>>>0],outputPadding:Kt?Array.from(a().subarray(Number(Kt)>>>0,Number(hr)>>>0)):[],outputShape:Tr?Array.from(a().subarray(Number(Tr)>>>0,Number(tn)>>>0)):[],activation:on(gs)})},924065:(l,g,S,B,te,$e,ot,lt,Ct,At,Kt,hr,Tr,tn)=>{d.kb("ConvTranspose",l,{format:lt?"NHWC":"NCHW",autoPad:g,dilations:Array.from(a().subarray(Number(S)>>>0,2+(Number(S)>>>0)>>>0)),group:B,kernelShape:Array.from(a().subarray(Number(te)>>>0,2+(Number(te)>>>0)>>>0)),pads:Array.from(a().subarray(Number($e)>>>0,4+(Number($e)>>>0)>>>0)),strides:Array.from(a().subarray(Number(ot)>>>0,2+(Number(ot)>>>0)>>>0)),wIsConst:()=>!!r()[Ct>>>0],outputPadding:At?Array.from(a().subarray(Number(At)>>>0,Number(Kt)>>>0)):[],outputShape:hr?Array.from(a().subarray(Number(hr)>>>0,Number(Tr)>>>0)):[],activation:on(tn)})},924726:(l,g)=>{d.kb("GlobalAveragePool",l,{format:g?"NHWC":"NCHW"})},924817:(l,g,S,B,te,$e,ot,lt,Ct,At,Kt,hr,Tr,tn)=>{d.kb("AveragePool",l,{format:tn?"NHWC":"NCHW",auto_pad:g,ceil_mode:S,count_include_pad:B,storage_order:te,dilations:$e?Array.from(a().subarray(Number($e)>>>0,Number(ot)>>>0)):[],kernel_shape:lt?Array.from(a().subarray(Number(lt)>>>0,Number(Ct)>>>0)):[],pads:At?Array.from(a().subarray(Number(At)>>>0,Number(Kt)>>>0)):[],strides:hr?Array.from(a().subarray(Number(hr)>>>0,Number(Tr)>>>0)):[]})},925296:(l,g)=>{d.kb("GlobalAveragePool",l,{format:g?"NHWC":"NCHW"})},925387:(l,g,S,B,te,$e,ot,lt,Ct,At,Kt,hr,Tr,tn)=>{d.kb("AveragePool",l,{format:tn?"NHWC":"NCHW",auto_pad:g,ceil_mode:S,count_include_pad:B,storage_order:te,dilations:$e?Array.from(a().subarray(Number($e)>>>0,Number(ot)>>>0)):[],kernel_shape:lt?Array.from(a().subarray(Number(lt)>>>0,Number(Ct)>>>0)):[],pads:At?Array.from(a().subarray(Number(At)>>>0,Number(Kt)>>>0)):[],strides:hr?Array.from(a().subarray(Number(hr)>>>0,Number(Tr)>>>0)):[]})},925866:(l,g)=>{d.kb("GlobalMaxPool",l,{format:g?"NHWC":"NCHW"})},925953:(l,g,S,B,te,$e,ot,lt,Ct,At,Kt,hr,Tr,tn)=>{d.kb("MaxPool",l,{format:tn?"NHWC":"NCHW",auto_pad:g,ceil_mode:S,count_include_pad:B,storage_order:te,dilations:$e?Array.from(a().subarray(Number($e)>>>0,Number(ot)>>>0)):[],kernel_shape:lt?Array.from(a().subarray(Number(lt)>>>0,Number(Ct)>>>0)):[],pads:At?Array.from(a().subarray(Number(At)>>>0,Number(Kt)>>>0)):[],strides:hr?Array.from(a().subarray(Number(hr)>>>0,Number(Tr)>>>0)):[]})},926428:(l,g)=>{d.kb("GlobalMaxPool",l,{format:g?"NHWC":"NCHW"})},926515:(l,g,S,B,te,$e,ot,lt,Ct,At,Kt,hr,Tr,tn)=>{d.kb("MaxPool",l,{format:tn?"NHWC":"NCHW",auto_pad:g,ceil_mode:S,count_include_pad:B,storage_order:te,dilations:$e?Array.from(a().subarray(Number($e)>>>0,Number(ot)>>>0)):[],kernel_shape:lt?Array.from(a().subarray(Number(lt)>>>0,Number(Ct)>>>0)):[],pads:At?Array.from(a().subarray(Number(At)>>>0,Number(Kt)>>>0)):[],strides:hr?Array.from(a().subarray(Number(hr)>>>0,Number(Tr)>>>0)):[]})},926990:(l,g,S,B,te)=>{d.kb("Gemm",l,{alpha:g,beta:S,transA:B,transB:te})},927094:l=>{d.kb("MatMul",l,void 0)},927148:(l,g,S,B)=>{d.kb("ArgMax",l,{keepDims:!!g,selectLastIndex:!!S,axis:B})},927256:(l,g,S,B)=>{d.kb("ArgMin",l,{keepDims:!!g,selectLastIndex:!!S,axis:B})},927364:(l,g)=>{d.kb("Softmax",l,{axis:g})},927427:(l,g)=>{d.kb("Concat",l,{axis:g})},927487:(l,g,S,B,te)=>{d.kb("Split",l,{axis:g,numOutputs:S,splitSizes:B?Array.from(a().subarray(Number(B)>>>0,Number(te)>>>0)):[]})},927643:l=>{d.kb("Expand",l,void 0)},927697:(l,g)=>{d.kb("Gather",l,{axis:Number(g)})},927768:(l,g)=>{d.kb("GatherElements",l,{axis:Number(g)})},927847:(l,g)=>{d.kb("GatherND",l,{batch_dims:Number(g)})},927926:(l,g,S,B,te,$e,ot,lt,Ct,At,Kt)=>{d.kb("Resize",l,{antialias:g,axes:S?Array.from(a().subarray(Number(S)>>>0,Number(B)>>>0)):[],coordinateTransformMode:on(te),cubicCoeffA:$e,excludeOutside:ot,extrapolationValue:lt,keepAspectRatioPolicy:on(Ct),mode:on(At),nearestMode:on(Kt)})},928288:(l,g,S,B,te,$e,ot)=>{d.kb("Slice",l,{starts:g?Array.from(a().subarray(Number(g)>>>0,Number(S)>>>0)):[],ends:B?Array.from(a().subarray(Number(B)>>>0,Number(te)>>>0)):[],axes:$e?Array.from(a().subarray(Number($e)>>>0,Number(ot)>>>0)):[]})},928552:l=>{d.kb("Tile",l,void 0)},928604:(l,g,S)=>{d.kb("InstanceNormalization",l,{epsilon:g,format:S?"NHWC":"NCHW"})},928718:(l,g,S)=>{d.kb("InstanceNormalization",l,{epsilon:g,format:S?"NHWC":"NCHW"})},928832:l=>{d.kb("Range",l,void 0)},928885:(l,g)=>{d.kb("Einsum",l,{equation:on(g)})},928966:(l,g,S,B,te)=>{d.kb("Pad",l,{mode:g,value:S,pads:B?Array.from(a().subarray(Number(B)>>>0,Number(te)>>>0)):[]})},929109:(l,g,S,B,te,$e)=>{d.kb("BatchNormalization",l,{epsilon:g,momentum:S,spatial:!!te,trainingMode:!!B,format:$e?"NHWC":"NCHW"})},929278:(l,g,S,B,te,$e)=>{d.kb("BatchNormalization",l,{epsilon:g,momentum:S,spatial:!!te,trainingMode:!!B,format:$e?"NHWC":"NCHW"})},929447:(l,g,S)=>{d.kb("CumSum",l,{exclusive:Number(g),reverse:Number(S)})},929544:(l,g,S)=>{d.kb("DequantizeLinear",l,{axis:g,blockSize:S})},929634:(l,g,S,B,te)=>{d.kb("GridSample",l,{align_corners:g,mode:on(S),padding_mode:on(B),format:te?"NHWC":"NCHW"})},929804:(l,g,S,B,te)=>{d.kb("GridSample",l,{align_corners:g,mode:on(S),padding_mode:on(B),format:te?"NHWC":"NCHW"})},929974:(l,g,S,B,te,$e,ot,lt,Ct)=>{d.kb("Attention",l,{numHeads:g,isUnidirectional:S,maskFilterValue:B,scale:te,doRotary:$e,qkvHiddenSizes:ot?Array.from(a().subarray(Number(lt)>>>0,Number(lt)+ot>>>0)):[],pastPresentShareBuffer:!!Ct})},930246:l=>{d.kb("BiasAdd",l,void 0)},930301:l=>{d.kb("BiasSplitGelu",l,void 0)},930362:l=>{d.kb("FastGelu",l,void 0)},930418:(l,g,S,B,te,$e,ot,lt,Ct,At,Kt,hr,Tr,tn,gs,ut)=>{d.kb("Conv",l,{format:hr?"NHWC":"NCHW",auto_pad:g,dilations:S?Array.from(a().subarray(Number(S)>>>0,Number(B)>>>0)):[],group:te,kernel_shape:$e?Array.from(a().subarray(Number($e)>>>0,Number(ot)>>>0)):[],pads:lt?Array.from(a().subarray(Number(lt)>>>0,Number(Ct)>>>0)):[],strides:At?Array.from(a().subarray(Number(At)>>>0,Number(Kt)>>>0)):[],w_is_const:()=>!!r()[Number(Tr)>>>0],activation:on(tn),activation_params:gs?Array.from(h().subarray(Number(gs)>>>0,Number(ut)>>>0)):[]})},931002:l=>{d.kb("Gelu",l,void 0)},931054:(l,g,S,B,te,$e,ot,lt,Ct)=>{d.kb("GroupQueryAttention",l,{numHeads:g,kvNumHeads:S,scale:B,softcap:te,doRotary:$e,rotaryInterleaved:ot,smoothSoftmax:lt,localWindowSize:Ct})},931271:(l,g,S,B)=>{d.kb("LayerNormalization",l,{axis:g,epsilon:S,simplified:!!B})},931382:(l,g,S,B)=>{d.kb("LayerNormalization",l,{axis:g,epsilon:S,simplified:!!B})},931493:(l,g,S,B,te,$e)=>{d.kb("MatMulNBits",l,{k:g,n:S,accuracyLevel:B,bits:te,blockSize:$e})},931620:(l,g,S,B,te,$e)=>{d.kb("MultiHeadAttention",l,{numHeads:g,isUnidirectional:S,maskFilterValue:B,scale:te,doRotary:$e})},931779:(l,g)=>{d.kb("QuickGelu",l,{alpha:g})},931843:(l,g,S,B,te)=>{d.kb("RotaryEmbedding",l,{interleaved:!!g,numHeads:S,rotaryEmbeddingDim:B,scale:te})},931982:(l,g,S)=>{d.kb("SkipLayerNormalization",l,{epsilon:g,simplified:!!S})},932084:(l,g,S)=>{d.kb("SkipLayerNormalization",l,{epsilon:g,simplified:!!S})},932186:(l,g,S,B)=>{d.kb("GatherBlockQuantized",l,{gatherAxis:g,quantizeAxis:S,blockSize:B})},932307:l=>{d.$b(l)},932341:(l,g)=>d.cc(Number(l),Number(g),d.Gb.hc,d.Gb.errors)};function Ff(l,g,S){return Am(async()=>{await d.Yb(Number(l),Number(g),Number(S))})}function zf(){return typeof wasmOffsetConverter<"u"}function ih(l){this.name="ExitStatus",this.message=`Program terminated with exit(${l})`,this.status=l}var ah=l=>{l.terminate(),l.onmessage=()=>{}},Jh=l=>{ni.length==0&&(sm(),nm(ni[0]));var g=ni.pop();if(!g)return 6;ji.push(g),Ps[l.Bb]=g,g.Bb=l.Bb;var S={cmd:"run",start_routine:l.ic,arg:l.Rb,pthread_ptr:l.Bb};return g.postMessage(S,l.nc),0},Di=0,en=(l,g,...S)=>{for(var B=2*S.length,te=Mh(),$e=kh(8*B),ot=$e>>>3,lt=0;lt<S.length;lt++){var Ct=S[lt];typeof Ct=="bigint"?(ns[ot+2*lt]=1n,ns[ot+2*lt+1]=Ct):(ns[ot+2*lt]=0n,f()[ot+2*lt+1>>>0]=Ct)}return l=tf(l,0,B,$e,g),qp(te),l};function oh(l){if(X)return en(0,1,l);if(zt=l,!(0<Di)){for(var g of ji)ah(g);for(g of ni)ah(g);ni=[],ji=[],Ps=[],ss=!0}Ve(0,new ih(l))}function Zh(l){if(X)return en(1,0,l);lh(l)}var lh=l=>{if(zt=l,X)throw Zh(l),"unwind";oh(l)},ni=[],ji=[],em=[],Ps={},tm=l=>{var g=l.Bb;delete Ps[g],ni.push(l),ji.splice(ji.indexOf(l),1),l.Bb=0,xh(g)};function rm(){em.forEach(l=>l())}var nm=l=>new Promise(g=>{l.onmessage=te=>{var $e=(te=te.data).cmd;if(te.targetThread&&te.targetThread!=Zo()){var ot=Ps[te.targetThread];ot?ot.postMessage(te,te.transferList):Ht(`Internal error! Worker sent a message "${$e}" to target pthread ${te.targetThread}, but that thread no longer exists!`)}else $e==="checkMailbox"?zp():$e==="spawnThread"?Jh(te):$e==="cleanupThread"?tm(Ps[te.thread]):$e==="killThread"?(te=te.thread,$e=Ps[te],delete Ps[te],ah($e),xh(te),ji.splice(ji.indexOf($e),1),$e.Bb=0):$e==="cancelThread"?Ps[te.thread].postMessage({cmd:"cancel"}):$e==="loaded"?(l.loaded=!0,g(l)):$e==="alert"?alert(`Thread ${te.threadId}: ${te.text}`):te.target==="setimmediate"?l.postMessage(te):$e==="callHandler"?d[te.handler](...te.args):$e&&Ht(`worker sent an unknown command ${$e}`)},l.onerror=te=>{throw Ht(`worker sent an error! ${te.filename}:${te.lineno}: ${te.message}`),te};var S,B=[];for(S of[])d.hasOwnProperty(S)&&B.push(S);l.postMessage({cmd:"load",handlers:B,wasmMemory:Qe,wasmModule:Ut})});function sm(){var l=new Worker((typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:er&&er.tagName.toUpperCase()==="SCRIPT"&&er.src||new URL("kokoro.umd.js",document.baseURI).href).startsWith("file:")?new URL(n("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),n.b):new URL(typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:er&&er.tagName.toUpperCase()==="SCRIPT"&&er.src||new URL("kokoro.umd.js",document.baseURI).href),{type:"module",workerData:"em-pthread",name:"em-pthread"});ni.push(l)}var Fp=l=>{for(;0<l.length;)l.shift()(d)},Of=()=>{var l=Zo(),g=c()[l+52>>>2>>>0];l=c()[l+56>>>2>>>0],nf(g,g-l),qp(g)},Lf=(l,g)=>{Di=0,l=sf(l,g),0<Di?zt=l:Gp(l)};class Nf{constructor(g){this.Kb=g-24}}function Bf(l,g,S){var B=new Nf(l>>>=0);throw g>>>=0,S>>>=0,c()[B.Kb+16>>>2>>>0]=0,c()[B.Kb+4>>>2>>>0]=g,c()[B.Kb+8>>>2>>>0]=S,l}function im(l,g,S,B){return X?en(2,1,l,g,S,B):am(l,g,S,B)}function am(l,g,S,B){if(l>>>=0,g>>>=0,S>>>=0,B>>>=0,ne===void 0)return Ht("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var te=[];return X&&te.length===0?im(l,g,S,B):(l={ic:S,Bb:l,Rb:B,nc:te},X?(l.Nb="spawnThread",postMessage(l,te),0):Jh(l))}var om=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,lm=(l,g,S)=>{var B=(g>>>=0)+S;for(S=g;l[S]&&!(S>=B);)++S;if(16<S-g&&l.buffer&&om)return om.decode(l.buffer instanceof ne?l.slice(g,S):l.subarray(g,S));for(B="";g<S;){var te=l[g++];if(128&te){var $e=63&l[g++];if((224&te)==192)B+=String.fromCharCode((31&te)<<6|$e);else{var ot=63&l[g++];65536>(te=(240&te)==224?(15&te)<<12|$e<<6|ot:(7&te)<<18|$e<<12|ot<<6|63&l[g++])?B+=String.fromCharCode(te):(te-=65536,B+=String.fromCharCode(55296|te>>10,56320|1023&te))}}else B+=String.fromCharCode(te)}return B},on=(l,g)=>(l>>>=0)?lm(s(),l,g):"";function um(l,g,S){return X?en(3,1,l,g,S):0}function dm(l,g){if(X)return en(4,1,l,g)}var uh=l=>{for(var g=0,S=0;S<l.length;++S){var B=l.charCodeAt(S);127>=B?g++:2047>=B?g+=2:55296<=B&&57343>=B?(g+=4,++S):g+=3}return g},cm=(l,g,S,B)=>{if(!(0<B))return 0;var te=S>>>=0;B=S+B-1;for(var $e=0;$e<l.length;++$e){var ot=l.charCodeAt($e);if(55296<=ot&&57343>=ot&&(ot=65536+((1023&ot)<<10)|1023&l.charCodeAt(++$e)),127>=ot){if(S>=B)break;g[S++>>>0]=ot}else{if(2047>=ot){if(S+1>=B)break;g[S++>>>0]=192|ot>>6}else{if(65535>=ot){if(S+2>=B)break;g[S++>>>0]=224|ot>>12}else{if(S+3>=B)break;g[S++>>>0]=240|ot>>18,g[S++>>>0]=128|ot>>12&63}g[S++>>>0]=128|ot>>6&63}g[S++>>>0]=128|63&ot}}return g[S>>>0]=0,S-te},Yo=(l,g,S)=>cm(l,s(),g,S);function pm(l,g){if(X)return en(5,1,l,g)}function hm(l,g,S){if(X)return en(6,1,l,g,S)}function mm(l,g,S){return X?en(7,1,l,g,S):0}function fm(l,g){if(X)return en(8,1,l,g)}function _m(l,g,S){if(X)return en(9,1,l,g,S)}function gm(l,g,S,B){if(X)return en(10,1,l,g,S,B)}function wm(l,g,S,B){if(X)return en(11,1,l,g,S,B)}function ym(l,g,S,B){if(X)return en(12,1,l,g,S,B)}function bm(l){if(X)return en(13,1,l)}function vm(l,g){if(X)return en(14,1,l,g)}function xm(l,g,S){if(X)return en(15,1,l,g,S)}var km,si,Rf=()=>{ri("")},As=l=>{for(var g="";s()[l>>>0];)g+=km[s()[l++>>>0]];return g},dh={},ch={};function Ws(l,g,S={}){if(!("argPackAdvance"in g))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(B,te,$e={}){var ot=te.name;if(!B)throw new si(`type "${ot}" must have a positive integer typeid pointer`);if(ch.hasOwnProperty(B)){if($e.Tb)return;throw new si(`Cannot register type '${ot}' twice`)}ch[B]=te,dh.hasOwnProperty(B)&&(te=dh[B],delete dh[B],te.forEach(lt=>lt()))}(l,g,S)}var Mm=(l,g,S)=>{switch(g){case 1:return S?B=>r()[B>>>0]:B=>s()[B>>>0];case 2:return S?B=>i()[B>>>1>>>0]:B=>o()[B>>>1>>>0];case 4:return S?B=>a()[B>>>2>>>0]:B=>c()[B>>>2>>>0];case 8:return S?B=>ns[B>>>3]:B=>Ss[B>>>3];default:throw new TypeError(`invalid integer width (${g}): ${l}`)}};function Df(l,g,S){S>>>=0,Ws(l>>>=0,{name:g=As(g>>>0),fromWireType:B=>B,toWireType:function(B,te){if(typeof te!="bigint"&&typeof te!="number")throw te=te===null?"null":(B=typeof te)=="object"||B==="array"||B==="function"?te.toString():""+te,new TypeError(`Cannot convert "${te}" to ${this.name}`);return typeof te=="number"&&(te=BigInt(te)),te},argPackAdvance:ii,readValueFromPointer:Mm(g,S,g.indexOf("u")==-1),Eb:null})}var ii=8;function jf(l,g,S,B){Ws(l>>>=0,{name:g=As(g>>>0),fromWireType:function(te){return!!te},toWireType:function(te,$e){return $e?S:B},argPackAdvance:ii,readValueFromPointer:function(te){return this.fromWireType(s()[te>>>0])},Eb:null})}var ph=[],Hs=[];function hh(l){9<(l>>>=0)&&--Hs[l+1]==0&&(Hs[l]=void 0,ph.push(l))}var Yn=l=>{if(!l)throw new si("Cannot use deleted val. handle = "+l);return Hs[l]},is=l=>{switch(l){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let g=ph.pop()||Hs.length;return Hs[g]=l,Hs[g+1]=1,g}};function mh(l){return this.fromWireType(c()[l>>>2>>>0])}var Uf={name:"emscripten::val",fromWireType:l=>{var g=Yn(l);return hh(l),g},toWireType:(l,g)=>is(g),argPackAdvance:ii,readValueFromPointer:mh,Eb:null};function Vf(l){return Ws(l>>>0,Uf)}var Gf=(l,g)=>{switch(g){case 4:return function(S){return this.fromWireType(h()[S>>>2>>>0])};case 8:return function(S){return this.fromWireType(f()[S>>>3>>>0])};default:throw new TypeError(`invalid float width (${g}): ${l}`)}};function qf(l,g,S){S>>>=0,Ws(l>>>=0,{name:g=As(g>>>0),fromWireType:B=>B,toWireType:(B,te)=>te,argPackAdvance:ii,readValueFromPointer:Gf(g,S),Eb:null})}function Wf(l,g,S,B,te){if(l>>>=0,S>>>=0,g=As(g>>>0),te===-1&&(te=4294967295),te=lt=>lt,B===0){var $e=32-8*S;te=lt=>lt<<$e>>>$e}var ot=g.includes("unsigned")?function(lt,Ct){return Ct>>>0}:function(lt,Ct){return Ct};Ws(l,{name:g,fromWireType:te,toWireType:ot,argPackAdvance:ii,readValueFromPointer:Mm(g,S,B!==0),Eb:null})}function Hf(l,g,S){function B($e){var ot=c()[$e>>>2>>>0];return $e=c()[$e+4>>>2>>>0],new te(r().buffer,$e,ot)}var te=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][g];Ws(l>>>=0,{name:S=As(S>>>0),fromWireType:B,argPackAdvance:ii,readValueFromPointer:B},{Tb:!0})}function Kf(l,g){l>>>=0;var S=(g=As(g>>>0))==="std::string";Ws(l,{name:g,fromWireType:function(B){var te=c()[B>>>2>>>0],$e=B+4;if(S)for(var ot=$e,lt=0;lt<=te;++lt){var Ct=$e+lt;if(lt==te||s()[Ct>>>0]==0){if(ot=on(ot,Ct-ot),At===void 0)var At=ot;else At+="\0",At+=ot;ot=Ct+1}}else{for(At=Array(te),lt=0;lt<te;++lt)At[lt]=String.fromCharCode(s()[$e+lt>>>0]);At=At.join("")}return Fs(B),At},toWireType:function(B,te){te instanceof ArrayBuffer&&(te=new Uint8Array(te));var $e=typeof te=="string";if(!($e||te instanceof Uint8Array||te instanceof Uint8ClampedArray||te instanceof Int8Array))throw new si("Cannot pass non-string to std::string");var ot=S&&$e?uh(te):te.length,lt=Vp(4+ot+1),Ct=lt+4;if(c()[lt>>>2>>>0]=ot,S&&$e)Yo(te,Ct,ot+1);else if($e)for($e=0;$e<ot;++$e){var At=te.charCodeAt($e);if(255<At)throw Fs(Ct),new si("String has UTF-16 code units that do not fit in 8 bits");s()[Ct+$e>>>0]=At}else for($e=0;$e<ot;++$e)s()[Ct+$e>>>0]=te[$e];return B!==null&&B.push(Fs,lt),lt},argPackAdvance:ii,readValueFromPointer:mh,Eb(B){Fs(B)}})}var Tm=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Qf=(l,g)=>{for(var S=l>>1,B=S+g/2;!(S>=B)&&o()[S>>>0];)++S;if(32<(S<<=1)-l&&Tm)return Tm.decode(s().slice(l,S));for(S="",B=0;!(B>=g/2);++B){var te=i()[l+2*B>>>1>>>0];if(te==0)break;S+=String.fromCharCode(te)}return S},Xf=(l,g,S)=>{if(S??(S=2147483647),2>S)return 0;var B=g;S=(S-=2)<2*l.length?S/2:l.length;for(var te=0;te<S;++te){var $e=l.charCodeAt(te);i()[g>>>1>>>0]=$e,g+=2}return i()[g>>>1>>>0]=0,g-B},Yf=l=>2*l.length,Jf=(l,g)=>{for(var S=0,B="";!(S>=g/4);){var te=a()[l+4*S>>>2>>>0];if(te==0)break;++S,65536<=te?(te-=65536,B+=String.fromCharCode(55296|te>>10,56320|1023&te)):B+=String.fromCharCode(te)}return B},Zf=(l,g,S)=>{if(g>>>=0,S??(S=2147483647),4>S)return 0;var B=g;S=B+S-4;for(var te=0;te<l.length;++te){var $e=l.charCodeAt(te);if(55296<=$e&&57343>=$e&&($e=65536+((1023&$e)<<10)|1023&l.charCodeAt(++te)),a()[g>>>2>>>0]=$e,(g+=4)+4>S)break}return a()[g>>>2>>>0]=0,g-B},e_=l=>{for(var g=0,S=0;S<l.length;++S){var B=l.charCodeAt(S);55296<=B&&57343>=B&&++S,g+=4}return g};function t_(l,g,S){if(l>>>=0,g>>>=0,S=As(S>>>=0),g===2)var B=Qf,te=Xf,$e=Yf,ot=lt=>o()[lt>>>1>>>0];else g===4&&(B=Jf,te=Zf,$e=e_,ot=lt=>c()[lt>>>2>>>0]);Ws(l,{name:S,fromWireType:lt=>{for(var Ct,At=c()[lt>>>2>>>0],Kt=lt+4,hr=0;hr<=At;++hr){var Tr=lt+4+hr*g;hr!=At&&ot(Tr)!=0||(Kt=B(Kt,Tr-Kt),Ct===void 0?Ct=Kt:(Ct+="\0",Ct+=Kt),Kt=Tr+g)}return Fs(lt),Ct},toWireType:(lt,Ct)=>{if(typeof Ct!="string")throw new si(`Cannot pass non-string to C++ string type ${S}`);var At=$e(Ct),Kt=Vp(4+At+g);return c()[Kt>>>2>>>0]=At/g,te(Ct,Kt+4,At+g),lt!==null&&lt.push(Fs,Kt),Kt},argPackAdvance:ii,readValueFromPointer:mh,Eb(lt){Fs(lt)}})}function r_(l,g){Ws(l>>>=0,{Ub:!0,name:g=As(g>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var n_=()=>1;function s_(l){vh(l>>>0,!J,1,!W,131072,!1),rm()}var $m=l=>{if(!ss)try{if(l(),!(0<Di))try{X?Gp(zt):lh(zt)}catch(g){g instanceof ih||g=="unwind"||Ve(0,g)}}catch(g){g instanceof ih||g=="unwind"||Ve(0,g)}};function fh(l){l>>>=0,typeof Atomics.oc=="function"&&(Atomics.oc(a(),l>>>2,l).value.then(zp),l+=128,Atomics.store(a(),l>>>2,1))}var zp=()=>{var l=Zo();l&&(fh(l),$m(rf))};function i_(l,g){(l>>>=0)==g>>>0?setTimeout(zp):X?postMessage({targetThread:l,cmd:"checkMailbox"}):(l=Ps[l])&&l.postMessage({cmd:"checkMailbox"})}var _h=[];function a_(l,g,S,B,te){for(g>>>=0,B/=2,_h.length=B,S=te>>>0>>>3,te=0;te<B;te++)_h[te]=ns[S+2*te]?ns[S+2*te+1]:f()[S+2*te+1>>>0];return(g?sh[g]:X_[l])(..._h)}function o_(l){l>>>=0,X?postMessage({cmd:"cleanupThread",thread:l}):tm(Ps[l])}function l_(l){}var Op=(l,g)=>{var S=ch[l];if(S===void 0)throw l=Jm(l),S=As(l),Fs(l),new si(`${g} has unknown type ${S}`);return S},Em=(l,g,S)=>{var B=[];return l=l.toWireType(B,S),B.length&&(c()[g>>>2>>>0]=is(B)),l};function u_(l,g,S){return g>>>=0,S>>>=0,l=Yn(l>>>0),g=Op(g,"emval::as"),Em(g,S,l)}function d_(l,g){return g>>>=0,l=Yn(l>>>0),(g=Op(g,"emval::as")).toWireType(null,l)}var Lp=l=>{try{l()}catch(g){ri(g)}},ai=0,Is=null,Sm=0,Np=[],Cm={},Pm={},c_=0,gh=null,p_=[];function Am(l){return function(){if(!ss){if(ai===0){var g=!1,S=!1;(B=>{l().then(B)})((B=0)=>{if(!ss&&(Sm=B,g=!0,S)){ai=2,Lp(()=>lf(Is)),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.resume(),B=!1;try{var te=(lt=a()[Is+8>>>2>>>0],lt=Yt[Pm[lt]],--Di,lt())}catch(Ct){te=Ct,B=!0}var $e=!1;if(!Is){var ot=gh;ot&&(gh=null,(B?ot.reject:ot.resolve)(te),$e=!0)}if(B&&!$e)throw te}var lt}),S=!0,g||(ai=1,Is=function(){var B=Vp(65548),te=B+12;c()[B>>>2>>>0]=te,c()[B+4>>>2>>>0]=te+65536,te=Np[0];var $e=Cm[te];return $e===void 0&&($e=c_++,Cm[te]=$e,Pm[$e]=te),te=$e,a()[B+8>>>2>>>0]=te,B}(),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.pause(),Lp(()=>af(Is)))}else ai===2?(ai=0,Lp(uf),Fs(Is),Is=null,p_.forEach($m)):ri(`invalid state: ${ai}`);return Sm}}()}function h_(l){return l>>>=0,Am(()=>(l=Yn(l)).then(is))}var Bp=[];function m_(l,g,S,B){return S>>>=0,B>>>=0,(l=Bp[l>>>0])(null,g=Yn(g>>>0),S,B)}var f_={},Rp=l=>{var g=f_[l];return g===void 0?As(l):g};function __(l,g,S,B,te){return S>>>=0,B>>>=0,te>>>=0,(l=Bp[l>>>0])(g=Yn(g>>>0),g[S=Rp(S)],B,te)}var Im=()=>typeof globalThis=="object"?globalThis:Function("return this")();function g_(l){return(l>>>=0)==0?is(Im()):(l=Rp(l),is(Im()[l]))}var w_=l=>{var g=Bp.length;return Bp.push(l),g},y_=(l,g)=>{for(var S=Array(l),B=0;B<l;++B)S[B]=Op(c()[g+4*B>>>2>>>0],"parameter "+B);return S},Fm=(l,g)=>Object.defineProperty(g,"name",{value:l});function b_(l,g,S){var B=(g=y_(l,g>>>0)).shift();l--;var te=`return function (obj, func, destructorsRef, args) {
`,$e=0,ot=[];S===0&&ot.push("obj");for(var lt=["retType"],Ct=[B],At=0;At<l;++At)ot.push("arg"+At),lt.push("argType"+At),Ct.push(g[At]),te+=`  var arg${At} = argType${At}.readValueFromPointer(args${$e?"+"+$e:""});
`,$e+=g[At].argPackAdvance;return te+=`  var rv = ${S===1?"new func":"func.call"}(${ot.join(", ")});
`,B.Ub||(lt.push("emval_returnValue"),Ct.push(Em),te+=`  return emval_returnValue(retType, destructorsRef, rv);
`),lt.push(te+`};
`),l=function(Kt){var hr=Function;if(!(hr instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof hr} which is not a function`);var Tr=Fm(hr.name||"unknownFunctionName",function(){});return Tr.prototype=hr.prototype,Tr=new Tr,(Kt=hr.apply(Tr,Kt))instanceof Object?Kt:Tr}(lt)(...Ct),S=`methodCaller<(${g.map(Kt=>Kt.name).join(", ")}) => ${B.name}>`,w_(Fm(S,l))}function v_(l){return l=Rp(l>>>0),is(d[l])}function x_(l,g){return g>>>=0,l=Yn(l>>>0),g=Yn(g),is(l[g])}function k_(l){9<(l>>>=0)&&(Hs[l+1]+=1)}function M_(){return is([])}function T_(l){l=Yn(l>>>0);for(var g=Array(l.length),S=0;S<l.length;S++)g[S]=l[S];return is(g)}function $_(l){return is(Rp(l>>>0))}function E_(){return is({})}function S_(l){for(var g=Yn(l>>>=0);g.length;){var S=g.pop();g.pop()(S)}hh(l)}function C_(l,g,S){g>>>=0,S>>>=0,l=Yn(l>>>0),g=Yn(g),S=Yn(S),l[g]=S}function P_(l,g){return g>>>=0,l=(l=Op(l>>>0,"_emval_take_value")).readValueFromPointer(g),is(l)}function A_(l,g){l=-9007199254740992>l||9007199254740992<l?NaN:Number(l),g>>>=0,l=new Date(1e3*l),a()[g>>>2>>>0]=l.getUTCSeconds(),a()[g+4>>>2>>>0]=l.getUTCMinutes(),a()[g+8>>>2>>>0]=l.getUTCHours(),a()[g+12>>>2>>>0]=l.getUTCDate(),a()[g+16>>>2>>>0]=l.getUTCMonth(),a()[g+20>>>2>>>0]=l.getUTCFullYear()-1900,a()[g+24>>>2>>>0]=l.getUTCDay(),l=(l.getTime()-Date.UTC(l.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[g+28>>>2>>>0]=l}var Jo=l=>l%4==0&&(l%100!=0||l%400==0),zm=[0,31,60,91,121,152,182,213,244,274,305,335],Om=[0,31,59,90,120,151,181,212,243,273,304,334];function I_(l,g){l=-9007199254740992>l||9007199254740992<l?NaN:Number(l),g>>>=0,l=new Date(1e3*l),a()[g>>>2>>>0]=l.getSeconds(),a()[g+4>>>2>>>0]=l.getMinutes(),a()[g+8>>>2>>>0]=l.getHours(),a()[g+12>>>2>>>0]=l.getDate(),a()[g+16>>>2>>>0]=l.getMonth(),a()[g+20>>>2>>>0]=l.getFullYear()-1900,a()[g+24>>>2>>>0]=l.getDay();var S=(Jo(l.getFullYear())?zm:Om)[l.getMonth()]+l.getDate()-1|0;a()[g+28>>>2>>>0]=S,a()[g+36>>>2>>>0]=-60*l.getTimezoneOffset(),S=new Date(l.getFullYear(),6,1).getTimezoneOffset();var B=new Date(l.getFullYear(),0,1).getTimezoneOffset();l=0|(S!=B&&l.getTimezoneOffset()==Math.min(B,S)),a()[g+32>>>2>>>0]=l}function F_(l){l>>>=0;var g=new Date(a()[l+20>>>2>>>0]+1900,a()[l+16>>>2>>>0],a()[l+12>>>2>>>0],a()[l+8>>>2>>>0],a()[l+4>>>2>>>0],a()[l>>>2>>>0],0),S=a()[l+32>>>2>>>0],B=g.getTimezoneOffset(),te=new Date(g.getFullYear(),6,1).getTimezoneOffset(),$e=new Date(g.getFullYear(),0,1).getTimezoneOffset(),ot=Math.min($e,te);return 0>S?a()[l+32>>>2>>>0]=+(te!=$e&&ot==B):0<S!=(ot==B)&&(te=Math.max($e,te),g.setTime(g.getTime()+6e4*((0<S?ot:te)-B))),a()[l+24>>>2>>>0]=g.getDay(),S=(Jo(g.getFullYear())?zm:Om)[g.getMonth()]+g.getDate()-1|0,a()[l+28>>>2>>>0]=S,a()[l>>>2>>>0]=g.getSeconds(),a()[l+4>>>2>>>0]=g.getMinutes(),a()[l+8>>>2>>>0]=g.getHours(),a()[l+12>>>2>>>0]=g.getDate(),a()[l+16>>>2>>>0]=g.getMonth(),a()[l+20>>>2>>>0]=g.getYear(),l=g.getTime(),BigInt(isNaN(l)?-1:l/1e3)}function Lm(l,g,S,B,te,$e,ot){return X?en(16,1,l,g,S,B,te,$e,ot):-52}function Nm(l,g,S,B,te,$e){if(X)return en(17,1,l,g,S,B,te,$e)}function z_(l,g,S,B){l>>>=0,g>>>=0,S>>>=0,B>>>=0;var te=new Date().getFullYear(),$e=new Date(te,0,1),ot=new Date(te,6,1);te=$e.getTimezoneOffset();var lt=ot.getTimezoneOffset(),Ct=Math.max(te,lt);c()[l>>>2>>>0]=60*Ct,a()[g>>>2>>>0]=+(te!=lt),$e=(l=At=>At.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])($e),ot=l(ot),lt<te?(Yo($e,S,17),Yo(ot,B,17)):(Yo($e,B,17),Yo(ot,S,17))}var wh=[],Bm=(l,g)=>{wh.length=0;for(var S;S=s()[l++>>>0];){var B=S!=105;g+=(B&=S!=112)&&g%8?4:0,wh.push(S==112?c()[g>>>2>>>0]:S==106?ns[g>>>3]:S==105?a()[g>>>2>>>0]:f()[g>>>3>>>0]),g+=B?8:4}return wh};function O_(l,g,S){return l>>>=0,g=Bm(g>>>0,S>>>0),sh[l](...g)}function L_(l,g,S){return l>>>=0,g=Bm(g>>>0,S>>>0),sh[l](...g)}var N_=()=>{},B_=()=>Date.now();function R_(l,g){return Ht(on(l>>>0,g>>>0))}var Rm,D_=()=>{throw Di+=1,"unwind"};function j_(){return 4294901760}Rm=()=>performance.timeOrigin+performance.now();var U_=()=>navigator.hardwareConcurrency;function V_(){return ri("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function G_(l){l>>>=0;var g=s().length;if(l<=g||4294901760<l)return!1;for(var S=1;4>=S;S*=2){var B=g*(1+.2/S);B=Math.min(B,l+100663296);var te=Math;B=Math.max(l,B);e:{te=(te.min.call(te,4294901760,B+(65536-B%65536)%65536)-Qe.buffer.byteLength+65535)/65536;try{Qe.grow(te),zr();var $e=1;break e}catch{}$e=void 0}if($e)return!0}return!1}var Dp=()=>(ri("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),rp={},Dm=l=>{l.forEach(g=>{Dp()})};function q_(){var l=Error().stack.toString().split(`
`);return l[0]=="Error"&&l.shift(),Dm(l),rp.Qb=Dp(),rp.fc=l,rp.Qb}function W_(l,g,S){if(l>>>=0,g>>>=0,rp.Qb==l)var B=rp.fc;else(B=Error().stack.toString().split(`
`))[0]=="Error"&&B.shift(),Dm(B);for(var te=3;B[te]&&Dp()!=l;)++te;for(l=0;l<S&&B[l+te];++l)a()[g+4*l>>>2>>>0]=Dp();return l}var yh,bh={},jm=()=>{if(!yh){var l,g={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(l in bh)bh[l]===void 0?delete g[l]:g[l]=bh[l];var S=[];for(l in g)S.push(`${l}=${g[l]}`);yh=S}return yh};function Um(l,g){if(X)return en(18,1,l,g);l>>>=0,g>>>=0;var S=0;return jm().forEach((B,te)=>{var $e=g+S;for(te=c()[l+4*te>>>2>>>0]=$e,$e=0;$e<B.length;++$e)r()[te++>>>0]=B.charCodeAt($e);r()[te>>>0]=0,S+=B.length+1}),0}function Vm(l,g){if(X)return en(19,1,l,g);l>>>=0,g>>>=0;var S=jm();c()[l>>>2>>>0]=S.length;var B=0;return S.forEach(te=>B+=te.length+1),c()[g>>>2>>>0]=B,0}function Gm(l){return X?en(20,1,l):52}function qm(l,g,S,B){return X?en(21,1,l,g,S,B):52}function Wm(l,g,S,B){return X?en(22,1,l,g,S,B):70}var H_=[null,[],[]];function Hm(l,g,S,B){if(X)return en(23,1,l,g,S,B);g>>>=0,S>>>=0,B>>>=0;for(var te=0,$e=0;$e<S;$e++){var ot=c()[g>>>2>>>0],lt=c()[g+4>>>2>>>0];g+=8;for(var Ct=0;Ct<lt;Ct++){var At=s()[ot+Ct>>>0],Kt=H_[l];At===0||At===10?((l===1?mr:Ht)(lm(Kt,0)),Kt.length=0):Kt.push(At)}te+=lt}return c()[B>>>2>>>0]=te,0}var Km=[31,29,31,30,31,30,31,31,30,31,30,31],Qm=[31,28,31,30,31,30,31,31,30,31,30,31],K_=(l,g)=>{r().set(l,g>>>0)};function Xm(l,g,S,B){function te(ut,Xr,pn){for(ut=typeof ut=="number"?ut.toString():ut||"";ut.length<Xr;)ut=pn[0]+ut;return ut}function $e(ut,Xr){return te(ut,Xr,"0")}function ot(ut,Xr){function pn(cf){return 0>cf?-1:0<cf?1:0}var Ui;return(Ui=pn(ut.getFullYear()-Xr.getFullYear()))===0&&(Ui=pn(ut.getMonth()-Xr.getMonth()))===0&&(Ui=pn(ut.getDate()-Xr.getDate())),Ui}function lt(ut){switch(ut.getDay()){case 0:return new Date(ut.getFullYear()-1,11,29);case 1:return ut;case 2:return new Date(ut.getFullYear(),0,3);case 3:return new Date(ut.getFullYear(),0,2);case 4:return new Date(ut.getFullYear(),0,1);case 5:return new Date(ut.getFullYear()-1,11,31);case 6:return new Date(ut.getFullYear()-1,11,30)}}function Ct(ut){var Xr=ut.Cb;for(ut=new Date(new Date(ut.Db+1900,0,1).getTime());0<Xr;){var pn=ut.getMonth(),Ui=(Jo(ut.getFullYear())?Km:Qm)[pn];if(!(Xr>Ui-ut.getDate())){ut.setDate(ut.getDate()+Xr);break}Xr-=Ui-ut.getDate()+1,ut.setDate(1),11>pn?ut.setMonth(pn+1):(ut.setMonth(0),ut.setFullYear(ut.getFullYear()+1))}return pn=new Date(ut.getFullYear()+1,0,4),Xr=lt(new Date(ut.getFullYear(),0,4)),pn=lt(pn),0>=ot(Xr,ut)?0>=ot(pn,ut)?ut.getFullYear()+1:ut.getFullYear():ut.getFullYear()-1}l>>>=0,g>>>=0,S>>>=0,B>>>=0;var At=c()[B+40>>>2>>>0];for(var Kt in B={lc:a()[B>>>2>>>0],kc:a()[B+4>>>2>>>0],Ib:a()[B+8>>>2>>>0],Mb:a()[B+12>>>2>>>0],Jb:a()[B+16>>>2>>>0],Db:a()[B+20>>>2>>>0],vb:a()[B+24>>>2>>>0],Cb:a()[B+28>>>2>>>0],sc:a()[B+32>>>2>>>0],jc:a()[B+36>>>2>>>0],mc:At?on(At):""},S=on(S),At={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})S=S.replace(new RegExp(Kt,"g"),At[Kt]);var hr,Tr,tn="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),gs="January February March April May June July August September October November December".split(" ");for(Kt in At={"%a":ut=>tn[ut.vb].substring(0,3),"%A":ut=>tn[ut.vb],"%b":ut=>gs[ut.Jb].substring(0,3),"%B":ut=>gs[ut.Jb],"%C":ut=>$e((ut.Db+1900)/100|0,2),"%d":ut=>$e(ut.Mb,2),"%e":ut=>te(ut.Mb,2," "),"%g":ut=>Ct(ut).toString().substring(2),"%G":Ct,"%H":ut=>$e(ut.Ib,2),"%I":ut=>((ut=ut.Ib)==0?ut=12:12<ut&&(ut-=12),$e(ut,2)),"%j":ut=>{for(var Xr=0,pn=0;pn<=ut.Jb-1;Xr+=(Jo(ut.Db+1900)?Km:Qm)[pn++]);return $e(ut.Mb+Xr,3)},"%m":ut=>$e(ut.Jb+1,2),"%M":ut=>$e(ut.kc,2),"%n":()=>`
`,"%p":ut=>0<=ut.Ib&&12>ut.Ib?"AM":"PM","%S":ut=>$e(ut.lc,2),"%t":()=>"	","%u":ut=>ut.vb||7,"%U":ut=>$e(Math.floor((ut.Cb+7-ut.vb)/7),2),"%V":ut=>{var Xr=Math.floor((ut.Cb+7-(ut.vb+6)%7)/7);if(2>=(ut.vb+371-ut.Cb-2)%7&&Xr++,Xr)Xr==53&&((pn=(ut.vb+371-ut.Cb)%7)==4||pn==3&&Jo(ut.Db)||(Xr=1));else{Xr=52;var pn=(ut.vb+7-ut.Cb-1)%7;(pn==4||pn==5&&Jo(ut.Db%400-1))&&Xr++}return $e(Xr,2)},"%w":ut=>ut.vb,"%W":ut=>$e(Math.floor((ut.Cb+7-(ut.vb+6)%7)/7),2),"%y":ut=>(ut.Db+1900).toString().substring(2),"%Y":ut=>ut.Db+1900,"%z":ut=>(0<=(ut=ut.jc)?"+":"-")+("0000"+((ut=Math.abs(ut)/60)/60*100+ut%60)).slice(-4),"%Z":ut=>ut.mc,"%%":()=>"%"},S=S.replace(/%%/g,"\0\0"),At)S.includes(Kt)&&(S=S.replace(new RegExp(Kt,"g"),At[Kt](B)));return hr=S=S.replace(/\0\0/g,"%"),Tr=Array(uh(hr)+1),cm(hr,Tr,0,Tr.length),(Kt=Tr).length>g?0:(K_(Kt,l),Kt.length-1)}function Q_(l,g,S,B){return Xm(l>>>0,g>>>0,S>>>0,B>>>0)}X||function(){for(var l=d.numThreads-1;l--;)sm();Rn.unshift(()=>{var g;Ri++,g=()=>Wh(),X?g():Promise.all(ni.map(nm)).then(g)})}();for(var Ym=Array(256),jp=0;256>jp;++jp)Ym[jp]=String.fromCharCode(jp);km=Ym,si=d.BindingError=class extends Error{constructor(l){super(l),this.name="BindingError"}},d.InternalError=class extends Error{constructor(l){super(l),this.name="InternalError"}},Hs.push(0,1,void 0,1,null,1,!0,1,!1,1),d.count_emval_handles=()=>Hs.length/2-5-ph.length;var X_=[oh,Zh,im,um,dm,pm,hm,mm,fm,_m,gm,wm,ym,bm,vm,xm,Lm,Nm,Um,Vm,Gm,qm,Wm,Hm],Yt=function(){function l($e,ot){return Yt=$e.exports,Yt=function(){var Kt=Yt,hr={};for(let[Tr,tn]of Object.entries(Kt))hr[Tr]=typeof tn=="function"?(...gs)=>{Np.push(Tr);try{return tn(...gs)}finally{ss||(Np.pop(),Is&&ai===1&&Np.length===0&&(ai=0,Di+=1,Lp(of),typeof Fibers<"u"&&Fibers.tc()))}}:tn;return hr}(),lt=Yt,Ct=Kt=>hr=>Kt(hr)>>>0,At=Kt=>()=>Kt()>>>0,(lt=Object.assign({},lt)).Da=Ct(lt.Da),lt.gb=At(lt.gb),lt.ib=Ct(lt.ib),lt.emscripten_main_runtime_thread_id=At(lt.emscripten_main_runtime_thread_id),lt.tb=Ct(lt.tb),lt.ub=At(lt.ub),Yt=lt,em.push(Yt.jb),qs.unshift(Yt.Ca),Ut=ot,Wh(),Yt;var lt,Ct,At}var g,S,B,te=Yh();if(Ri++,d.instantiateWasm)try{return d.instantiateWasm(te,l)}catch($e){Ht(`Module.instantiateWasm callback failed with error: ${$e}`),C($e)}return nh||(nh=d.locateFile?Hh("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":d.locateFile?d.locateFile("ort-wasm-simd-threaded.jsep.wasm",pt):pt+"ort-wasm-simd-threaded.jsep.wasm":new URL(n("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),n.b).href),(g=te,S=function($e){l($e.instance,$e.module)},B=nh,vt||typeof WebAssembly.instantiateStreaming!="function"||Hh(B)||Kh(B)||typeof fetch!="function"?Xh(B,g,S):fetch(B,{credentials:"same-origin"}).then($e=>WebAssembly.instantiateStreaming($e,g).then(S,function(ot){return Ht(`wasm streaming compile failed: ${ot}`),Ht("falling back to ArrayBuffer instantiation"),Xh(B,g,S)}))).catch(C),{}}(),Jm=l=>(Jm=Yt.Da)(l),Zm=()=>(Zm=Yt.Ea)();d._OrtInit=(l,g)=>(d._OrtInit=Yt.Fa)(l,g),d._OrtGetLastError=(l,g)=>(d._OrtGetLastError=Yt.Ga)(l,g),d._OrtCreateSessionOptions=(l,g,S,B,te,$e,ot,lt,Ct,At)=>(d._OrtCreateSessionOptions=Yt.Ha)(l,g,S,B,te,$e,ot,lt,Ct,At),d._OrtAppendExecutionProvider=(l,g)=>(d._OrtAppendExecutionProvider=Yt.Ia)(l,g),d._OrtAddFreeDimensionOverride=(l,g,S)=>(d._OrtAddFreeDimensionOverride=Yt.Ja)(l,g,S),d._OrtAddSessionConfigEntry=(l,g,S)=>(d._OrtAddSessionConfigEntry=Yt.Ka)(l,g,S),d._OrtReleaseSessionOptions=l=>(d._OrtReleaseSessionOptions=Yt.La)(l),d._OrtCreateSession=(l,g,S)=>(d._OrtCreateSession=Yt.Ma)(l,g,S),d._OrtReleaseSession=l=>(d._OrtReleaseSession=Yt.Na)(l),d._OrtGetInputOutputCount=(l,g,S)=>(d._OrtGetInputOutputCount=Yt.Oa)(l,g,S),d._OrtGetInputName=(l,g)=>(d._OrtGetInputName=Yt.Pa)(l,g),d._OrtGetOutputName=(l,g)=>(d._OrtGetOutputName=Yt.Qa)(l,g),d._OrtFree=l=>(d._OrtFree=Yt.Ra)(l),d._OrtCreateTensor=(l,g,S,B,te,$e)=>(d._OrtCreateTensor=Yt.Sa)(l,g,S,B,te,$e),d._OrtGetTensorData=(l,g,S,B,te)=>(d._OrtGetTensorData=Yt.Ta)(l,g,S,B,te),d._OrtReleaseTensor=l=>(d._OrtReleaseTensor=Yt.Ua)(l),d._OrtCreateRunOptions=(l,g,S,B)=>(d._OrtCreateRunOptions=Yt.Va)(l,g,S,B),d._OrtAddRunConfigEntry=(l,g,S)=>(d._OrtAddRunConfigEntry=Yt.Wa)(l,g,S),d._OrtReleaseRunOptions=l=>(d._OrtReleaseRunOptions=Yt.Xa)(l),d._OrtCreateBinding=l=>(d._OrtCreateBinding=Yt.Ya)(l),d._OrtBindInput=(l,g,S)=>(d._OrtBindInput=Yt.Za)(l,g,S),d._OrtBindOutput=(l,g,S,B)=>(d._OrtBindOutput=Yt._a)(l,g,S,B),d._OrtClearBoundOutputs=l=>(d._OrtClearBoundOutputs=Yt.$a)(l),d._OrtReleaseBinding=l=>(d._OrtReleaseBinding=Yt.ab)(l),d._OrtRunWithBinding=(l,g,S,B,te)=>(d._OrtRunWithBinding=Yt.bb)(l,g,S,B,te),d._OrtRun=(l,g,S,B,te,$e,ot,lt)=>(d._OrtRun=Yt.cb)(l,g,S,B,te,$e,ot,lt),d._OrtEndProfiling=l=>(d._OrtEndProfiling=Yt.db)(l),d._JsepOutput=(l,g,S)=>(d._JsepOutput=Yt.eb)(l,g,S),d._JsepGetNodeName=l=>(d._JsepGetNodeName=Yt.fb)(l);var Up,Zo=()=>(Zo=Yt.gb)(),Fs=d._free=l=>(Fs=d._free=Yt.hb)(l),Vp=d._malloc=l=>(Vp=d._malloc=Yt.ib)(l),vh=(l,g,S,B,te,$e)=>(vh=Yt.lb)(l,g,S,B,te,$e),ef=()=>(ef=Yt.mb)(),tf=(l,g,S,B,te)=>(tf=Yt.nb)(l,g,S,B,te),xh=l=>(xh=Yt.ob)(l),Gp=l=>(Gp=Yt.pb)(l),rf=()=>(rf=Yt.qb)(),nf=(l,g)=>(nf=Yt.rb)(l,g),qp=l=>(qp=Yt.sb)(l),kh=l=>(kh=Yt.tb)(l),Mh=()=>(Mh=Yt.ub)(),sf=d.dynCall_ii=(l,g)=>(sf=d.dynCall_ii=Yt.wb)(l,g),af=l=>(af=Yt.xb)(l),of=()=>(of=Yt.yb)(),lf=l=>(lf=Yt.zb)(l),uf=()=>(uf=Yt.Ab)();function df(){0<Ri||(X?(E(d),X||Fp(qs),startWorker(d)):(Fp(Rn),0<Ri||Up||(Up=!0,d.calledRun=!0,ss||(X||Fp(qs),E(d),X||Fp(rh)))))}return d.___start_em_js=932469,d.___stop_em_js=932715,d.stackSave=()=>Mh(),d.stackRestore=l=>qp(l),d.stackAlloc=l=>kh(l),d.setValue=function(l,g,S="i8"){switch(S.endsWith("*")&&(S="*"),S){case"i1":case"i8":r()[l>>>0]=g;break;case"i16":i()[l>>>1>>>0]=g;break;case"i32":a()[l>>>2>>>0]=g;break;case"i64":ns[l>>>3]=BigInt(g);break;case"float":h()[l>>>2>>>0]=g;break;case"double":f()[l>>>3>>>0]=g;break;case"*":c()[l>>>2>>>0]=g;break;default:ri(`invalid type for setValue: ${S}`)}},d.getValue=function(l,g="i8"){switch(g.endsWith("*")&&(g="*"),g){case"i1":case"i8":return r()[l>>>0];case"i16":return i()[l>>>1>>>0];case"i32":return a()[l>>>2>>>0];case"i64":return ns[l>>>3];case"float":return h()[l>>>2>>>0];case"double":return f()[l>>>3>>>0];case"*":return c()[l>>>2>>>0];default:ri(`invalid type for getValue: ${g}`)}},d.UTF8ToString=on,d.stringToUTF8=Yo,d.lengthBytesUTF8=uh,tp=function l(){Up||df(),Up||(tp=l)},df(),d.PTR_SIZE=4,D},Gr=Dr,((e=globalThis.self)==null?void 0:e.name)==="em-pthread"&&Dr()}),jo=xe(()=>{ct(),hn=typeof location>"u"?void 0:location.origin,Gt=(()=>{var e;return(e=typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:er&&er.tagName.toUpperCase()==="SCRIPT"&&er.src||new URL("kokoro.umd.js",document.baseURI).href)!=null&&e.startsWith("file:")?new URL(new URL(n("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),n.b).href,hn).href:typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:er&&er.tagName.toUpperCase()==="SCRIPT"&&er.src||new URL("kokoro.umd.js",document.baseURI).href})(),Dn=()=>{if(Gt&&!Gt.startsWith("blob:"))return Gt.substring(0,Gt.lastIndexOf("/")+1)},sn=(e,t)=>{try{let r=t??Gt;return(r?new URL(e,r):new URL(e)).origin===hn}catch{return!1}},an=(e,t)=>{let r=t??Gt;try{return(r?new URL(e,r):new URL(e)).href}catch{return}},it=(e,t)=>`${t??"./"}${e}`,St=async e=>{let t=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(t)},Bt=async e=>(await import(e)).default,Ir=(Rt(),He($t)).default,Mn=async()=>{if(!Gt)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(sn(Gt))return[void 0,Ir()];let e=await St(Gt);return[e,Ir(e)]},gn=(_p(),He(_r)).default,F=async(e,t,r)=>{if(!e&&!t&&gn&&Gt&&sn(Gt))return[void 0,gn];{let s="ort-wasm-simd-threaded.jsep.mjs",i=e??an(s,t),o=r&&i&&!sn(i,t),a=o?await St(i):i??it(s,t);return[o?a:void 0,await Bt(a)]}}}),js=xe(()=>{jo(),Cn=!1,wn=!1,yn=!1,In=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},ws=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Hn=async e=>{if(Cn)return Promise.resolve();if(wn)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(yn)throw new Error("previous call to 'initializeWebAssembly()' failed.");wn=!0;let t=e.initTimeout,r=e.numThreads;if(!ws())throw new Error("WebAssembly SIMD is not supported in the current environment.");let s=In();r>1&&!s&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+r+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=r=1);let i=e.wasmPaths,o=typeof i=="string"?i:void 0,a=i==null?void 0:i.mjs,c=(a==null?void 0:a.href)??a,h=i==null?void 0:i.wasm,f=(h==null?void 0:h.href)??h,E=e.wasmBinary,[C,d]=await F(c,o,r>1),D=!1,W=[];if(t>0&&W.push(new Promise(J=>{setTimeout(()=>{D=!0,J()},t)})),W.push(new Promise((J,X)=>{let ne={numThreads:r};if(E)ne.wasmBinary=E;else if(f||o)ne.locateFile=he=>f??o+he;else if(c&&c.indexOf("blob:")!==0)ne.locateFile=he=>new URL(he,c).href;else if(C){let he=Dn();he&&(ne.locateFile=ke=>he+ke)}d(ne).then(he=>{wn=!1,Cn=!0,ar=he,J(),C&&URL.revokeObjectURL(C)},he=>{wn=!1,yn=!0,X(he)})})),await Promise.race(W),D)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Nr=()=>{if(Cn&&ar)return ar;throw new Error("WebAssembly is not initialized yet.")}}),Si=xe(()=>{js(),Wr=(e,t)=>{let r=Nr(),s=r.lengthBytesUTF8(e)+1,i=r._malloc(s);return r.stringToUTF8(e,i,s),t.push(i),i},fn=(e,t,r,s)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,o])=>{let a=t?t+i:i;if(typeof o=="object")fn(o,a+".",r,s);else if(typeof o=="string"||typeof o=="number")s(a,o.toString());else{if(typeof o!="boolean")throw new Error("Can't handle extra config type: "+typeof o);s(a,o?"1":"0")}})},pr=e=>{let t=Nr(),r=t.stackSave();try{let s=t.PTR_SIZE,i=t.stackAlloc(2*s);t._OrtGetLastError(i,i+s);let o=Number(t.getValue(i,s===4?"i32":"i64")),a=t.getValue(i+s,"*"),c=a?t.UTF8ToString(a):"";throw new Error(`${e} ERROR_CODE: ${o}, ERROR_MESSAGE: ${c}`)}finally{t.stackRestore(r)}}}),gp=xe(()=>{js(),Si(),as=e=>{let t=Nr(),r=0,s=[],i=e||{};try{if((e==null?void 0:e.logSeverityLevel)===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if((e==null?void 0:e.logVerbosityLevel)===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);(e==null?void 0:e.terminate)===void 0&&(i.terminate=!1);let o=0;return(e==null?void 0:e.tag)!==void 0&&(o=Wr(e.tag,s)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,o),r===0&&pr("Can't create run options."),(e==null?void 0:e.extra)!==void 0&&fn(e.extra,"",new WeakSet,(a,c)=>{let h=Wr(a,s),f=Wr(c,s);t._OrtAddRunConfigEntry(r,h,f)!==0&&pr(`Can't set a run config entry: ${a} - ${c}.`)}),[r,s]}catch(o){throw r!==0&&t._OrtReleaseRunOptions(r),s.forEach(a=>t._free(a)),o}}}),wp=xe(()=>{js(),Si(),ys=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},os=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Jn=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},ls=(e,t,r)=>{for(let s of t){let i=typeof s=="string"?s:s.name;switch(i){case"webnn":if(i="WEBNN",typeof s!="string"){let a=s==null?void 0:s.deviceType;if(a){let c=Wr("deviceType",r),h=Wr(a,r);Nr()._OrtAddSessionConfigEntry(e,c,h)!==0&&pr(`Can't set a session config entry: 'deviceType' - ${a}.`)}}break;case"webgpu":if(i="JS",typeof s!="string"){let a=s;if(a!=null&&a.preferredLayout){if(a.preferredLayout!=="NCHW"&&a.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${a.preferredLayout}`);let c=Wr("preferredLayout",r),h=Wr(a.preferredLayout,r);Nr()._OrtAddSessionConfigEntry(e,c,h)!==0&&pr(`Can't set a session config entry: 'preferredLayout' - ${a.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let o=Wr(i,r);Nr()._OrtAppendExecutionProvider(e,o)!==0&&pr(`Can't append execution provider: ${i}.`)}},Fn=e=>{let t=Nr(),r=0,s=[],i=e||{};Jn(i);try{let o=ys(i.graphOptimizationLevel??"all"),a=os(i.executionMode??"sequential"),c=typeof i.logId=="string"?Wr(i.logId,s):0,h=i.logSeverityLevel??2;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log serverity level is not valid: ${h}`);let f=i.logVerbosityLevel??0;if(!Number.isInteger(f)||f<0||f>4)throw new Error(`log verbosity level is not valid: ${f}`);let E=typeof i.optimizedModelFilePath=="string"?Wr(i.optimizedModelFilePath,s):0;if(r=t._OrtCreateSessionOptions(o,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,c,h,f,E),r===0&&pr("Can't create session options."),i.executionProviders&&ls(r,i.executionProviders,s),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let C=Wr("enableGraphCapture",s),d=Wr(i.enableGraphCapture.toString(),s);t._OrtAddSessionConfigEntry(r,C,d)!==0&&pr(`Can't set a session config entry: 'enableGraphCapture' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[C,d]of Object.entries(i.freeDimensionOverrides)){if(typeof C!="string")throw new Error(`free dimension override name must be a string: ${C}`);if(typeof d!="number"||!Number.isInteger(d)||d<0)throw new Error(`free dimension override value must be a non-negative integer: ${d}`);let D=Wr(C,s);t._OrtAddFreeDimensionOverride(r,D,d)!==0&&pr(`Can't set a free dimension override: ${C} - ${d}.`)}return i.extra!==void 0&&fn(i.extra,"",new WeakSet,(C,d)=>{let D=Wr(C,s),W=Wr(d,s);t._OrtAddSessionConfigEntry(r,D,W)!==0&&pr(`Can't set a session config entry: ${C} - ${d}.`)}),[r,s]}catch(o){throw r!==0&&t._OrtReleaseSessionOptions(r)!==0&&pr("Can't release session options."),s.forEach(a=>t._free(a)),o}}}),Jt=xe(()=>{Kn=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},zn=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},On=(e,t)=>{let r=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],s=typeof t=="number"?t:t.reduce((i,o)=>i*o,1);return r>0?Math.ceil(s*r):void 0},Zn=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},u=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},m=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",T=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",q=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),Jc=xe(()=>{ct(),_e=async e=>{if(typeof e=="string"){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),s=r?parseInt(r,10):0;if(s<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i,o=t.body.getReader();try{i=new ArrayBuffer(s)}catch(c){if(!(c instanceof RangeError))throw c;{let h=Math.ceil(s/65536);i=new WebAssembly.Memory({initial:h,maximum:h}).buffer}}let a=0;for(;;){let{done:c,value:h}=await o.read();if(c)break;let f=h.byteLength;new Uint8Array(i,a,f).set(h),a+=f}return new Uint8Array(i,0,s)}}return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),ts=xe(()=>{Jt(),Ie=["V","I","W","E","F"],De=(e,t)=>{console.log(`[${Ie[e]},${new Date().toISOString()}]${t}`)},Dt=(e,t)=>{Ke=e,kt=t},tr=(e,t)=>{let r=u(e);r>=u(Ke)&&De(r,typeof t=="function"?t():t)},wt=(...e)=>{kt&&tr(...e)}}),Zc=xe(()=>{Jt(),Qt=(e,t)=>new(Zn(t))(e)}),Uo=xe(()=>{}),yp=xe(()=>{ts(),Uo(),Xt=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),qr=[],jr=e=>16*Math.ceil(Number(e)/16),$r=e=>{for(let t=0;t<qr.length;t++){let r=qr[t];if(e<=r)return r}return 16*Math.ceil(e/16)},Ne=1,M=()=>Ne++,ee=async(e,t,r,s)=>{let i=jr(r),o=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,o,0,i),e.flush(),await o.mapAsync(GPUMapMode.READ);let c=o.getMappedRange();if(s){let h=s();return h.set(new Uint8Array(c,0,r)),h}return new Uint8Array(c.slice(0,r))}finally{o.destroy()}},ce=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[t]of Xt)qr.push(t),this.freeBuffers.set(t,[]),this.freeUniformBuffers.set(t,[]);this.sessionCount=0}upload(e,t){let r=t.buffer,s=t.byteOffset,i=t.byteLength,o=jr(i),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(Number(a.originalSize)!==i)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${i}`);let c=this.backend.device.createBuffer({mappedAtCreation:!0,size:o,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),h=c.getMappedRange();new Uint8Array(h).set(new Uint8Array(r,s,i)),c.unmap();let f=this.backend.device.createCommandEncoder();f.copyBufferToBuffer(c,0,a.gpuData.buffer,0,o),this.backend.device.queue.submit([f.finish()]),c.destroy(),wt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,t){let r=this.storageCache.get(e);if(!r)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(t);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(r.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let i=jr(r.originalSize),o=this.backend.getCommandEncoder();this.backend.endComputePass(),o.copyBufferToBuffer(r.gpuData.buffer,0,s.gpuData.buffer,0,i)}registerExternalBuffer(e,t,r){let s;if(r){if(s=r[0],e===r[1])return wt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else s=M();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:e},originalSize:t}),wt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${s}, registered.`),s}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),wt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let r,s=$r(e),i=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,o=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(i||o){let c=(i?this.freeBuffers:this.freeUniformBuffers).get(s);r=c&&c.length>0?c.pop():this.backend.device.createBuffer({size:s,usage:t})}else r=this.backend.device.createBuffer({size:s,usage:t});let a={id:M(),type:0,buffer:r};return this.storageCache.set(a.id,{gpuData:a,originalSize:Number(e)}),wt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){var t;return(t=this.storageCache.get(e))==null?void 0:t.gpuData}release(e){let t=typeof e=="bigint"?Number(e):e,r=this.storageCache.get(t);if(!r){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return wt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(e,t){let r=this.storageCache.get(Number(e));if(!r)throw new Error("data does not exist");await ee(this.backend,r.gpuData.buffer,r.originalSize,t)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let t=Xt.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let r=this.freeBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let r=this.freeUniformBuffers.get(e.size)||[];t===void 0||r.length>=t?e.destroy():r.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach(r=>{r.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(wt("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(r=>{r.gpuData.buffer.destroy()}),this.storageCache=new Map)}},ve=(...e)=>new ce(...e)}),Qr=xe(()=>{Ge=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Le=e=>new Ge(e)}),or=xe(()=>{_t=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},Mt=class{static calcShape(e,t,r=!1){let s=e.length,i=t.length;if(s===0)return t;if(i===0)return e;let o=Math.max(e.length,t.length),a=new Array(o);if(r){if(s<2||i<2)return;let c=_t.calcMatMulShape([e[s-2],e[s-1]],[t[i-2],t[i-1]]);if(c===void 0)return;[a[o-2],a[o-1]]=c}for(let c=r?3:1;c<=o;c++){let h=s-c<0?1:e[s-c],f=i-c<0?1:t[i-c];if(h!==f&&h>1&&f>1)return;let E=Math.max(h,f);if(h&&f)a[o-c]=Math.max(h,f);else{if(E>1)return;a[o-c]=0}}return a}static isValidBroadcast(e,t){let r=e.length,s=t.length;if(r>s)return!1;for(let i=1;i<=r;i++)if(e[r-i]!==1&&e[r-i]!==t[s-i])return!1;return!0}},ye=class Wp{static size(t){return Wp.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let s=t.length;if(s===0)return[];let i=new Array(s),o=s-1;for(;o>=0;){if(t[o]%r==0){i[o]=t[o]/r;break}if(r%t[o]!=0)throw new Error("cannot convert shape");i[o]=1,r/=t[o],o--}for(o--;o>=0;o--)i[o]=t[o];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return Wp.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return Wp.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,s){let i=1;for(let o=r;o<s;o++){if(t[o]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=Number(t[o])}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let s=new Array(r);s[r-1]=1,s[r-2]=t[r-1];for(let i=r-3;i>=0;--i)s[i]=s[i+1]*t[i+1];return s}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(s=>this.normalizeAxis(s,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(s=>t[s]):t.slice().reverse()}static padShape(t,r){let s=t.length;return t.map((i,o)=>i+r[o]+r[o+s])}static areEqual(t,r){return t.length===r.length&&t.every((s,i)=>s===r[i])}},Ot=class np{static adjustPoolAttributes(t,r,s,i,o,a){if(!t&&s.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let c=0;c<r.length-2;c++)c>=s.length?s.push(r[c+2]):s[c]=r[c+2];for(let c=0;c<s.length;c++)if(c<i.length){if(i[c]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let c=0;c<s.length;c++)if(c<o.length){if(o[c]<0)throw new Error("dilations should be greater than or equal to 1")}else o.push(1);for(let c=0;c<2*s.length;c++)if(c<a.length){if(a[c]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let c=0;c<s.length;c++){if(s[c]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[c]>=s[c]||a[c+s.length]>=s[c])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,s,i,o,a,c){if(c){if(o.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let h=0;h<t.length-2;h++)np.adjustPadAndReturnShape(t[h+(a?1:2)],r[h],s[h],i[h],o,h,h+t.length-2,c)}}static computePoolOutputShape(t,r,s,i,o,a,c){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let h=[r[0],r[1]];return np.computeShapeHelper(t,r,h,s,i,o,a,c),h}static computeConvOutputShape(t,r,s,i,o,a,c){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let h=[t[0],r[0]];return np.computeShapeHelper(!1,t,h,s,i,o,a,c),h}static computeShapeHelper(t,r,s,i,o,a,c,h){if(t)for(let f=0;f<r.length-2;f++)s.push(1);else for(let f=0;f<r.length-2;f++)s.push(np.adjustPadAndReturnShape(r[f+2],i[f],o[f],a[f],c,f,f+r.length-2,h))}static adjustPadAndReturnShape(t,r,s,i,o,a,c,h){let f=s*(i-1)+1;if(!h||h==="NOTSET")return Math.floor((t+o[a]+o[c]-f)/r+1);switch(h){case"VALID":return o[a]=0,o[c]=0,Math.floor((t-f)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(s!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let E=((t+r-1)/r-1)*r+i-t;return o[a]=Math.floor(h==="SAME_LOWER"?(E+1)/2:E/2),o[c]=E-o[a],Math.floor((t+E-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}}},nr=class{static getShapeOfGemmResult(e,t,r,s,i){if(e.length!==2||r.length!==2)throw new Error("shape need to be of size 2");let o,a,c;t?(o=e[1],a=e[0]):(o=e[0],a=e[1]);let h=-1;if(s?(c=r[0],h=1):(c=r[1],h=0),r[h]!==a)throw new Error("dimension mismatch");if(o<=0||c<=0||a<=0)throw new Error("invalid shape specified");if(i&&!Mt.isValidBroadcast(i,[o,c]))throw new Error("gemm: invalid bias shape for broadcast");return[o,c,a]}},Or=-34028234663852886e22,br=34028234663852886e22}),dr=xe(()=>{Jt(),or(),fr=64,Ur=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},vr=(e,t=1)=>{let r=Ur(e,t);return typeof r=="string"?r:r[0]},Lr=(e,t=1)=>{let r=Ur(e,t);return typeof r=="string"?r:r[1]},Lt=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:ye.computeStrides(r)})}),t},gr=e=>e%4==0?4:e%2==0?2:1,Tn=(e="f32",t,r="0")=>t&&t!==1?`vec${t}<${e}>(${r})`:`${e}(${r})`,Fr=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,Hr=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,jt=(e,t,r,s)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?s==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:s==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,$n=(e,t,r,s,i)=>{let o=typeof r=="number",a=o?r:r.length,c=[...new Array(a).keys()],h=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,f=Ur(t,i),E=typeof f=="string"?f:f[1],C=typeof f=="string"?f:f[0],d={indices:h,value:E,storage:C,tensor:t},D=Qe=>typeof Qe=="string"?Qe:`${Qe}u`,W={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},J=o?"uniforms.":"",X=`${J}${e}_shape`,ne=`${J}${e}_strides`,he="";for(let Qe=0;Qe<a-1;Qe++)he+=`
    let dim${Qe} = current / ${jt(ne,Qe,a)};
    let rest${Qe} = current % ${jt(ne,Qe,a)};
    indices[${Qe}] = dim${Qe};
    current = rest${Qe};
    `;he+=`indices[${a-1}] = current;`;let ke=a<2?"":`
  fn o2i_${e}(offset: u32) -> ${d.indices} {
    var indices: ${d.indices};
    var current = offset;
    ${he}
    return indices;
  }`,Fe=[];if(a>=2)for(let Qe=a-1;Qe>=0;Qe--)Fe.push(`${jt(ne,Qe,a)} * (indices[${Qe}])`);let ze=a<2?"":`
  fn i2o_${e}(indices: ${d.indices}) -> u32 {
    return ${Fe.join("+")};
  }`,Ve=(...Qe)=>a===0?"0u":`${d.indices}(${Qe.map(D).join(",")})`,pt=(Qe,Ut)=>a<2?`${Qe}`:`${jt(Qe,Ut,a)}`,vt={},qt=(Qe,Ut)=>(()=>{if(d.storage===d.value)return`${e}[${Qe}]=${Ut};`;if(d.storage==="vec2<u32>"&&d.value==="i32")return`${e}[${Qe}]=vec2<u32>(u32(${Ut}), select(0u, 0xFFFFFFFFu, ${Ut} < 0));`;if(d.storage==="vec2<u32>"&&d.value==="u32")return`${e}[${Qe}]=vec2<u32>(u32(${Ut}), 0u);`;if(d.storage==="u32"&&d.value==="vec4<bool>")return`${e}[${Qe}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${Ut}));`;throw new Error(`not supported combination of storage type ${d.storage} and value type ${d.value} yet`)})(),Wt=Qe=>(()=>{if(d.storage===d.value)return`${e}[${Qe}]`;if(d.storage==="vec2<u32>"&&d.value==="i32")return`i32(${e}[${Qe}].x)`;if(d.storage==="vec2<u32>"&&d.value==="u32")return`u32(${e}[${Qe}].x)`;if(d.storage==="u32"&&d.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${Qe}] & 0xFFu), bool(${e}[${Qe}] & 0xFF00u), bool(${e}[${Qe}] & 0xFF0000u), bool(${e}[${Qe}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${d.storage} and value type ${d.value} yet`)})(),mr=a<2?"":`
  fn get_${e}ByIndices(indices: ${d.indices}) -> ${E} {
    return ${Wt(`i2o_${e}(indices)`)};
  }`,Ht=a<2?"":(()=>{let Qe=c.map(zt=>`d${zt}: u32`).join(", "),Ut=c.map(zt=>`d${zt}`).join(", ");return`
  fn get_${e}(${Qe}) -> ${E} {
    return get_${e}ByIndices(${Ve(Ut)});
  }`})(),ir=a<2?"":`
  fn set_${e}ByIndices(indices: ${d.indices}, value: ${E}) {
    ${qt(`i2o_${e}(indices)`,"value")}
  }`,rr=a<2?"":(()=>{let Qe=c.map(zt=>`d${zt}: u32`).join(", "),Ut=c.map(zt=>`d${zt}`).join(", ");return`
  fn set_${e}(${Qe}, value: ${E}) {
    set_${e}ByIndices(${Ve(Ut)}, value);
  }`})();return{impl:()=>{let Qe=[],Ut=!1;return W.offsetToIndices&&(Qe.push(ke),Ut=!0),W.indicesToOffset&&(Qe.push(ze),Ut=!0),W.broadcastedIndicesToOffset&&(Object.values(vt).forEach(zt=>Qe.push(zt)),Ut=!0),W.set&&(Qe.push(rr),Ut=!0),W.setByIndices&&(Qe.push(ir),Ut=!0),W.get&&(Qe.push(Ht),Ut=!0),W.getByIndices&&(Qe.push(mr),Ut=!0),!o&&Ut&&Qe.unshift(`const ${X} = ${d.indices}(${r.join(",")});`,`const ${ne} = ${d.indices}(${ye.computeStrides(r).join(",")});`),Qe.join(`
`)},type:d,offsetToIndices:Qe=>(W.offsetToIndices=!0,a<2?Qe:`o2i_${e}(${Qe})`),indicesToOffset:Qe=>(W.indicesToOffset=!0,a<2?Qe:`i2o_${e}(${Qe})`),broadcastedIndicesToOffset:(Qe,Ut)=>{W.broadcastedIndicesToOffset=!0;let zt=`${Ut.name}broadcastedIndicesTo${e}Offset`;if(zt in vt)return`${zt}(${Qe})`;let Nt=[];for(let wr=a-1;wr>=0;wr--){let Zr=Ut.indicesGet("outputIndices",wr+Ut.rank-a);Nt.push(`${pt(ne,wr)} * (${Zr} % ${pt(X,wr)})`)}return vt[zt]=`fn ${zt}(outputIndices: ${Ut.type.indices}) -> u32 {
             return ${Nt.length>0?Nt.join("+"):"0u"};
           }`,`${zt}(${Qe})`},indices:Ve,indicesGet:pt,indicesSet:(Qe,Ut,zt)=>a<2?`${Qe}=${zt};`:`${jt(Qe,Ut,a)}=${zt};`,set:(...Qe)=>{if(Qe.length!==a+1)throw new Error(`indices length must be ${a}`);let Ut=Qe[a];if(typeof Ut!="string")throw new Error("value must be string");let zt=Qe.slice(0,a).map(D).join(",");return a===0?qt("0u",Ut):a===1?qt(zt[0],Ut):(W.set=!0,W.setByIndices=!0,W.indicesToOffset=!0,`set_${e}(${zt}, ${Ut})`)},setByOffset:qt,setByIndices:(Qe,Ut)=>a<2?qt(Qe,Ut):(W.setByIndices=!0,W.indicesToOffset=!0,`set_${e}ByIndices(${Qe}, ${Ut});`),get:(...Qe)=>{if(Qe.length!==a)throw new Error(`indices length must be ${a}`);let Ut=Qe.map(D).join(",");return a===0?Wt("0u"):a===1?Wt(Ut[0]):(W.get=!0,W.getByIndices=!0,W.indicesToOffset=!0,`get_${e}(${Ut})`)},getByOffset:Wt,getByIndices:Qe=>a<2?Wt(Qe):(W.getByIndices=!0,W.indicesToOffset=!0,`get_${e}ByIndices(${Qe})`),usage:s,name:e,strides:ne,shape:X,rank:a}},rt=(e,t,r,s=1)=>$n(e,t,r,"input",s),Et=(e,t,r,s=1)=>$n(e,t,r,"output",s),Ln=(e,t,r)=>$n(e,t,r,"atomicOutput",1),rn=(e,t,r,s=1)=>$n(e,t,r,"internal",s),Yr=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=fr){let t=typeof e=="number"?e:e[0],r=typeof e=="number"?1:e[1],s=typeof e=="number"?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||r>this.limits.maxComputeWorkgroupSizeY||s>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${r}, ${s}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*r*s>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${r}, ${s}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let i=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1;return`@compute @workgroup_size(${t}, ${r}, ${s})
  fn main(${i?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`}) {
    ${i?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${t*r*s}u + local_idx;`}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let r=e.usage==="input"?"read":"read_write",s=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${t}) var<storage, ${r}> ${e.name}: array<${s}>;`}declareVariables(...e){return e.map(t=>this.declareVariable(t,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(e,t,r=1){return this.uniforms.push({name:e,type:t,length:r}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:t,type:r,length:s}of this.uniforms)if(s&&s>4)r==="f16"?e.push(`@align(16) ${t}:array<mat2x4<${r}>, ${Math.ceil(s/8)}>`):e.push(`${t}:array<vec4<${r}>, ${Math.ceil(s/4)}>`);else{let i=s==null||s===1?r:`vec${s}<${r}>`;e.push(`${t}:${i}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=t=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(t)];return this.uniforms.map(t=>[e(t.type),t.length??1])}},Kr=(e,t)=>new Yr(e,t)}),cs=xe(()=>{Jt(),or(),Qr(),dr(),ln=(e,t)=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.");if(t.length!==0&&t.length!==e[0].dims.length)throw new Error(`perm size ${t.length} does not match input rank ${e[0].dims.length}`)},En=(e,t)=>t.length!==0?t:[...new Array(e).keys()].reverse(),zs=(e,t)=>ye.sortBasedOnPerm(e,En(e.length,t)),us=(e,t,r,s)=>{let i=`fn perm(i: ${s.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`;for(let o=0;o<t;++o)i+=`a[${e[o]}]=i[${o}];`;return i+"return a;}"},rl=(e,t)=>{let r=[],s=[];for(let i=0;i<e.length;++i)e[i]!==1&&r.push(e[i]),e[t[i]]!==1&&s.push(t[i]);return{newShape:r,newPerm:s}},nl=(e,t)=>{let r=0;for(let s=0;s<e.length;++s)if(t[e[s]]!==1){if(e[s]<r)return!1;r=e[s]}return!0},Pn=(e,t)=>{let r,s=e.dataType,i=e.dims.length,o=En(i,t),a=zs(e.dims,o),c=e.dims,h=a;if(i<2||nl(o,e.dims))return r=D=>{let W=rt("input",s,c,4),J=Et("output",s,h,4);return`
  ${D.registerUniform("output_size","u32").declareVariables(W,J)}
  ${D.mainStart()}
    ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let D=ye.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(D/64/4)},programUniforms:[{type:12,data:Math.ceil(D/4)}]}},getShaderSource:r};let{newShape:f,newPerm:E}=rl(e.dims,o),C=ye.areEqual(E,[2,3,1]),d=ye.areEqual(E,[3,1,2]);if(f.length===2||C||d){c=C?[f[0],f[1]*f[2]]:d?[f[0]*f[1],f[2]]:f,h=[c[1],c[0]];let D=16;return r=W=>{let J=rt("a",s,c.length),X=Et("output",s,h.length);return`
  ${W.registerUniform("output_size","u32").declareVariables(J,X)}
  var<workgroup> tile : array<array<${X.type.value}, ${D+1}>, ${D}>;
  ${W.mainStart([D,D,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${D} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${D}u + local_id.x;
    let input_row = workgroup_id_x * ${D}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${J.getByIndices(`${J.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${D}u + local_id.x;
    let output_row = workgroup_id_y * ${D}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${X.setByIndices(`${X.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let W=ye.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(h[1]/D),y:Math.ceil(h[0]/D)},programUniforms:[{type:12,data:W},...Lt(c,h)]}},getShaderSource:r}}return r=D=>{let W=rt("a",s,c.length),J=Et("output",s,h.length);return`
  ${D.registerUniform("output_size","u32").declareVariables(W,J)}

  ${us(o,i,W,J)}

  ${D.mainStart()}
    ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${J.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${J.setByOffset("global_idx",W.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let D=ye.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(D/64)},programUniforms:[{type:12,data:D},...Lt(c,h)]}},getShaderSource:r}},sl=(e,t)=>{ln(e.inputs,t.perm),e.compute(Pn(e.inputs[0],t.perm))},il=e=>Le({perm:e.perm})}),bp=xe(()=>{Jt(),or(),dr(),Vo(),cs(),Os={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},al={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},ol={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},ll={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},ul=(e,t)=>{let r=[];for(let s=t-e;s<t;++s)r.push(s);return r},dl=(e,t)=>{let r=[],s=e.length;for(let i=0;i<s;i++)t.indexOf(i)===-1&&r.push(e[i]);return[r,t.map(i=>e[i])]},Ls=(e,t)=>{let r=e.length+t.length,s=[],i=0;for(let o=0;o<r;o++)t.indexOf(o)===-1?s.push(e[i++]):s.push(1);return s},cl=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},pl=(e,t)=>{let r=[];if(!cl(e,t)){for(let s=0;s<t;++s)e.indexOf(s)===-1&&r.push(s);e.forEach(s=>r.push(s))}return r},hl=(e,t,r,s,i,o,a)=>{let c=r[0].dims,h=ye.size(o),f=ye.size(a),E=rt("_A",r[0].dataType,c),C=Et("output",i,o),d=64;h===1&&(d=256);let D=`
          var<workgroup> aBestValues : array<f32, ${d}>;
       `;return{name:e,shaderCache:{hint:`${t};${d}`,inputDependencies:["type"]},getShaderSource:W=>`
        ${W.registerUniform("reduceSize","u32").declareVariables(E,C)}
        ${D}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${W.mainStart(d)}

          let outputIndex = global_idx / ${d};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${ol[s]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${d}) {
           let candidate = f32(${E.getByOffset("offset + k")});
           bestValue = ${Os[s]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${d}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${al[s]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${C.setByOffset("outputIndex",s==="mean"?`${C.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${C.type.storage}(${ll[s]})`)};
         }
        }`,getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:h},programUniforms:[{type:12,data:f}]})}},jn=(e,t,r,s)=>{let i=e.inputs.length===1?r:Ki(e.inputs,r),o=i.axes;o.length===0&&!i.noopWithEmptyAxes&&(o=e.inputs[0].dims.map((D,W)=>W));let a=ye.normalizeAxes(o,e.inputs[0].dims.length),c=a,h=e.inputs[0],f=pl(c,e.inputs[0].dims.length);f.length>0&&(h=e.compute(Pn(e.inputs[0],f),{inputs:[0],outputs:[-1]})[0],c=ul(c.length,h.dims.length));let[E,C]=dl(h.dims,c),d=E;i.keepDims&&(d=Ls(E,a)),e.compute(hl(t,i.cacheKey,[h],s,e.inputs[0].dataType,d,C),{inputs:[h]})},ml=(e,t)=>{jn(e,"ReduceMeanShared",t,"mean")},qi=(e,t)=>{jn(e,"ReduceL1Shared",t,"l1")},fl=(e,t)=>{jn(e,"ReduceL2Shared",t,"l2")},_l=(e,t)=>{jn(e,"ReduceLogSumExpShared",t,"logSumExp")},Wi=(e,t)=>{jn(e,"ReduceMaxShared",t,"max")},gl=(e,t)=>{jn(e,"ReduceMinShared",t,"min")},wl=(e,t)=>{jn(e,"ReduceProdShared",t,"prod")},Hi=(e,t)=>{jn(e,"ReduceSumShared",t,"sum")},sp=(e,t)=>{jn(e,"ReduceSumSquareShared",t,"sumSquare")},yl=(e,t)=>{jn(e,"ReduceLogSumShared",t,"logSum")}}),Vo=xe(()=>{Jt(),or(),Qr(),dr(),bp(),Nn=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},bl=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Ns=(e,t,r,s,i,o,a=!1,c=!1)=>{let h=[],f=r[0].dims,E=f.length,C=ye.normalizeAxes(i,E),d=!c&&C.length===0;f.forEach((J,X)=>{d||C.indexOf(X)>=0?a&&h.push(1):h.push(J)});let D=h.length,W=ye.size(h);return{name:e,shaderCache:t,getShaderSource:J=>{let X=[],ne=rt("_A",r[0].dataType,E),he=Et("output",o,D),ke=s(ne,he,C),Fe=ke[2];for(let ze=0,Ve=0;ze<E;ze++)d||C.indexOf(ze)>=0?(a&&Ve++,Fe=`for(var j${ze}: u32 = 0; j${ze} < ${f[ze]}; j${ze}++) {
                  ${ke[2].includes("last_index")?`let last_index = j${ze};`:""}
                  ${ne.indicesSet("input_indices",ze,`j${ze}`)}
                  ${Fe}
                }`):(X.push(`${ne.indicesSet("input_indices",ze,he.indicesGet("output_indices",Ve))};`),Ve++);return`

        ${J.registerUniform("output_size","u32").declareVariables(ne,he)}

        ${J.mainStart()}
          ${J.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${ne.type.indices};
          let output_indices = ${he.offsetToIndices("global_idx")};

          ${X.join(`
`)}
          ${ke[0]}       // init ops for reduce max/min
          ${ke[1]}
          ${Fe}
          ${ke[3]}
          ${ke.length===4?he.setByOffset("global_idx","value"):ke.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:h,dataType:o}],dispatchGroup:{x:Math.ceil(W/64)},programUniforms:[{type:12,data:W},...Lt(f,h)]})}},Ki=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(s=>r.push(Number(s))),Le({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Un=(e,t,r,s)=>{let i=e.inputs,o=i.length===1?r:Ki(i,r);e.compute(Ns(t,{hint:o.cacheKey,inputDependencies:["rank"]},[i[0]],o.noopWithEmptyAxes&&o.axes.length===0?bl:s,o.axes,i[0].dataType,o.keepDims,o.noopWithEmptyAxes),{inputs:[0]})},vl=(e,t)=>{Nn(e.inputs),Un(e,"ReduceLogSum",t,(r,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,"value = log(value);"])},xl=(e,t)=>{Nn(e.inputs),Un(e,"ReduceL1",t,(r,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${r.getByIndices("input_indices")});`,""])},kl=(e,t)=>{Nn(e.inputs),Un(e,"ReduceL2",t,(r,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Ml=(e,t)=>{Nn(e.inputs),Un(e,"ReduceLogSumExp",t,(r,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${r.getByIndices("input_indices")});`,"value = log(value);"])},Tl=(e,t)=>{Nn(e.inputs),Un(e,"ReduceMax",t,(r,s,i)=>{let o=[];for(let a=0;a<r.rank;a++)(i.indexOf(a)>=0||i.length===0)&&o.push(r.indicesSet("input_indices",a,0));return[`${o.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = max(value, ${r.getByIndices("input_indices")});`,""]})},Qi=(e,t)=>{Nn(e.inputs),Un(e,"ReduceMean",t,(r,s,i)=>{let o=1;for(let a=0;a<r.rank;a++)(i.indexOf(a)>=0||i.length===0)&&(o*=e.inputs[0].dims[a]);return["var sum = f32(0);","",`sum += f32(${r.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${o});`]})},$l=(e,t)=>{Nn(e.inputs),Un(e,"ReduceMin",t,(r,s,i)=>{let o=[];for(let a=0;a<r.rank;a++)(i.indexOf(a)>=0||i.length===0)&&o.push(`input_indices[${a}] = 0;`);return[`${o.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};`,`value = min(value, ${r.getByIndices("input_indices")});`,""]})},Xi=(e,t)=>{Nn(e.inputs),Un(e,"ReduceProd",t,(r,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${r.getByIndices("input_indices")};`,""])},bs=(e,t)=>{Nn(e.inputs),Un(e,"ReduceSum",t,(r,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${r.getByIndices("input_indices")};`,""])},El=(e,t)=>{Nn(e.inputs),Un(e,"ReduceSumSquare",t,(r,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${r.getByIndices("input_indices")}; value += t * t;`,""])},Qn=(e,t,r)=>{if(t.length===0)return r;let s=1,i=1;for(let o=0;o<t.length;o++)t.indexOf(o)===-1?s*=e[o]:i*=e[o];return i<32&&s>1024},Sl=(e,t)=>{Qn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Qi(e,t):ml(e,t)},ip=(e,t)=>{Qn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xl(e,t):qi(e,t)},Cl=(e,t)=>{Qn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?kl(e,t):fl(e,t)},Yi=(e,t)=>{Qn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ml(e,t):_l(e,t)},Pl=(e,t)=>{Qn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Tl(e,t):Wi(e,t)},Al=(e,t)=>{Qn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$l(e,t):gl(e,t)},Il=(e,t)=>{Qn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Xi(e,t):wl(e,t)},Fl=(e,t)=>{Qn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?bs(e,t):Hi(e,t)},zl=(e,t)=>{Qn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?El(e,t):sp(e,t)},oi=(e,t)=>{Qn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vl(e,t):yl(e,t)}}),vp=xe(()=>{Jt(),Qr(),Vo(),Ji=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Ol=(e,t)=>{Ji(e.inputs),e.compute(Ns("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],(r,s,i)=>{let o=[];for(let a=0;a<r.rank;a++)(i.indexOf(a)>=0||i.length===0)&&o.push(`input_indices[${a}] = 0;`);return[`${o.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${r.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${r.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]},[t.axis],7,t.keepDims),{inputs:[0]})},Ll=(e,t)=>{Ji(e.inputs),e.compute(Ns("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],(r,s,i)=>{let o=[];for(let a=0;a<r.rank;a++)(i.indexOf(a)>=0||i.length===0)&&o.push(`input_indices[${a}] = 0;`);return[`${o.join(`
`)}`,`var value = ${r.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${r.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${r.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]},[t.axis],7,t.keepDims),{inputs:[0]})},li=e=>Le(e)}),Go=xe(()=>{Jt(),or(),Uo(),dr(),Nl=(e,t)=>{let r=e[0],s=e[1],i=e[2],o=e[3],a=e[4],c=e[5];if(a&&c)throw new Error("Attention cannot have both past and attention_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let h=r.dims[0],f=r.dims[1],E=r.dims[2];if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(s.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(s.dims[0]!==E)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==s.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let C=i.dims[0]/3,d=C,D=d;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let ne of t.qkvHiddenSizes)if(ne%t.numHeads!=0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");C=t.qkvHiddenSizes[0],d=t.qkvHiddenSizes[1],D=t.qkvHiddenSizes[2]}let W=f;if(C!==d)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==C+d+D)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let J=0;if(a){if(d!==D)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(a.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(a.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(a.dims[1]!==h)throw new Error('Input "past" second dimension must be batch_size');if(a.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(a.dims[4]!==d/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(J=a.dims[3])}let X=W+J;if(o)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");if(c){if(c.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(c.dims[0]!==h||c.dims[1]!==t.numHeads||c.dims[2]!==f||c.dims[3]!==X)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:h,sequenceLength:f,pastSequenceLength:J,kvSequenceLength:W,totalSequenceLength:X,maxSequenceLength:-1,inputHiddenSize:E,hiddenSize:C,vHiddenSize:D,headSize:Math.floor(C/t.numHeads),vHeadSize:Math.floor(D/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},ui=(e,t,r)=>t&&e?`
      let total_sequence_length_input = u32(${t.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e==null?void 0:e.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${r?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,Zi=(e,t,r,s,i,o,a,c)=>{let h=gr(a?1:o),f=64,E=o/h;E<f&&(f=32);let C=Math.ceil(o/h/f),d=[{type:12,data:t},{type:12,data:r},{type:12,data:s},{type:12,data:i},{type:12,data:E},{type:12,data:C}],D=vr(e.dataType,h),W=Lr(1,h),J=["type"];return a&&J.push("type"),c&&J.push("type"),{name:"AttentionProbsSoftmax",shaderCache:{hint:`${f};${D};${h}`,inputDependencies:J},getShaderSource:X=>{let ne=Et("x",e.dataType,e.dims,h),he=[ne],ke=a?rt("seq_lens",a.dataType,a.dims):void 0;ke&&he.push(ke);let Fe=c?rt("total_sequence_length_input",c.dataType,c.dims):void 0;Fe&&he.push(Fe);let ze=Lr(e.dataType);return`
  var<workgroup> thread_max: array<f32, ${f}>;
  var<workgroup> thread_sum: array<f32, ${f}>;
  ${X.registerUniforms([{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}]).declareVariables(...he)}
  ${X.mainStart([f,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${ui(ke,Fe,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${f}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${a?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${W}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${W}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(h){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${h}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${f}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${W}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${W}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(h){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${h}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${f}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${ne.type.value}(${ze}(1.0) / ${ze}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${W}(x[offset + i]);
        x[offset + i] = ${ne.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${a?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${ne.type.value}(${ze}(0));
        }`:""};
  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(o/f),y:i,z:t*r},programUniforms:d})}},Bl=(e,t,r,s,i,o,a,c,h)=>{let f=a+o.kvSequenceLength,E=[o.batchSize,o.numHeads,o.sequenceLength,f],C=e>1&&s,d=o.kvNumHeads?o.kvNumHeads:o.numHeads,D=C?[o.batchSize,d,f,o.headSize]:void 0,W=o.nReps?o.nReps:1,J=o.scale===0?1/Math.sqrt(o.headSize):o.scale,X=gr(o.headSize),ne=o.headSize/X,he=12,ke={x:Math.ceil(f/he),y:Math.ceil(o.sequenceLength/he),z:o.batchSize*o.numHeads},Fe=[{type:12,data:o.sequenceLength},{type:12,data:ne},{type:12,data:f},{type:12,data:o.numHeads},{type:12,data:o.headSize},{type:1,data:J},{type:12,data:a},{type:12,data:o.kvSequenceLength},{type:12,data:W}],ze=C&&s&&ye.size(s.dims)>0,Ve=["type","type"];ze&&Ve.push("type"),i&&Ve.push("type"),c&&Ve.push("type"),h&&Ve.push("type");let pt=[{dims:E,dataType:t.dataType,gpuDataType:0}];return C&&pt.push({dims:D,dataType:t.dataType,gpuDataType:0}),{name:"AttentionProbs",shaderCache:{hint:`${X};${i!==void 0};${s!==void 0};${e}`,inputDependencies:Ve},getRunData:()=>({outputs:pt,dispatchGroup:ke,programUniforms:Fe}),getShaderSource:vt=>{let qt=rt("q",t.dataType,t.dims,X),Wt=[qt,rt("key",r.dataType,r.dims,X)];if(ze){let Ut=rt("past_key",s.dataType,s.dims,X);Wt.push(Ut)}i&&Wt.push(rt("attention_bias",i.dataType,i.dims));let mr=c?rt("seq_lens",c.dataType,c.dims):void 0;mr&&Wt.push(mr);let Ht=h?rt("total_sequence_length_input",h.dataType,h.dims):void 0;Ht&&Wt.push(Ht);let ir=Et("output",t.dataType,E),rr=[ir];C&&rr.push(Et("present_key",t.dataType,D,X));let Qe=Lr(1,X);return`
  const TILE_SIZE = 12u;

  var<workgroup> tileQ: array<${qt.type.storage}, 144>;
  var<workgroup> tileK: array<${qt.type.storage}, 144>;
  ${vt.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...Wt,...rr)}
  ${vt.mainStart([he,he,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${W===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${W===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${ui(mr,Ht,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${ze&&C?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${C?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${Qe}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${ze&&C?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${C?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${Qe}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(X){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${X}`)}})()};
        output[outputIdx] = ${ir.type.value} (sum * uniforms.alpha) + ${i?"attention_bias[outputIdx]":"0.0"};
    }
  }`}}},Rl=(e,t,r,s,i,o,a=void 0,c=void 0)=>{let h=o+i.kvSequenceLength,f=i.nReps?i.nReps:1,E=i.vHiddenSize*f,C=e>1&&s,d=i.kvNumHeads?i.kvNumHeads:i.numHeads,D=C?[i.batchSize,d,h,i.headSize]:void 0,W=[i.batchSize,i.sequenceLength,E],J=12,X={x:Math.ceil(i.vHeadSize/J),y:Math.ceil(i.sequenceLength/J),z:i.batchSize*i.numHeads},ne=[{type:12,data:i.sequenceLength},{type:12,data:h},{type:12,data:i.vHeadSize},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:12,data:E},{type:12,data:o},{type:12,data:i.kvSequenceLength},{type:12,data:f}],he=C&&s&&ye.size(s.dims)>0,ke=["type","type"];he&&ke.push("type"),a&&ke.push("type"),c&&ke.push("type");let Fe=[{dims:W,dataType:t.dataType,gpuDataType:0}];return C&&Fe.push({dims:D,dataType:t.dataType,gpuDataType:0}),{name:"AttentionScore",shaderCache:{hint:`${s!==void 0};${e}`,inputDependencies:ke},getRunData:()=>({outputs:Fe,dispatchGroup:X,programUniforms:ne}),getShaderSource:ze=>{let Ve=rt("probs",t.dataType,t.dims),pt=[Ve,rt("v",r.dataType,r.dims)];he&&pt.push(rt("past_value",s.dataType,s.dims));let vt=a?rt("seq_lens",a.dataType,a.dims):void 0;a&&pt.push(vt);let qt=c?rt("total_sequence_length_input",c.dataType,c.dims):void 0;c&&pt.push(qt);let Wt=[Et("output",t.dataType,W)];return C&&Wt.push(Et("present_value",t.dataType,D)),`
  const TILE_SIZE = 12u;
  var<workgroup> tileQ: array<${Ve.type.value}, 144>;
  var<workgroup> tileV: array<${Ve.type.value}, 144>;
  ${ze.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...pt,...Wt)}
  ${ze.mainStart([J,J,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${f===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${f===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${ui(vt,qt,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${he&&C?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${C?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${Ve.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${he&&C?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${C?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`}}},Bs=(e,t,r,s,i,o,a,c,h,f,E=void 0,C=void 0)=>{let d=Math.min(e.outputCount,1+(a?1:0)+(c?1:0)),D=d>1?f.pastSequenceLength:0,W=D+f.kvSequenceLength,J=h&&ye.size(h.dims)>0?h:void 0,X=[t,r];d>1&&a&&ye.size(a.dims)>0&&X.push(a),J&&X.push(J),E&&X.push(E),C&&X.push(C);let ne=e.compute(Bl(d,t,r,a,J,f,D,E,C),{inputs:X,outputs:d>1?[-1,1]:[-1]})[0];e.compute(Zi(ne,f.batchSize,f.numHeads,D,f.sequenceLength,W,E,C),{inputs:E&&C?[ne,E,C]:[ne],outputs:[]});let he=[ne,s];d>1&&c&&ye.size(c.dims)>0&&he.push(c),E&&he.push(E),C&&he.push(C),e.compute(Rl(d,ne,s,c,f,D,E,C),{inputs:he,outputs:d>1?[0,2]:[0]})},Dl=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],s=t.sequenceLength,i=t.inputHiddenSize,o=t.headSize,a=12,c={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},h=[e.inputs[0],e.inputs[1],e.inputs[2]],f=[{type:12,data:s},{type:12,data:i},{type:12,data:o},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}];return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:f}),getShaderSource:E=>{let C=Et("output_q",h[0].dataType,r),d=Et("output_k",h[0].dataType,r),D=Et("output_v",h[0].dataType,r),W=rt("input",h[0].dataType,h[0].dims),J=rt("weight",h[1].dataType,h[1].dims),X=rt("bias",h[2].dataType,h[2].dims),ne=W.type.storage;return`
  const TILE_SIZE = 12u;
  var<workgroup> tileInput: array<${ne}, 144>;
  var<workgroup> tileWeightQ: array<${ne}, 144>;
  var<workgroup> tileWeightK: array<${ne}, 144>;
  var<workgroup> tileWeightV: array<${ne}, 144>;
  ${E.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(W,J,X,C,d,D)}
  ${E.mainStart([a,a,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${ne}(0);
    var valueK = ${ne}(0);
    var valueV = ${ne}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`}},{inputs:h,outputs:[-1,-1,-1]})},jl=(e,t)=>{let r=Nl(e.inputs,t),[s,i,o]=Dl(e,r);return Bs(e,s,i,o,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r)}}),xp=xe(()=>{Ze(),Jt(),or(),Qr(),dr(),ea=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(s,i,o)=>{let a=i.length;if(a!==s.length)throw new Error(`${o}: num dimensions != ${a}`);i.forEach((c,h)=>{if(c!==s[h])throw new Error(`${o}: dim[${h}] do not match`)})};if(e[0].dims.length>1){let s=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,s,"Invalid input scale"),r(e[2].dims,s,"Invalid input B"),r(e[3].dims,s,"Invalid input mean"),r(e[4].dims,s,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Ul=(e,t)=>{let{epsilon:r,spatial:s,format:i}=t,o=e[0].dims,a=s?gr(o[o.length-1]):1,c=i==="NHWC"&&o.length>1?a:1,h=ye.size(o)/a,f=s,E=f?o.length:o,C=rt("x",e[0].dataType,e[0].dims,a),d=rt("scale",e[1].dataType,e[1].dims,c),D=rt("bias",e[2].dataType,e[2].dims,c),W=rt("inputMean",e[3].dataType,e[3].dims,c),J=rt("inputVar",e[4].dataType,e[4].dims,c),X=Et("y",e[0].dataType,E,a);return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${s}_${a}`,inputDependencies:f?["rank","type","type","type","type"]:void 0},getShaderSource:ne=>`
  const epsilon = ${r};
  ${ne.registerUniform("outputSize","u32").declareVariables(C,d,D,W,J,X)}
  ${ne.mainStart()}
  ${ne.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${X.offsetToIndices(`global_idx * ${a}`)};
    ${(()=>{let he="";if(s)he=`let cOffset = ${o.length===1?"0u":i==="NHWC"?`outputIndices[${o.length-1}] / ${a}`:"outputIndices[1]"};`;else if(i==="NCHW")he=`
            ${X.indicesSet("outputIndices","0","0")}
            let cOffset = ${X.indicesToOffset("outputIndices")};`;else{he=`var cIndices = ${d.type.indices}(0);
                       cIndices[0] = outputIndices[${o.length-1}];`;for(let ke=1;ke<d.rank;ke++)he+=`cIndices[${ke}] = outputIndices[${ke}];`;he+=`let cOffset = ${d.indicesToOffset("cIndices")};`}return he})()}
    let scale = ${d.getByOffset("cOffset")};
    let bias = ${D.getByOffset("cOffset")};
    let inputMean = ${W.getByOffset("cOffset")};
    let inputVar = ${J.getByOffset("cOffset")};
    let x = ${C.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${X.setByOffset("global_idx","value")}
  }`,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:f?[{type:12,data:h},...Lt(o)]:[{type:12,data:h}]})}},Vl=e=>Le(e),ta=(e,t)=>{let{inputs:r,outputCount:s}=e,i=Vl({...t,outputCount:s});if(b.webgpu.validateInputContent&&ea(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Ul(r,i))}}),kp=xe(()=>{or(),dr(),Gl=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},ql=e=>{let t=e[0].dims,r=e[0].dims[2],s=ye.size(t)/4,i=e[0].dataType,o=rt("input",i,t,4),a=rt("bias",i,[r],4),c=rt("residual",i,t,4),h=Et("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:f=>`
  const channels = ${r}u / 4;
  ${f.declareVariables(o,a,c,h)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let value = ${o.getByOffset("global_idx")}
      + ${a.getByOffset("global_idx % channels")} + ${c.getByOffset("global_idx")};
    ${h.setByOffset("global_idx","value")}
  }`}},ra=e=>{Gl(e.inputs),e.compute(ql(e.inputs))}}),qo=xe(()=>{Jt(),or(),Qr(),dr(),Wl=(e,t,r,s,i,o,a)=>{let c=Math.ceil(t/4),h="";h=typeof i=="string"?`${i}(a)`:i("a");let f=rt("inputData",r,[c],4),E=Et("outputData",s,[c],4),C=[{name:"vec_size",type:"u32"}];return a&&C.push(...a),`
      ${e.registerUniforms(C).declareVariables(f,E)}

  ${o??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${f.getByOffset("global_idx")};
    ${E.setByOffset("global_idx",h)}
  }`},xr=(e,t,r,s,i,o=e.dataType,a,c)=>{let h=[{type:12,data:Math.ceil(ye.size(e.dims)/4)}];return a&&h.push(...a),{name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:f=>Wl(f,ye.size(e.dims),e.dataType,o,r,s,c),getRunData:f=>({outputs:[{dims:e.dims,dataType:o}],dispatchGroup:{x:Math.ceil(ye.size(f[0].dims)/64/4)},programUniforms:h})}},na=e=>{e.compute(xr(e.inputs[0],"Abs","abs"))},Hl=e=>{e.compute(xr(e.inputs[0],"Acos","acos"))},Kl=e=>{e.compute(xr(e.inputs[0],"Acosh","acosh"))},sa=e=>{e.compute(xr(e.inputs[0],"Asin","asin"))},Ql=e=>{e.compute(xr(e.inputs[0],"Asinh","asinh"))},Xl=e=>{e.compute(xr(e.inputs[0],"Atan","atan"))},ia=e=>{e.compute(xr(e.inputs[0],"Atanh","atanh"))},Yl=e=>Le(e),Jl=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(xr(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},aa=e=>{let t,r,s=e.length>=2&&e[1].data!==0,i=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:t=s?e[1].getFloat32Array()[0]:-34028234663852886e22,r=i?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=s?e[1].getUint16Array()[0]:64511,r=i?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Le({min:t,max:r})},Zl=(e,t)=>{let r=t||aa(e.inputs),s=Lr(e.inputs[0].dataType);e.compute(xr(e.inputs[0],"Clip",i=>`clamp(${i}, vec4<${s}>(uniforms.min), vec4<${s}>(uniforms.max))`,void 0,r.cacheKey,void 0,[{type:e.inputs[0].dataType,data:r.min},{type:e.inputs[0].dataType,data:r.max}],[{name:"min",type:s},{name:"max",type:s}]),{inputs:[0]})},eu=e=>{e.compute(xr(e.inputs[0],"Ceil","ceil"))},oa=e=>{e.compute(xr(e.inputs[0],"Cos","cos"))},tu=e=>{e.compute(xr(e.inputs[0],"Cosh","cosh"))},Qs=e=>Le(e),la=(e,t)=>{let r=Lr(e.inputs[0].dataType);e.compute(xr(e.inputs[0],"Elu",s=>`elu_vf32(${s})`,`
  const elu_alpha_ = ${r}(${t.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},di=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,ru=e=>{let t=Lr(e.inputs[0].dataType);e.compute(xr(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,di(t)))},ua=e=>{e.compute(xr(e.inputs[0],"Exp","exp"))},nu=e=>{e.compute(xr(e.inputs[0],"Floor","floor"))},su=e=>{let t=Lr(e.inputs[0].dataType);e.compute(xr(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,di(t)))},da=(e,t)=>{let r=Lr(e.inputs[0].dataType);e.compute(xr(e.inputs[0],"LeakyRelu",s=>`select(leaky_relu_alpha_ * ${s}, ${s}, ${s} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},iu=e=>{e.compute(xr(e.inputs[0],"Not",t=>`!${t}`))},au=e=>{e.compute(xr(e.inputs[0],"Neg",t=>`-${t}`))},ca=e=>{e.compute(xr(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},ou=e=>{let t=Lr(e.inputs[0].dataType);e.compute(xr(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},lu=e=>{e.compute(xr(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},pa=e=>Le(e),uu=(e,t)=>{let r=Lr(e.inputs[0].dataType);e.compute(xr(e.inputs[0],"HardSigmoid",s=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${s} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},du=e=>{e.compute(xr(e.inputs[0],"Sin","sin"))},ha=e=>{e.compute(xr(e.inputs[0],"Sinh","sinh"))},cu=e=>{e.compute(xr(e.inputs[0],"Sqrt","sqrt"))},pu=e=>{e.compute(xr(e.inputs[0],"Tan","tan"))},ci=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,hu=e=>{e.compute(xr(e.inputs[0],"Tanh",ci))},ma=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${ci("v")};
}
`,pi=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,mu=e=>{let t=Lr(e.inputs[0].dataType);e.compute(xr(e.inputs[0],"FastGelu",pi,ma(t),void 0,e.inputs[0].dataType))},fu=(e,t)=>{let r=Lr(e.inputs[0].dataType);return e.compute(xr(e.inputs[0],"ThresholdedRelu",s=>`select(vec4<${r}>(0.0), ${s}, ${s} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},fa=e=>{e.compute(xr(e.inputs[0],"Log","log"))},_u=(e,t)=>`
const alpha = vec4<${e}>(${t});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,gu=e=>`quick_gelu_impl(${e})`,_a=(e,t)=>{let r=Lr(e.inputs[0].dataType);e.compute(xr(e.inputs[0],"QuickGelu",gu,_u(r,t.alpha),t.cacheKey,e.inputs[0].dataType))}}),Mp=xe(()=>{or(),dr(),qo(),wu=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},yu=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=rt("input",e[0].dataType,e[0].dims,4),s=rt("bias",e[0].dataType,[e[0].dims[2]],4),i=Et("output",e[0].dataType,t,4),o=ye.size(t)/4,a=vr(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:c=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${c.declareVariables(r,s,i)}

  ${di(a)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes(o)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${i.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},bu=e=>{wu(e.inputs),e.compute(yu(e.inputs))}}),Tp=xe(()=>{Jt(),or(),dr(),vu=(e,t,r,s,i,o,a,c,h,f,E,C)=>{let d,D;typeof c=="string"?d=D=(he,ke)=>`${c}((${he}),(${ke}))`:typeof c=="function"?d=D=c:(d=c.scalar,D=c.vector);let W,J=Et("outputData",E,s.length,4),X=rt("aData",h,t.length,4),ne=rt("bData",f,r.length,4);if(i)if(o){let he=ye.size(t)===1,ke=ye.size(r)===1,Fe=t.length>0&&t[t.length-1]%4==0,ze=r.length>0&&r[r.length-1]%4==0;W=he||ke?J.setByOffset("global_idx",D(he?`${X.type.value}(${X.getByOffset("0")}.x)`:X.getByOffset("global_idx"),ke?`${ne.type.value}(${ne.getByOffset("0")}.x)`:ne.getByOffset("global_idx"))):`
            let outputIndices = ${J.offsetToIndices("global_idx * 4u")};
            let offsetA = ${X.broadcastedIndicesToOffset("outputIndices",J)};
            let offsetB = ${ne.broadcastedIndicesToOffset("outputIndices",J)};
            ${J.setByOffset("global_idx",D(a||Fe?X.getByOffset("offsetA / 4u"):`${X.type.value}(${X.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||ze?ne.getByOffset("offsetB / 4u"):`${ne.type.value}(${ne.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else W=J.setByOffset("global_idx",D(X.getByOffset("global_idx"),ne.getByOffset("global_idx")));else{if(!o)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let he=(ke,Fe,ze="")=>{let Ve=`aData[indexA${Fe}][componentA${Fe}]`,pt=`bData[indexB${Fe}][componentB${Fe}]`;return`
            let outputIndices${Fe} = ${J.offsetToIndices(`global_idx * 4u + ${Fe}u`)};
            let offsetA${Fe} = ${X.broadcastedIndicesToOffset(`outputIndices${Fe}`,J)};
            let offsetB${Fe} = ${ne.broadcastedIndicesToOffset(`outputIndices${Fe}`,J)};
            let indexA${Fe} = offsetA${Fe} / 4u;
            let indexB${Fe} = offsetB${Fe} / 4u;
            let componentA${Fe} = offsetA${Fe} % 4u;
            let componentB${Fe} = offsetB${Fe} % 4u;
            ${ke}[${Fe}] = ${ze}(${d(Ve,pt)});
          `};W=E===9?`
            var data = vec4<u32>(0);
            ${he("data",0,"u32")}
            ${he("data",1,"u32")}
            ${he("data",2,"u32")}
            ${he("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${he("outputData[global_idx]",0)}
            ${he("outputData[global_idx]",1)}
            ${he("outputData[global_idx]",2)}
            ${he("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(X,ne,J)}

        ${C??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${W}
      }`},ga=(e,t,r,s,i,o,a=r.dataType)=>{let c=r.dims.map(J=>Number(J)??1),h=s.dims.map(J=>Number(J)??1),f=!ye.areEqual(c,h),E=c,C=ye.size(c),d=!1,D=!1,W=[f];if(f){let J=Mt.calcShape(c,h,!1);if(!J)throw new Error("Can't perform binary op on the given tensors");E=J.slice(),C=ye.size(E);let X=ye.size(c)===1,ne=ye.size(h)===1,he=c.length>0&&c[c.length-1]%4==0,ke=h.length>0&&h[h.length-1]%4==0;W.push(X),W.push(ne),W.push(he),W.push(ke);let Fe=1;for(let ze=1;ze<E.length;ze++){let Ve=c[c.length-ze];if(Ve!==h[h.length-ze])break;Fe*=Ve}Fe%4==0?(D=!0,d=!0):(X||ne||he||ke)&&(d=!0)}else d=!0;return W.push(d),{name:e,shaderCache:{hint:t+W.map(J=>J.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:J=>vu(J,c,h,E,d,f,D,i,r.dataType,s.dataType,a,o),getRunData:()=>({outputs:[{dims:E,dataType:a}],dispatchGroup:{x:Math.ceil(C/64/4)},programUniforms:[{type:12,data:Math.ceil(ye.size(E)/4)},...Lt(c,h,E)]})}},Vn=(e,t,r,s,i,o)=>{e.compute(ga(t,i??"",e.inputs[0],e.inputs[1],r,s,o))},xu=e=>{Vn(e,"Add",(t,r)=>`${t}+${r}`)},wa=e=>{Vn(e,"Div",(t,r)=>`${t}/${r}`)},ku=e=>{Vn(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Mu=e=>{Vn(e,"Mul",(t,r)=>`${t}*${r}`)},ya=e=>{let t=rt("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Vn(e,"Pow",{scalar:(r,s)=>`pow_custom(${r},${s})`,vector:(r,s)=>`pow_vector_custom(${r},${s})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},Tu=e=>{Vn(e,"Sub",(t,r)=>`${t}-${r}`)},$u=e=>{Vn(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},ba=e=>{Vn(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},Eu=e=>{Vn(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Su=e=>{Vn(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}}),$p=xe(()=>{Jt(),or(),Qr(),dr(),va=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=e[0],s=r.dataType,i=r.dims.length;e.forEach((o,a)=>{if(a!==0){if(o.dataType!==s)throw new Error("input tensors should be one type");if(o.dims.length!==i)throw new Error("input tensors should have the same shape");o.dims.forEach((c,h)=>{if(h!==t&&c!==r.dims[h])throw new Error("non concat dimensions must match")})}})},Cu=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,Pu=(e,t)=>{let r=e.length,s=[];for(let i=0;i<r;++i){let o=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?s.push(o):i===0?s.push(`if (inputIndex == ${i}u) { ${o} }`):i===r-1?s.push(`else { ${o} }`):s.push(`else if (inputIndex == ${i}) { ${o} }`)}return s.join(`
`)},xa=(e,t,r,s)=>{let i=ye.size(r),o=new Array(e.length),a=new Array(e.length),c=0,h=[],f=[],E=[{type:12,data:i}];for(let W=0;W<e.length;++W)c+=e[W].dims[t],o[W]=c,f.push(e[W].dims.length),a[W]=rt(`input${W}`,s,f[W]),h.push("rank"),E.push({type:12,data:o[W]});for(let W=0;W<e.length;++W)E.push(...Lt(e[W].dims));E.push(...Lt(r));let C=Et("output",s,r.length),d=C.indicesGet("indices",t),D=Array.from(Array(o.length).keys()).map(W=>`uniforms.sizeInConcatAxis${W}`).join(",");return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:r,dataType:s}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:E}),getShaderSource:W=>`

  ${(()=>{W.registerUniform("outputSize","u32");for(let J=0;J<e.length;J++)W.registerUniform(`sizeInConcatAxis${J}`,"u32");return W.declareVariables(...a,C)})()}

  ${Cu(o.length,D)}

  ${W.mainStart()}
    ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${C.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${d});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${o.length}u>(${D});
      ${d} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Pu(a,C)}
  }`}},Au=(e,t)=>{let r=e.inputs,s=r[0].dims,i=ye.normalizeAxis(t.axis,s.length);va(r,i);let o=s.slice();o[i]=r.reduce((c,h)=>c+(h.dims.length>i?h.dims[i]:0),0);let a=r.filter(c=>ye.size(c.dims)>0);e.compute(xa(a,i,o,r[0].dataType),{inputs:a})},Iu=e=>Le({axis:e.axis})}),Ts=xe(()=>{Jt(),or(),ds=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},vs=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},xs=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},ka=e=>{let t=(e==null?void 0:e.activation)||"";if(t==="HardSigmoid"){let[r,s]=(e==null?void 0:e.activation_params)||[.2,.5];return{activation:t,alpha:r,beta:s}}if(t==="Clip"){let[r,s]=(e==null?void 0:e.activation_params)||[Or,br];return{activation:t,clipMax:s,clipMin:r}}if(t==="LeakyRelu"){let[r]=(e==null?void 0:e.activation_params)||[.01];return{activation:t,alpha:r}}return{activation:t}}}),Wo=xe(()=>{_n=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Ma=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Ep=xe(()=>{Fu=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),Ho=xe(()=>{Jt(),or(),dr(),Ts(),Xs=(e,t,r,s,i)=>{let o=s-r;return`
      ${Array.from({length:r}).map((a,c)=>`
      if (${jt(t.shape,c,t.rank)} != 1) {
        ${t.indicesSet(e,c,jt(i,c+o,s))}
      } else {
        ${t.indicesSet(e,c,0)}
      }`).join("")}
`},Ta=(e,t,r,s,i=!1,o)=>{let a=e[0].dims,c=e[1].dims,h=a[a.length-2],f=c[c.length-1],E=a[a.length-1],C=gr(f),d=gr(E),D=gr(h),W=ye.size(r)/C/D,J=e.length>2,X=s?s.slice(0,-2):r.slice(0,-2),ne=[ye.size(X),h,f],he=[{type:12,data:W},{type:12,data:h},{type:12,data:f},{type:12,data:E}];return vs(t,he),he.push(...Lt(X,a,c)),J&&he.push(...Lt(e[2].dims)),he.push(...Lt(ne)),{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${C};${d};${D};${i}`,inputDependencies:J?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:o?o(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(W/64)},programUniforms:he}),getShaderSource:ke=>{let Fe=rn("batch_dims",e[0].dataType,X.length),ze=rt("a",e[0].dataType,a.length,d),Ve=rt("b",e[1].dataType,c.length,C),pt=Et("output",e[0].dataType,ne.length,C),vt=vr(pt.type.tensor),qt=ds(t,pt.type.value,vt),Wt=[ze,Ve],mr="";if(J){let ir=i?C:1;Wt.push(rt("bias",e[2].dataType,e[2].dims.length,ir)),mr=i?`value += bias[col / ${ir}];`:`value += ${pt.type.value}(bias[row + i]);`}let Ht=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];return xs(t,Ht),`
  ${ke.registerUniforms(Ht).registerInternalVariables(Fe).declareVariables(...Wt,pt)}
  ${ke.mainStart()}
    ${ke.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${C})) * ${C};
    var index1 = global_idx / (uniforms.N / ${C});
    let stride1 = uniforms.M / ${D};
    let row = (index1 % stride1) * ${D};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${Fe.offsetToIndices("batch")};`}

    var a_indices: ${ze.type.indices};
    ${Xs("a_indices",ze,ze.rank-2,Fe.rank,"batch_indices")}
    ${ze.indicesSet("a_indices",ze.rank-2,0)}
    ${ze.indicesSet("a_indices",ze.rank-1,0)}
    let a_offset = ${ze.indicesToOffset("a_indices")};

    var b_indices: ${Ve.type.indices};
    ${Xs("b_indices",Ve,Ve.rank-2,Fe.rank,"batch_indices")}
    ${Ve.indicesSet("b_indices",Ve.rank-2,0)}
    ${Ve.indicesSet("b_indices",Ve.rank-1,0)}
    let b_offset = ${Ve.indicesToOffset("b_indices")};
    var values: array<${pt.type.value}, ${D}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${d}) {
      ${(()=>{let ir=`var a_data: ${ze.type.value};`;for(let rr=0;rr<d;rr++)ir+=`
              let b_data${rr} = b[(b_offset + (k + ${rr}) * uniforms.N + col) / ${C}];`;for(let rr=0;rr<D;rr++){ir+=`a_data = a[(a_offset + (row + ${rr}) * uniforms.K + k) / ${d}];`;for(let Qe=0;Qe<d;Qe++)ir+=`
            values[${rr}] = fma(${Ve.type.value}(a_data${d===1?"":`[${Qe}]`}), b_data${Qe}, values[${rr}]);
`}return ir})()}
    }
    for (var i = 0u; i < ${D}u; i++) {
      var value = values[i];
      ${mr}
      ${qt}
      let cur_indices = ${pt.type.indices}(batch, row + i, col);
      let offset = ${pt.indicesToOffset("cur_indices")};
      ${pt.setByOffset(`offset / ${C}`,"value")};
    }
  }
  `}}}}),Ko=xe(()=>{Jt(),or(),dr(),Ts(),Ho(),Wo(),zu=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,$a=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Ea=(e,t,r="f32",s,i=!1,o=32,a=!1,c=32)=>{let h=t[1]*e[1],f=t[0]*e[0],E=i?h:o,C=i?o:h,d=E/t[0],D=o/t[1];if((!i||d!==4||e[1]!==4)&&(i||d!==3&&d!==4)||E%t[0]!=0||o%t[1]!=0||e[0]!==4)throw new Error(`If transposeA ${i} is true, innerElementSize ${d} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${d} must be 3 or 4.
  tileAWidth ${E} must be divisible by workgroupSize[0]${t[0]}. tileInner ${o} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${d}<${r}>, ${E/d}>, ${C}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${f/e[0]}>, ${o}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${d};
const tileInner = ${o};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${a?"0":"i32(globalId.z)"};
  ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${h};

  let num_tiles = ${a?`${Math.ceil(c/o)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${D};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${zu(i,s)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${D}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${s?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${d===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${$a(i,d)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Sa=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,Ou=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Ca=(e,t,r="f32",s,i=!1,o=32,a=!1,c=32,h=!1)=>{let f=e[1]*t[1],E=e[0]*t[0],C=i?f:o,d=i?o:f;if(d%t[1]!=0||C%t[0]!=0||o%t[1]!=0)throw new Error(`tileAHight ${d} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${C} must be divisible by workgroupSize[0]${t[0]}, tileInner ${o} must be divisible by workgroupSize[1]${t[1]}`);let D=d/t[1],W=C/t[0],J=o/t[1],X=h?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${f};
    let globalColStart = i32(workgroupId.x) * ${E};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${C}; inputCol = inputCol + ${t[0]}) {
          ${Sa(i,s)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${o}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${E}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${s?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${f};

let tileRowA = i32(localId.y) * ${D};
let tileColA = i32(localId.x) * ${W};
let tileRowB = i32(localId.y) * ${J};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${D}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${W}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Sa(i,s)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${J}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${s?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Ou(i)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${C}>, ${d}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${E}>, ${o}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${o};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${a?"0":"i32(globalId.z)"};
    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${a?`${Math.ceil(c/o)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;
    ${X}
  }
`},Pa=(e,t,r,s,i=!1)=>{let[o,a,c,h]=s,f=vr(s[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${o.type.indices}) -> ${_n(e,f)} {
      var value = ${_n(e,f)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${a.type.indices};
        ${Xs("aIndices",a,a.rank-2,o.rank,"batchIndices")}
        ${a.indicesSet("aIndices",a.rank-2,"u32(row)")}
        ${a.indicesSet("aIndices",a.rank-1,"u32(colIn)")}
        value = ${a.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${o.type.indices}) -> ${_n(e,f)} {
      var value = ${_n(e,f)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${c.type.indices};
        ${Xs("bIndices",c,c.rank-2,o.rank,"batchIndices")}
        ${c.indicesSet("bIndices",c.rank-2,"u32(row)")}
        ${c.indicesSet("bIndices",c.rank-1,"u32(colIn)")}
        value = ${c.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${_n(e,f)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${i?"bias[colIn]":`${_n(e,f)}(bias[row])`};`:""}
        ${r}
        ${h.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},hi=(e,t,r,s,i=!1,o)=>{let a=e[0].dims,c=e[1].dims,h=a.slice(0,-2),f=c.slice(0,-2),E=s?s.slice(0,-2):r.slice(0,-2),C=ye.size(E),d=a[a.length-2],D=a[a.length-1],W=c[c.length-1],J=D%4==0&&W%4==0,X=d<=8?[4,1,1]:[4,4,1],ne=[8,8,1],he=[Math.ceil(W/ne[0]/X[0]),Math.ceil(d/ne[1]/X[1]),Math.ceil(C/ne[2]/X[2])],ke=J?4:1,Fe=[...h,d,D/ke],ze=Fe.length,Ve=[...f,D,W/ke],pt=Ve.length,vt=[C,d,W/ke],qt=[{type:6,data:d},{type:6,data:W},{type:6,data:D}];vs(t,qt),qt.push(...Lt(E,Fe,Ve));let Wt=["rank","rank"],mr=e.length>2;return mr&&(qt.push(...Lt(e[2].dims)),Wt.push("rank")),qt.push(...Lt(vt)),{name:"MatMul",shaderCache:{hint:`${X};${t.activation};${J};${i}`,inputDependencies:Wt},getRunData:()=>({outputs:[{dims:o?o(r):r,dataType:e[0].dataType}],dispatchGroup:{x:he[0],y:he[1],z:he[2]},programUniforms:qt}),getShaderSource:Ht=>{let ir=E.length,rr=rn("batchDims",e[0].dataType,ir,1),Qe=vr(e[0].dataType),Ut=rt("a",e[0].dataType,ze,ke),zt=rt("b",e[1].dataType,pt,ke),Nt=Et("result",e[0].dataType,vt.length,ke),wr=[Ut,zt];if(mr){let Bi=i?ke:1;wr.push(rt("bias",e[2].dataType,e[2].dims.length,Bi))}let Zr=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];xs(t,Zr);let kn=vr(Nt.type.tensor),Es=ds(t,Nt.type.value,kn),Gs=Pa(ke,mr,Es,[rr,Ut,zt,Nt],i);return`
  ${Ht.registerUniforms(Zr).registerInternalVariables(rr).declareVariables(...wr,Nt)}
  ${Gs}
  ${J?Ea(X,ne,Qe,rr):Ca(X,ne,Qe,rr)}
                   `}}}}),Sp=xe(()=>{Jt(),ts(),dr(),Ts(),Wo(),Ep(),Ko(),Lu=(e,t,r,s,i=!1,o,a=4,c=4,h=4,f="f32")=>{let E=vt=>{switch(vt){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${vt} is not supported.`)}},C=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,d=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,D=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",W=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",J=e?"row":"col",X=e?"col":"row",ne=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${J} / outWidth;
    let outCol = ${J} % outWidth;

    let WRow = ${X} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${X} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${X} % inChannels;
    var resData = ${_n(a,f)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${D} && xCol >= 0 && xCol < ${W}) {
      ${C}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${(vt=>{switch(vt){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${f}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${vt} is not supported.`)}})(a)}
    }
    return resData;`,he=e?t&&s?`
    let col = colIn * ${a};
    ${ne}`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${ne}
    }
    return ${_n(a,f)}(0.0);`:s&&r?`
    let col = colIn * ${a};
    ${ne}`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${ne}
    }
    return ${_n(a,f)}(0.0);`,ke=e?s&&r?E(c):`
    let col = colIn * ${c};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${E(c)}
    }
    return ${_n(c,f)}(0.0);`:`
    let col = colIn * ${c};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${E(c)}
    }
    return ${_n(c,f)}(0.0);`,Fe=_n(h,f),ze=_n(e?a:c,f),Ve=_n(e?c:a,f),pt=ds(o,Fe,f);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${ze} {
      ${e?he:ke}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Ve} {
      ${e?ke:he}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${Fe}) {
      let col = colIn * ${h};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${d}
      ${Ma(i)}
      ${pt}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Nu=(e,t,r,s,i,o,a,c,h)=>{let f=t.format==="NHWC",E=f?e[0].dims[3]:e[0].dims[1],C=r[0],d=f?r[2]:r[3],D=f?r[1]:r[2],W=f?r[3]:r[1],J=f&&(E%4==0||E%3==0)&&W%4==0,X=f?W:d*D,ne=f?d*D:W,he=[8,8,1],ke=s<=8?[4,1,1]:[4,4,1],Fe=[Math.ceil(X/he[0]/ke[0]),Math.ceil(ne/he[1]/ke[1]),Math.ceil(C/he[2]/ke[2])];wt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${Fe}`);let ze=J?f&&E%4!=0?3:4:1,Ve=he[1]*ke[1],pt=he[0]*ke[0],vt=Math.max(he[0]*ze,he[1]),qt=s%Ve==0,Wt=i%pt==0,mr=o%vt==0,Ht=J?[ze,4,4]:[1,1,1],ir=[{type:6,data:s},{type:6,data:i},{type:6,data:o},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];vs(t,ir),ir.push(...Lt(e[0].dims,e[1].dims));let rr=["rank","rank"];return a&&(ir.push(...Lt(e[2].dims)),rr.push("rank")),ir.push(...Lt(r)),{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${ze};${J};${qt};${Wt};${mr};${Ve};${pt};${vt}`,inputDependencies:rr},getRunData:()=>({outputs:[{dims:h?h(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Fe[0],y:Fe[1],z:Fe[2]},programUniforms:ir}),getShaderSource:Qe=>{let Ut=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];xs(t,Ut);let zt=J?4:1,Nt=vr(e[0].dataType),wr=`
      fn setOutputAtIndex(flatIndex : i32, value : ${J?`vec4<${Nt}>`:Nt}) {
        result[flatIndex] = ${J?`vec4<${Nt}>`:Nt}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${J?`vec4<${Nt}>`:Nt}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${J?"/ 4":""}, value);
      }`,Zr=[rt("x",e[0].dataType,e[0].dims.length,ze===3?1:ze),rt("w",e[1].dataType,e[1].dims.length,zt)],kn=Et("result",e[0].dataType,r.length,zt);if(a){let Es=rt("bias",e[2].dataType,e[2].dims.length,zt);Zr.push(Es),wr+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${J?`vec4<${Nt}>`:Nt} {
          return bias[coords.${f?"w":"y"}${J?"/ 4":""}];
        }`}return`
        ${Fu("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Qe.registerUniforms(Ut).declareVariables(...Zr,kn)}
        ${wr}
        ${Lu(f,qt,Wt,mr,a,t,Ht[0],Ht[1],Ht[2],Nt)}
        ${J?Ea(ke,he,Nt,void 0,!f,vt):Ca(ke,he,Nt,void 0,!f,vt,!1,void 0,c)}`}}}}),Jp=xe(()=>{Jt(),ts(),or(),dr(),Ts(),Wo(),Bu=e=>{let t=1;for(let r=0;r<e.length;r++)t*=e[r];return t},mi=e=>typeof e=="number"?[e,e,e]:e,Ys=(e,t)=>t<=1?e:e+(e-1)*(t-1),Ru=(e,t,r,s=1)=>{let i=Ys(t,s);return Math.floor((e[0]*(r-1)-r+i)/2)},fi=(e,t,r,s,i)=>{i==null&&(i=Ru(e,t[0],s[0]));let o=[0,0,0,r];for(let a=0;a<3;a++)e[a]+2*i>=t[a]&&(o[a]=Math.trunc((e[a]-t[a]+2*i)/s[a]+1));return o},Du=(e,t,r,s,i,o,a,c,h,f)=>{let E,C,d,D;if(e==="VALID"&&(e=0),typeof e=="number"){E={top:e,bottom:e,left:e,right:e,front:e,back:e};let W=fi([t,r,s,1],[c,h,f],1,[i,o,a],e);C=W[0],d=W[1],D=W[2]}else if(Array.isArray(e)){if(!e.every((J,X,ne)=>J===ne[0]))throw Error(`Unsupported padding parameter: ${e}`);E={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let W=fi([t,r,s,1],[c,h,f],1,[i,o,a],e[0]);C=W[0],d=W[1],D=W[2]}else{if(e!=="SAME_UPPER")throw Error(`Unknown padding parameter: ${e}`);{C=Math.ceil(t/i),d=Math.ceil(r/o),D=Math.ceil(s/a);let W=(C-1)*i+c-t,J=(d-1)*o+h-r,X=(D-1)*a+f-s,ne=Math.floor(W/2),he=W-ne,ke=Math.floor(J/2),Fe=J-ke,ze=Math.floor(X/2);E={top:ke,bottom:Fe,left:ze,right:X-ze,front:ne,back:he}}}return{padInfo:E,outDepth:C,outHeight:d,outWidth:D}},ju=(e,t,r,s,i,o=!1,a="channelsLast")=>{let c,h,f,E,C;if(a==="channelsLast")[c,h,f,E,C]=e;else{if(a!=="channelsFirst")throw new Error(`Unknown dataFormat ${a}`);[c,C,h,f,E]=e}let[d,,D,W,J]=t,[X,ne,he]=mi(r),[ke,Fe,ze]=mi(s),Ve=Ys(D,ke),pt=Ys(W,Fe),vt=Ys(J,ze),{padInfo:qt,outDepth:Wt,outHeight:mr,outWidth:Ht}=Du(i,h,f,E,X,ne,he,Ve,pt,vt),ir=o?d*C:d,rr=[0,0,0,0,0];return a==="channelsFirst"?rr=[c,ir,Wt,mr,Ht]:a==="channelsLast"&&(rr=[c,Wt,mr,Ht,ir]),{batchSize:c,dataFormat:a,inDepth:h,inHeight:f,inWidth:E,inChannels:C,outDepth:Wt,outHeight:mr,outWidth:Ht,outChannels:ir,padInfo:qt,strideDepth:X,strideHeight:ne,strideWidth:he,filterDepth:D,filterHeight:W,filterWidth:J,effectiveFilterDepth:Ve,effectiveFilterHeight:pt,effectiveFilterWidth:vt,dilationDepth:ke,dilationHeight:Fe,dilationWidth:ze,inShape:e,outShape:rr,filterShape:t}},Aa=(e,t,r,s,i,o)=>{let a=o==="channelsLast";a?e[0].dims[3]:e[0].dims[1];let c={x:r.map((d,D)=>D)},h=[Math.ceil(Bu(c.x.map(d=>r[d]))/64),1,1];wt("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${h}`);let f=[{type:12,data:ye.size(r)},{type:12,data:s},{type:12,data:i},{type:12,data:t.strides},{type:12,data:t.dilations}];vs(t,f),f.push(...Lt(e[0].dims,e[1].dims));let E=["rank","rank"],C=e.length===3;return C&&(f.push(...Lt(e[2].dims)),E.push("rank")),f.push(...Lt(r)),{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${a};1;${C}`,inputDependencies:E},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:h[0],y:h[1],z:h[2]},programUniforms:f}),getShaderSource:d=>{let D=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:s.length},{name:"pads",type:"u32",length:i.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];xs(t,D);let W=vr(e[0].dataType),J=rt("x",e[0].dataType,e[0].dims.length,1),X=rt("W",e[1].dataType,e[1].dims.length,1),ne=[J,X],he=Et("result",e[0].dataType,r.length,1),ke="";if(C){let Ve=rt("bias",e[2].dataType,e[2].dims.length,1);ne.push(Ve),ke+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${W} {
          return bias[${jt("coords",a?4:1,5)}];
        }`}let Fe=_n(1,W),ze=ds(t,Fe,W);return`
            ${ke}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${J.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${X.getByIndices("aIndices")};
            }
          ${d.registerUniforms(D).declareVariables(...ne,he)}
          ${d.mainStart()}
          ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${he.offsetToIndices("global_idx")};
              let batch = ${jt("coords",0,J.rank)};
              let d2 = ${jt("coords",a?J.rank-1:1,J.rank)};
              let xFRCCorner = vec3<u32>(${jt("coords",a?1:2,J.rank)},
              ${jt("coords",a?2:3,J.rank)},
              ${jt("coords",a?3:4,J.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${jt("uniforms.x_shape",a?1:2,J.rank)};
              let xShapeZ = ${jt("uniforms.x_shape",a?2:3,J.rank)};
              let xShapeW = ${jt("uniforms.x_shape",a?3:4,J.rank)};
              let xShapeU = ${jt("uniforms.x_shape",a?4:1,J.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${a?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${a?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${a?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${a?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${C?"value = value + getBiasByOutputCoords(coords)":""};
              ${ze}
              result[global_idx] = f32(value);
          }`}}}}),lr=xe(()=>{Jt(),or(),dr(),Ts(),Uu=(e,t,r,s)=>{let i=e.length>2,o=i?"value += b[output_channel];":"",a=e[0].dims,c=e[1].dims,h=t.format==="NHWC",f=h?r[3]:r[1],E=f/t.group,C=h&&E>=4?gr(f):1,d=ye.size(r)/C,D=[{type:12,data:d},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:E}];vs(t,D),D.push(...Lt(a,[c[0],c[1],c[2],c[3]/C]));let W=i?["rank","rank","rank"]:["rank","rank"];return D.push(...Lt([r[0],r[1],r[2],r[3]/C])),{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${C}`,inputDependencies:W},getRunData:()=>({outputs:[{dims:s?s(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:D}),getShaderSource:J=>{let X=Et("output",e[0].dataType,r.length,C),ne=vr(X.type.tensor),he=ds(t,X.type.value,ne),ke=rt("x",e[0].dataType,a.length),Fe=rt("w",e[1].dataType,c.length,C),ze=[ke,Fe];i&&ze.push(rt("b",e[2].dataType,e[2].dims,C));let Ve=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];xs(t,Ve);let pt=h?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${ke.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${Fe.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${ke.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${Fe.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${J.registerUniforms(Ve).declareVariables(...ze,X)}

  ${J.mainStart()}
    ${J.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${X.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${h?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${h?1:2}], outputIndices[${h?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${C} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${h?2:1}];

    var value: ${X.type.value} = ${X.type.value}(0);
    ${pt}
    ${o}
    ${he}
    ${X.setByOffset("global_idx","value")}
  }`}}},Vu=(e,t,r,s)=>{let i=e.length>2,o=gr(r[3]),a=gr(r[2]),c=ye.size(r)/o/a,h=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/o],f=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/o],E=[r[0],r[1],r[2],r[3]/o],C=[{type:12,data:c},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];vs(t,C),C.push(...Lt(h,f,E));let d=(a-1)*t.strides[1]+f[1];return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${o};${a};${d};${f[0]};${f[1]}`,inputDependencies:i?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(r):r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:C}),getShaderSource:D=>{let W=Et("output",e[0].dataType,E.length,o),J=vr(W.type.tensor),X=ds(t,W.type.value,J),ne=rt("x",e[0].dataType,h.length,o),he=rt("w",e[1].dataType,f.length,o),ke=[ne,he];i&&ke.push(rt("b",e[2].dataType,e[2].dims,o));let Fe=i?"value += b[output_channel];":"",ze=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return xs(t,ze),`
  ${D.registerUniforms(ze).declareVariables(...ke,W)}
  ${D.mainStart()}
    ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${a}u;
    let col = (index1 % width1) * ${a}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${ne.type.value}, ${d}>;
    var values: array<${W.type.value}, ${a}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${f[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${d}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${ne.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${ne.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${f[1]}; w_width++) {
          let w_val = ${he.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${a}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${a}u; i++) {
      var value = values[i];
      ${Fe}
      ${X}
      ${W.set("batch","row","col + i","output_channel","value")};
    }
  }`}}}}),Cp=xe(()=>{or(),Sp(),Jp(),Ko(),lr(),Ts(),Ho(),cs(),Ia=(e,t,r,s,i,o)=>{let a=e[0],c=e.slice(o?1:2,o?3:4),h=c.length,f=t[0],E=t.slice(2).map((d,D)=>d+(d-1)*(r[D]-1)),C=c.map((d,D)=>d+s[D]+s[D+h]).map((d,D)=>Math.floor((d-E[D]+i[D])/i[D]));return C.splice(0,0,a),C.splice(o?3:1,0,f),C},_i=[2,3,1,0],Gu=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let r=e[0].dims.length-2;if(t.dilations.length!==r)throw new Error(`dilations should be ${r}D`);if(t.strides.length!==r)throw new Error(`strides should be ${r}D`);if(t.pads.length!==2*r)throw new Error(`pads should be ${2*r}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Js=(e,t)=>{let r=e.kernelShape.slice();r.length<t[1].dims.length-2&&r.push(...Array(t[1].dims.length-2-r.length).fill(0));for(let o=2;o<t[1].dims.length;++o)r[o-2]===0&&(r[o-2]=t[1].dims[o]);let s=e.pads.slice();Ot.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,s,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:s}),i},Fa=e=>{let t=ka(e),r=e.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],format:r,dilations:e.dilations,group:e.group,kernelShape:e.kernel_shape,pads:e.pads,strides:e.strides,wIsConst:e.w_is_const(),...t,cacheKey:`${e.format};${t.activation};`}},za=(e,t,r,s)=>{let i=r.format==="NHWC",o=Ia(t[0].dims,t[1].dims,r.dilations,r.pads,r.strides,i);if(r.group!==1){let ze=[t[0]];if(i){let Ve=e.kernelCustomData.wT??e.compute(Pn(t[1],_i),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Ve),ze.push(Ve)}else ze.push(t[1]);return t.length===3&&ze.push(t[2]),void(!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1?e.compute(Vu(ze,r,o,s),{inputs:ze}):e.compute(Uu(ze,r,o,s),{inputs:ze}))}let a=t.length===3,c=t[0].dims[i?1:2],h=t[0].dims[i?2:3],f=t[0].dims[i?3:1],E=t[1].dims[2],C=t[1].dims[3],d=o[i?1:2],D=o[i?2:3],W=o[i?3:1],J=i&&E===c&&C===h&&r.pads[0]===0&&r.pads[1]===0;if(J||E===1&&C===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let ze,Ve,pt,vt=o[0],qt=[];if(i){let Ht=e.kernelCustomData.wT??e.compute(Pn(t[1],_i),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Ht),J){let ir=c*h*f;ze=t[0].reshape([1,vt,ir]),Ve=Ht.reshape([1,ir,W]),pt=[1,vt,W]}else ze=t[0].reshape([vt,c*h,f]),Ve=Ht.reshape([1,f,W]),pt=[vt,d*D,W];qt.push(ze),qt.push(Ve)}else ze=t[0].reshape([vt,f,c*h]),Ve=t[1].reshape([1,W,f]),pt=[vt,W,d*D],qt.push(Ve),qt.push(ze);a&&qt.push(t[2]);let Wt=pt[2],mr=qt[0].dims[qt[0].dims.length-1];return void(Wt<8&&mr<8?e.compute(Ta(qt,r,o,pt,i,s),{inputs:qt}):e.compute(hi(qt,r,o,pt,i,s),{inputs:qt}))}let X=e.kernelCustomData.wT??e.compute(Pn(t[1],_i),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=X);let ne=[t[0],X];a&&ne.push(t[2]);let he=i?d*D:W,ke=i?W:d*D,Fe=E*C*f;e.compute(Nu(ne,r,o,he,ke,Fe,a,!0,s),{inputs:ne})},gi=(e,t)=>{let r=t.format==="NHWC",s=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],o=[1].concat(t.strides),a=[1].concat(t.dilations),c=[1].concat(t.kernelShape),h=Js({...t,pads:i,strides:o,dilations:a,kernelShape:c},s);za(e,s,h,f=>r?[f[0],f[2],f[3]]:[f[0],f[1],f[3]])},qu=(e,t,r)=>{let s=r.format==="NHWC"?"channelsLast":"channelsFirst",i=Js(r,t),o=r.autoPad==="NOTSET"?r.pads:r.autoPad,a=ju(t[0].dims,t[1].dims,r.strides,r.dilations,o,!1,s);e.compute(Aa(t,i,a.outShape,[a.filterDepth,a.filterHeight,a.filterWidth],[a.padInfo.front,a.padInfo.top,a.padInfo.left],s))},Oa=(e,t)=>{if(Gu(e.inputs,t),e.inputs[0].dims.length===3)gi(e,t);else if(e.inputs[0].dims.length===5)qu(e,e.inputs,t);else{let r=Js(t,e.inputs);za(e,e.inputs,r)}}}),un=xe(()=>{Jt(),ts(),or(),dr(),La=(e,t,r)=>{let s=e.length>2,i=t.outputShape,o=t.format==="NHWC",a=t.group,c=e[1].dims,h=c[2]/a,f=c[3],E=o?gr(h):1,C=o?gr(f):1,d=o?f===1?E:C:1,D=ye.size(i)/C,W=[Math.ceil(D/64),1,1];wt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${W}`);let J=["rank","rank"],X=[t.strides[0],t.strides[1]],ne=[t.kernelShape[o?1:2],t.kernelShape[o?2:3]],he=[t.dilations[0],t.dilations[1]],ke=[ne[0]+(t.dilations[0]<=1?0:(t.kernelShape[o?1:2]-1)*(t.dilations[0]-1)),ne[1]+(t.dilations[1]<=1?0:(t.kernelShape[o?2:3]-1)*(t.dilations[1]-1))],Fe=[ke[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),ke[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],ze=[{type:12,data:D},{type:12,data:X},{type:12,data:ne},{type:12,data:he},{type:12,data:ke},{type:6,data:Fe},{type:12,data:h},{type:12,data:f},...Lt(e[0].dims,e[1].dims)];return s&&(ze.push(...Lt(e[2].dims)),J.push("rank")),ze.push(...Lt(i)),{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};${E}${d}${C}${f===1}`,inputDependencies:J},getRunData:()=>({dispatchGroup:{x:W[0],y:W[1],z:W[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:ze}),getShaderSource:Ve=>{let pt=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:X.length},{name:"filter_dims",type:"u32",length:ne.length},{name:"dilations",type:"u32",length:ne.length},{name:"effective_filter_dims",type:"u32",length:ke.length},{name:"pads",type:"i32",length:Fe.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],vt=vr(e[0].dataType),qt=o?1:2,Wt=o?2:3,mr=o?3:1,Ht=rt("W",e[1].dataType,e[1].dims.length,d),ir=rt("Dy",e[0].dataType,e[0].dims.length,E),rr=[ir,Ht];s&&rr.push(rt("bias",e[2].dataType,[i[mr]].length,C));let Qe=Et("result",e[0].dataType,i.length,C),Ut=`
            let outputIndices = ${Qe.offsetToIndices(`global_idx * ${C}`)};
            let batch = ${Qe.indicesGet("outputIndices",0)};
            let d1 = ${Qe.indicesGet("outputIndices",mr)};
            let r = ${Qe.indicesGet("outputIndices",qt)};
            let c = ${Qe.indicesGet("outputIndices",Wt)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${Qe.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${vt}(dyRCorner) + ${vt}(wR)) / ${vt}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${vt}(uniforms.Dy_shape[${qt}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }

              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${vt}(dyCCorner) + ${vt}(wC)) / ${vt}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${vt}(uniforms.Dy_shape[${Wt}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + ${E}) {
                  let xValue = ${o?ir.getByOffset(`${ir.indicesToOffset(`${ir.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${E}`):ir.get("batch","inputChannel","idyR","idyC")};
                  ${(()=>{let zt="";if(E===1)zt+=`
        let w_offset = ${Ht.indicesToOffset(`${Ht.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
        let wValue = ${Ht.getByOffset(`w_offset / ${d}`)};
        dotProd = dotProd + xValue * wValue;`;else if(f===1)zt+=`
          let wValue = ${Ht.getByOffset(`${Ht.indicesToOffset(`${Ht.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)} / ${d}`)};
          dotProd = dotProd + dot(xValue, wValue);`;else for(let Nt=0;Nt<E;Nt++)zt+=`
            let wValue${Nt} = ${Ht.getByOffset(`${Ht.indicesToOffset(`${Ht.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${Nt}, wOutChannel)`)} / ${d}`)};
            dotProd = dotProd + xValue[${Nt}] * wValue${Nt};`;return zt})()}
                  inputChannel = inputChannel + ${E};
                }
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${s?` + bias[d1 / ${C}]`:""};
            ${Qe.setByOffset("global_idx","value")};
          `;return`
    ${Ve.registerUniforms(pt).declareVariables(...rr,Qe)}
      ${Ve.mainStart()}
      ${Ve.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${Ut}}`}}}}),mn=xe(()=>{un(),Ts(),cs(),Na=(e,t,r,s,i,o)=>(e-1)*t+r+(s-1)*i+1-o,Wu=(e,t,r,s,i)=>{let o=Math.floor(e/2);t==="SAME_UPPER"?(r[s]=o,r[i]=e-o):t==="SAME_LOWER"&&(r[s]=e-o,r[i]=o)},Ba=(e,t,r,s,i,o,a,c,h,f)=>{let E=e.length-2,C=f.length===0;h.length<E&&h.push(...Array(E-h.length).fill(0));let d=e[0],D=t[c?3:1]*i;for(let W=0,J=e.length-E-(c?1:0);W<E;++W,++J){let X=e[J],ne=C?X*a[W]:f[W],he=Na(X,a[W],o[W],t[J],r[W],ne);Wu(he,s,o,W,W+E),C&&f.push(a[W]*(X-1)+h[W]+(t[J]-1)*r[W]+1-o[W]-o[W+E])}f.splice(0,0,d),f.splice(c?3:1,0,D)},Ra=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((C,d)=>C*d,1)===0){r.length=0;for(let C=2;C<t[1].dims.length;++C)r.push(t[1].dims[C])}let s=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(s?3:1,0,t[1].dims[1]);let i=e.pads.slice(),o=e.outputShape.slice(),a=e.outputPadding.slice(),c=t[0].dims,h=e.dilations.slice();if(h.reduce((C,d)=>C+d,0)===0){let C=t[0].dims.length-2;h=new Array(C).fill(1)}let f=e.strides.slice();if(f.reduce((C,d)=>C+d,0)===0){let C=t[0].dims.length-2;f=new Array(C).fill(1)}Ba(c,r,h,e.autoPad,e.group,i,f,s,a,o);let E=Object.assign({},e);return Object.assign(E,{kernelShape:r,pads:i,outputPadding:a,outputShape:o,dilations:h,strides:f}),E},Hu=e=>{let t=ka(e),r=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,o=e.group,a=e.kernelShape,c=e.pads,h=e.strides,f=e.wIsConst();return{autoPad:s,format:r,dilations:i,group:o,kernelShape:a,outputPadding:e.outputPadding,outputShape:e.outputShape,pads:c,strides:h,wIsConst:f,...t,cacheKey:`${e.format};${t.activation};`}},Ku=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let r=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==r))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.reduce((i,o)=>i+o,0)>0&&t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.reduce((i,o)=>i+o,0)>0&&t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.reduce((i,o)=>i+o,0)>0&&t.pads.length!==2*s)throw new Error(`pads should be ${2*s}D`);if(t.outputPadding.length!==s&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${s}D`);if(t.kernelShape.reduce((i,o)=>i+o,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},wi=(e,t,r,s)=>{let i=e.kernelCustomData.wT??e.compute(Pn(t[1],[2,3,0,1]),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=i);let o=[t[0],i];t.length===3&&o.push(t[2]),e.compute(La(o,r,s),{inputs:o})},Qu=(e,t)=>{let r=t.format==="NHWC",s=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let o=t.dilations;(o.length===0||o[0]===0)&&(o=[1]);let a=t.strides;(a.length===0||a[0]===0)&&(a=[1]);let c=t.pads;c.length===0&&(c=[0,0]),c=[0,c[0],0,c[1]],a=[1].concat(a),o=[1].concat(o),i=[1].concat(i);let h=t.outputPadding;h=[0].concat(h);let f=Ra({...t,pads:c,strides:a,dilations:o,kernelShape:i,outputPadding:h},s);wi(e,s,f,E=>r?[E[0],E[2],E[3]]:[E[0],E[1],E[3]])},Xu=(e,t)=>{if(Ku(e.inputs,t),e.inputs[0].dims.length===3)Qu(e,t);else{let r=Ra(t,e.inputs);wi(e,e.inputs,r)}}}),vn=xe(()=>{Jt(),or(),Qr(),dr(),Yu=(e,t,r,s)=>{let i=ye.size(t),o=t.length,a=rt("input",e,o),c=Et("output",e,o),h=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),f=ye.normalizeAxis(h,o);return{name:"CumSum",shaderCache:{hint:s.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:f},...Lt(t,t)]}),getShaderSource:E=>{let C=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,d=jt("uniforms.input_shape","uniforms.axis",o),D=s.reverse?C+(s.exclusive?" + 1":""):"0",W=s.reverse?d:C+(s.exclusive?"":" + 1");return`
                ${E.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,c)}
                ${E.mainStart()}
                  ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${c.offsetToIndices("global_idx")};
                  var sum = ${c.type.value}(0);
                  let first : i32 = ${D};
                  let last : i32 = ${W};
                  for (var i : i32 = first; i < last; i++) {
                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${a.getByIndices("inputIndices")};
                  }
                  ${c.setByOffset("global_idx","sum")};
                }`}}},Da=(e,t)=>{let r=e.inputs[0].dims,s=e.inputs[0].dataType,i=e.inputs[1];e.compute(Yu(s,r,i,t),{inputs:[0]})},Ju=e=>{let t=e.exclusive===1,r=e.reverse===1;return Le({exclusive:t,reverse:r})}}),Us=xe(()=>{Jt(),or(),Qr(),dr(),Zu=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},ja=(e,t,r,s)=>{let i=[];i.push(`fn perm(i: ${s.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let o=0;o<t;++o)i.push(r.indicesSet("a",e[o],`i[${o}]`));return i.push("return a;}"),i.join(`
`)},ed=(e,t)=>{let r,s,i,o,a,c,h=t.format==="NHWC",f=t.blocksize,E=t.mode==="DCR";h?([r,s,i,o]=e.dims,a=E?[r,s,i,f,f,o/f**2]:[r,s,i,o/f**2,f,f],c=E?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,s,i,o]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],a=E?[r,f,f,o/f**2,s,i]:[r,o/f**2,f,f,s,i],c=E?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let C=e.reshape(a),d=C.dims.length,D=e.dataType,W=rt("a",D,d),J=Et("output",D,d);return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:X=>{let ne=h?[r,s*f,i*f,o/f**2]:[r,o/f**2,s*f,i*f],he=ye.size(ne),ke=C.dims,Fe=ye.sortBasedOnPerm(ke,c);return{outputs:[{dims:ne,dataType:X[0].dataType}],dispatchGroup:{x:Math.ceil(he/64)},programUniforms:[{type:12,data:he},...Lt(ke,Fe)]}},getShaderSource:X=>`
  ${X.registerUniform("output_size","u32").declareVariables(W,J)}

  ${ja(c,d,W,J)}

  ${X.mainStart()}
    ${X.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${J.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${J.setByOffset("global_idx",W.getByIndices("aIndices"))}
  }`}},td=(e,t)=>{Zu(e.inputs),e.compute(ed(e.inputs[0],t))},Ua=e=>Le({blocksize:e.blocksize,mode:e.mode,format:e.format})}),Zp=xe(()=>{Jt(),or(),Qr(),dr(),bi="^"+(yi="("+(Va="[a-zA-Z]|\\.\\.\\.")+")+")+"$",rd="^"+("("+yi+",)*"+yi)+"$",nd=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let r=this.symbolToIndices.get(e);r===void 0?r=[t]:r.push(t),this.symbolToIndices.set(e,r)}},Ga=class{constructor(e,t){var i;this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[r,s]=t.includes("->")?t.split("->",2):[t,""];if(!r.match(RegExp(rd)))throw new Error("Invalid LHS term");if(r.split(",").forEach((o,a)=>{let c=e[a].dims.slice();if(!o.match(RegExp(bi)))throw new Error("Invalid LHS term");let h=this.processTerm(o,!0,c,a);this.lhs.push(h)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([o,a])=>a.count===1||o==="...").map(([o])=>o).join("");else if(!s.match(RegExp(yi)))throw new Error("Invalid RHS");(i=s.match(RegExp(Va,"g")))==null||i.forEach(o=>{if(o==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let a=this.symbolToInfo.get(o);if(a===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(a.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(e,t,r){let s=this.symbolToInfo.get(e);if(s!==void 0){if(s.dimValue!==t&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(r)}else s={count:1,dimValue:t,inputIndices:[r]};this.symbolToInfo.set(e,s)}processTerm(e,t,r,s=-1){let i=r.length,o=!1,a=[],c=0;if(!e.match(RegExp(bi))&&!t&&e!=="")throw new Error("Invalid LHS term");let h=e.match(RegExp(Va,"g")),f=new nd(s);return h==null||h.forEach((E,C)=>{if(E==="..."){if(o)throw new Error("Only one ellipsis is allowed per input term");o=!0;let d=i-h.length+1;if(d<0)throw new Error("Ellipsis out of bounds");if(a=r.slice(c,c+d),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else{if(!t)throw new Error("Ellipsis must be specified in the LHS");this.hasEllipsis=!0,this.ellipsisDims=a}for(let D=0;D<a.length;D++){let W=String.fromCharCode(48+D);f.addSymbol(W,C+D),this.addSymbol(W,r[c++],s)}}else f.addSymbol(E,C+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(E,r[c++],s)}),f}},qa=e=>e+"_max",sd=(e,t,r,s)=>{let i=e.map(h=>h.length).map((h,f)=>rt(`input${f}`,t,h)),o=ye.size(s),a=Et("output",t,s.length),c=[...r.symbolToInfo.keys()].filter(h=>!r.rhs.symbolToIndices.has(h));return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let h=c.filter(E=>r.symbolToInfo.has(E)).map(E=>{var C;return{type:12,data:((C=r.symbolToInfo.get(E))==null?void 0:C.dimValue)||0}});h.push({type:12,data:o});let f=e.map((E,C)=>[...Lt(E)]).reduce((E,C)=>E.concat(C),h);return f.push(...Lt(s)),{outputs:[{dims:s,dataType:t}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:f}},getShaderSource:h=>{let f=[],E=[],C=[],d=[],D=[],W=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((X,ne)=>{var he;if(r.rhs.symbolToIndices.has(ne)){let ke=(he=r.rhs.symbolToIndices.get(ne))==null?void 0:he[0];ke!==void 0&&r.lhs.forEach((Fe,ze)=>{if(X.inputIndices.includes(ze)){let Ve=Fe.symbolToIndices.get(ne);if(Ve===void 0)throw new Error("Invalid symbol error");Ve.forEach(pt=>{f.push(`${i[ze].indicesSet(`input${ze}Indices`,pt,a.indicesGet("outputIndices",ke))}`)})}})}else r.lhs.forEach((ke,Fe)=>{if(X.inputIndices.includes(Fe)){let ze=ke.symbolToIndices.get(ne);if(ze===void 0)throw new Error("Invalid symbol error");ze.forEach(Ve=>{E.push(`${i[Fe].indicesSet(`input${Fe}Indices`,Ve,`${ne}`)}`)}),D.push(`prod *= ${i[Fe].getByIndices(`input${Fe}Indices`)};`)}}),C.push(`for(var ${ne}: u32 = 0; ${ne} < uniforms.${qa(ne)}; ${ne}++) {`),d.push("}")});let J=W?[...f,`let sum = ${i.map((X,ne)=>X.getByIndices(`input${ne}Indices`)).join(" * ")};`]:[...f,"var sum = 0.0;",...C,...E,"var prod = 1.0;",...D,"sum += prod;",...d];return`
            ${h.registerUniforms(c.map(X=>({name:`${qa(X)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...i,a)}

            ${h.mainStart()}
            ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${a.offsetToIndices("global_idx")};
            ${i.map((X,ne)=>`var input${ne}Indices: ${i[ne].type.indices};`).join(`
`)}
            ${J.join(`
`)};
            ${a.setByOffset("global_idx","sum")};
          }`}}},Wa=(e,t)=>{let r=new Ga(e.inputs,t.equation),s=r.outputDims,i=e.inputs.map((o,a)=>o.dims);e.compute(sd(i,e.inputs[0].dataType,r,s))},id=e=>{let t=e.equation.replace(/\s+/g,"");return Le({equation:t})}}),Pp=xe(()=>{Jt(),or(),dr(),ad=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),s=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;s<r.length&&i<t.length;++s,++i)if(r[s]!==t[i]&&r[s]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Ha=(e,t)=>{let r=e.length-t.length,s=[];for(let i=0;i<r;++i)s.push(e[i]);for(let i=0;i<t.length;++i)s.push(t[i]===1?e[i+r]:t[i]);return s},od=(e,t)=>e.length>t.length?Ha(e,t):Ha(t,e),vi=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),s=od(t,r),i=e[0].dataType,o=i===9||ye.size(t)===1,a=i===9||t.length>0&&t[t.length-1]%4==0?4:1,c=o||s.length>0&&s[s.length-1]%4==0?4:1,h=Math.ceil(ye.size(s)/c),f=[{type:12,data:h},...Lt(t,s)];return{name:"Expand",shaderCache:{hint:`${s.length};${a}${c}`,inputDependencies:["rank"]},getShaderSource:E=>{let C,d=rt("input",i,t.length,a),D=Et("output",i,s.length,c);if(i===9){let W=(J,X,ne="")=>`
          let outputIndices${X} = ${D.offsetToIndices(`outputOffset + ${X}u`)};
          let offset${X} = ${d.broadcastedIndicesToOffset(`outputIndices${X}`,D)};
          let index${X} = offset${X} / 4u;
          let component${X} = offset${X} % 4u;
          ${J}[${X}] = ${ne}(${d.getByOffset(`index${X}`)}[component${X}]);
        `;C=`
        let outputOffset = global_idx * ${c};
        var data = vec4<u32>(0);
        ${W("data",0,"u32")}
        ${W("data",1,"u32")}
        ${W("data",2,"u32")}
        ${W("data",3,"u32")}
        ${D.setByOffset("global_idx","data")}
      }`}else C=`
        let outputIndices = ${D.offsetToIndices(`global_idx * ${c}`)};
        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",D)};
        let data = ${D.type.value}(${d.getByOffset(`inputOffset / ${a}`)});
        ${D.setByOffset("global_idx","data")}
      }`;return`
    ${E.registerUniform("vec_size","u32").declareVariables(d,D)}
    ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${C}`},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:f})}},ld=e=>{ad(e.inputs),e.compute(vi(e.inputs),{inputs:[0]})}}),Ap=xe(()=>{Jt(),or(),dr(),qo(),ud=e=>{let t=e[0].dataType,r=ye.size(e[0].dims),s=ye.size(e[1].dims),i=s%4==0;return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:o=>{let a=rt("x",t,[1],4),c=rt("bias",t,[1],4),h=Et("y",t,[1],4),f=C=>`
      let bias${C}_offset: u32 = (global_idx * 4 + ${C}) % uniforms.bias_size;
      let bias${C} = ${c.getByOffset(`bias${C}_offset / 4`)}[bias${C}_offset % 4];`,E=i?`
      let bias = ${c.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${f(0)}${f(1)}${f(2)}${f(3)}
      let bias = ${a.type.value}(bias0, bias1, bias2, bias3);`;return`${o.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(a,c,h)}

    ${ma(Lr(t))}

    ${o.mainStart(fr)}
      ${o.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${a.getByOffset("global_idx")};
      ${E}
      let x_in = x + bias;
      ${h.setByOffset("global_idx",pi("x_in"))}
    }`},getRunData:o=>({outputs:[{dims:o[0].dims,dataType:o[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:s}],dispatchGroup:{x:Math.ceil(r/fr/4)}})}},dd=e=>{e.inputs.length<2||ye.size(e.inputs[1].dims)===0?mu(e):e.compute(ud(e.inputs))}}),w=xe(()=>{Jt(),or(),Qr(),dr(),cd=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},pd=(e,t)=>{let r=e[0].dims,s=e[1].dims,i=r.length,o=ye.normalizeAxis(t.axis,i),a=r.slice(0);a.splice(o,1,...s);let c=r[o],h=e[0].dataType===9?4:1,f=Math.ceil(ye.size(a)/h),E=[{type:12,data:f},{type:6,data:c},{type:12,data:o},...Lt(e[0].dims,e[1].dims,a)];return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:E}),getShaderSource:C=>{let d,D=rt("data",e[0].dataType,e[0].dims.length,h),W=rt("inputIndices",e[1].dataType,e[1].dims.length),J=Et("output",e[0].dataType,a.length,h),X=ne=>{let he=s.length,ke=`var indicesIndices${ne}  = ${W.type.indices}(0);`;for(let Fe=0;Fe<he;Fe++)ke+=`${he>1?`indicesIndices${ne}[${Fe}]`:`indicesIndices${ne}`} = ${a.length>1?`outputIndices${ne}[uniforms.axis + ${Fe}]`:`outputIndices${ne}`};`;ke+=`
          var idx${ne} = ${W.getByIndices(`indicesIndices${ne}`)};
          if (idx${ne} < 0) {
            idx${ne} = idx${ne} + uniforms.axisDimLimit;
          }
          var dataIndices${ne} : ${D.type.indices};
        `;for(let Fe=0,ze=0;Fe<i;Fe++)Fe===o?(ke+=`${i>1?`dataIndices${ne}[${Fe}]`:`dataIndices${ne}`} = u32(idx${ne});`,ze+=he):(ke+=`${i>1?`dataIndices${ne}[${Fe}]`:`dataIndices${ne}`} = ${a.length>1?`outputIndices${ne}[${ze}]`:`outputIndices${ne}`};`,ze++);return ke};if(e[0].dataType===9){let ne=(he,ke,Fe="")=>`
          let outputIndices${ke} = ${J.offsetToIndices(`outputOffset + ${ke}u`)};
          ${X(ke)};
          let offset${ke} = ${D.indicesToOffset(`dataIndices${ke}`)};
          let index${ke} = offset${ke} / 4u;
          let component${ke} = offset${ke} % 4u;
          ${he}[${ke}] = ${Fe}(${D.getByOffset(`index${ke}`)}[component${ke}]);
        `;d=`
        let outputOffset = global_idx * ${h};
        var value = vec4<u32>(0);
        ${ne("value",0,"u32")}
        ${ne("value",1,"u32")}
        ${ne("value",2,"u32")}
        ${ne("value",3,"u32")}
        ${J.setByOffset("global_idx","value")}
      `}else d=`
      let outputIndices = ${J.offsetToIndices("global_idx")};
      ${X("")};
      let value = ${D.getByIndices("dataIndices")};
      ${J.setByOffset("global_idx","value")};
      `;return`
      ${C.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(D,W,J)}
      ${C.mainStart()}
        ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${d}
      }`}}},Ka=e=>Le({axis:e.axis}),hd=(e,t)=>{let r=e.inputs;cd(r),e.compute(pd(e.inputs,t))}}),P=xe(()=>{Jt(),or(),dr(),md=(e,t,r,s,i,o,a,c,h)=>{let f=[{type:12,data:o},{type:12,data:s},{type:12,data:i},{type:12,data:r},{type:12,data:a},{type:12,data:c},{type:12,data:h}],E=[o];return f.push(...Lt(t.dims,E)),e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${i.length}_${r.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:E,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:f}),getShaderSource:C=>{let d=[rt("indices_data",t.dataType,t.dims.length),Et("input_slice_offsets_data",12,1,1)],D=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:i.length},{name:"sizes_from_slice_dims_data",type:"u32",length:r.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${C.registerUniforms(D).declareVariables(...d)}
  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${i.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${r.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`}},{inputs:[t],outputs:[-1]})[0]},Qa=(e,t)=>{let r=e.inputs,s=r[0].dims,i=r[0].dataType,o=r[1].dims,a=o[o.length-1],c=ye.sizeToDimension(o,o.length-1),h=ye.sizeFromDimension(s,t.batchDims+a),f=ye.sizeToDimension(s,t.batchDims),E=ye.sizeFromDimension(s,t.batchDims),C=c/f,d=new Array(a),D=h;for(let ke=0;ke<a;++ke)d[a-1-ke]=D,D*=s[t.batchDims+a-1-ke];let W=md(e,r[1],d,t.batchDims,s,c,C,E,a),J=t.batchDims+a;if(J>s.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let X=o.slice(0,-1).concat(s.slice(J)),ne=ye.size(X),he=[{type:12,data:ne},{type:12,data:h},...Lt(r[0].dims,W.dims,X)];e.compute({name:"GatherND",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:X,dataType:i}],dispatchGroup:{x:Math.ceil(ne/64)},programUniforms:he}),getShaderSource:ke=>{let Fe=rt("data",r[0].dataType,r[0].dims.length),ze=rt("slice_offsets",12,W.dims.length),Ve=Et("output",r[0].dataType,X.length);return`
          ${ke.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(Fe,ze,Ve)}
            ${ke.mainStart()}
            ${ke.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`}},{inputs:[r[0],W]})},fd=e=>({batchDims:e.batch_dims,cacheKey:""})}),Q=xe(()=>{Jt(),or(),Qr(),dr(),_d=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let r=ye.normalizeAxis(t.quantizeAxis,e[0].dims.length),s=t.blockSize,i=e[0],o=e[2],a=e.length===4?e[3]:void 0;if(o.dims.length!==i.dims.length||!i.dims.map((c,h)=>h===r?Math.ceil(c/s)===o.dims[h]:c===o.dims[h]).reduce((c,h)=>c&&h,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(a){if(a.dataType!==i.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(a.dims.length!==o.dims.length||!a.dims.map((c,h)=>c===o.dims[h]).reduce((c,h)=>c&&h,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},gd=(e,t)=>{let r=e[0].dims,s=e[1].dims,i=r.length,o=ye.normalizeAxis(t.gatherAxis,i),a=ye.normalizeAxis(t.quantizeAxis,i),c=r.slice(0);c.splice(o,1,...s);let h=ye.size(c),f=e[2].dataType,E=e[0].dataType===22,C=[{type:12,data:h},{type:12,data:a},{type:12,data:o},{type:12,data:t.blockSize},...Lt(...e.map((d,D)=>d.dims),c)];return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter((d,D)=>D!==1).map(d=>d.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(d,D)=>"rank")},getRunData:()=>({outputs:[{dims:c,dataType:f}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:C}),getShaderSource:d=>{let D=rt("data",e[0].dataType,e[0].dims.length),W=rt("inputIndices",e[1].dataType,e[1].dims.length),J=rt("scales",e[2].dataType,e[2].dims.length),X=e.length>3?rt("zeroPoint",e[3].dataType,e[3].dims.length):void 0,ne=Et("output",f,c.length),he=[D,W,J];return X&&he.push(X),`
        ${d.registerUniforms([{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...he,ne)}
        ${d.mainStart()}
        let output_indices = ${ne.offsetToIndices("global_idx")};
        var indices_indices = ${W.type.indices}(0);
        ${s.length>1?`
          for (var i: u32 = 0; i < ${s.length}; i++) {
            let index = ${ne.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${W.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${ne.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${D.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${ne.indicesGet("output_indices","i")};
          ${D.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${W.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${r[o]};
        }
        ${D.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${c.length}; i++) {
          let index = ${ne.indicesGet("output_indices",`i + ${s.length} - 1`)};
          ${D.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${D.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${D.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${E?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${J.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${J.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${J.getByIndices("scale_indices")};
        ${X?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${X.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${X.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${E?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${Lr(f)}(quantized_data - zero_point) * scale;
        ${ne.setByOffset("global_idx","dequantized_data")};
    }`}}},wd=(e,t)=>{let r=e.inputs;_d(r,t),e.compute(gd(e.inputs,t))},Xa=e=>Le({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),Pe=xe(()=>{Jt(),or(),Qr(),dr(),yd=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},bd=(e,t)=>{let r=e[0].dims,s=e[0].dataType,i=r.length,o=e[1].dims,a=e[1].dataType,c=ye.normalizeAxis(t.axis,i),h=r[c],f=o.slice(0),E=ye.size(f),C=rt("input",s,i),d=rt("indicesInput",a,o.length),D=Et("output",s,f.length),W=[{type:12,data:E},{type:6,data:h},{type:12,data:c}];return W.push(...Lt(r,o,f)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:f,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:W}),getShaderSource:J=>`
      ${J.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(C,d,D)}
      ${J.mainStart()}
      ${J.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${D.offsetToIndices("global_idx")};

      var idx = ${d.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${C.type.indices}(outputIndices);
      ${C.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${C.getByIndices("inputIndices")};

      ${D.setByOffset("global_idx","value")};
  }`}},Ya=e=>Le({axis:e.axis}),vd=(e,t)=>{let r=e.inputs;yd(r),e.compute(bd(e.inputs,t))}}),Xe=xe(()=>{Jt(),or(),dr(),xd=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Ja=(e,t)=>{let r=e[0].dims.slice(),s=e[1].dims.slice(),[i,o,a]=nr.getShapeOfGemmResult(r,t.transA,s,t.transB,e.length===3?e[2].dims:void 0),c=[i,o];if(!c)throw new Error("Can't use gemm on the given tensors");let h=16,f=Math.ceil(o/h),E=Math.ceil(i/h),C=(ye.size(c),[{type:12,data:f},{type:12,data:i},{type:12,data:o},{type:12,data:a},{type:1,data:t.alpha},{type:1,data:t.beta}]),d=["type","type"];return e.length===3&&(C.push(...Lt(e[2].dims)),d.push("rank")),C.push(...Lt(c)),{name:"GemmShared",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:f*E},programUniforms:C}),getShaderSource:D=>{let W=rt("a",e[0].dataType,e[0].dims),J=rt("b",e[1].dataType,e[1].dims),X=null,ne=[W,J];e.length===3&&(X=rt("c",e[2].dataType,e[2].dims.length),ne.push(X));let he=Et("output",e[0].dataType,c.length);ne.push(he);let ke="",Fe="";t.transA&&t.transB?(Fe=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${W.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${J.type.value}(0);
      }
      `,ke="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):t.transA&&!t.transB?(Fe=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${W.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${J.type.value}(0);
      }
      `,ke="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!t.transA&&t.transB?(Fe=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${W.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${J.type.value}(0);
      }
      `,ke="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!t.transA&&!t.transB&&(Fe=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${W.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${J.type.value}(0);
      }
      `,ke="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let ze=t.alpha===1?"":"value *= uniforms.alpha;";return`
  ${D.registerUniforms([{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...ne)}
  var<workgroup> tile_a: array<array<${W.type.storage}, 16>, 16>;
  var<workgroup> tile_b: array<array<${J.type.storage}, 16>, 16>;
  ${D.mainStart([h,h,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * 16;
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * 16;
    let num_tiles = (uniforms.K - 1) / 16 + 1;
    var k_start = 0u;
    var value = ${he.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${Fe}
      k_start = k_start + 16;
      workgroupBarrier();

      for (var k: u32 = 0u; k < 16; k++) {
        ${ke}
      }
      workgroupBarrier();
    }

    ${ze}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${X!=null?`let cOffset = ${X.broadcastedIndicesToOffset("vec2(m, n)",he)}; value += ${he.type.value}(uniforms.beta) * ${X.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`}}},kd=e=>({transA:e.transA,transB:e.transB,alpha:e.alpha,beta:e.beta,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}),Md=(e,t)=>{xd(e.inputs),e.compute(Ja(e.inputs,t))}}),Ye=xe(()=>{Jt(),or(),Qr(),dr(),[Gn,es,ks,Ms]=[0,1,2,3],Td=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error("last dimension of grid must be equal to "+(e[0].dims.length-2));if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},Za=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,$d=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,Ed=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,Sd=(e,t,r)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${t} {
     var pixel = ${t}(0);
     var indices = vec4<u32>(0);
     indices[${Gn}] = batch;
     indices[${es}] = channel;`+(()=>{switch(r.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${ks}] = u32(r);
            indices[${Ms}] = u32(c);
          }
        `;case"border":return`
          indices[${ks}] = u32(clamp(r, 0, H - 1));
          indices[${Ms}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${ks}] = gs_reflect(r, border[1], border[3]);
          indices[${Ms}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${r.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,Cd=(e,t,r)=>(()=>{switch(r.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${Gn}], indices[${es}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${Gn}], indices[${es}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${Gn}], indices[${es}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${Gn}], indices[${es}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${Gn}], indices[${es}], border);

          let dx2 = ${t}(f32(x2) - x);
          let dx1 = ${t}(x - f32(x1));
          let dy2 = ${t}(f32(y2) - y);
          let dy1 = ${t}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${t}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${Gn}], indices[${es}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${r.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,Pd=(e,t)=>{let r=rt("x",e[0].dataType,e[0].dims.length),s=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],i=rt("grid",e[1].dataType,s.length,2),o=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];t.format==="NHWC"&&(o=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[Gn,es,ks,Ms]=[0,3,1,2]);let a=Et("output",e[0].dataType,o.length),c=r.type.value,h=[{type:12,data:ye.size(o)},...Lt(e[0].dims,s,o)];return{name:"GridSample",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:["type","type"]},getRunData:f=>{let E=ye.size(o);return{outputs:[{dims:o,dataType:f[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:h}},getShaderSource:f=>`
  ${f.registerUniform("output_size","u32").declareVariables(r,i,a)}
  
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }

  ${Za(c)}
  ${$d(t)}
  ${Ed(t)}
  ${Sd(r,c,t)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${ks}]);
      let W_in = i32(uniforms.x_shape[${Ms}]);

      ${t.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${a.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${Gn}], indices[${ks}], indices[${Ms}]);
      let nxy = ${i.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${Cd(a,c,t)}
  }`}},Ad=(e,t)=>{Td(e.inputs),e.compute(Pd(e.inputs,t))},eo=e=>Le({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),st=xe(()=>{Jt(),or(),Qr(),Uo(),Go(),dr(),cs(),bn=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,Id=(e,t)=>{let r=e[0],s=bn(e,1),i=bn(e,2),o=bn(e,3),a=bn(e,4),c=bn(e,5),h=bn(e,6),f=bn(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let E,C=r.dims[0],d=r.dims[1],D=r.dims.length===3?r.dims[2]:t.numHeads*r.dims[4],W=d,J=0,X=0,ne=Math.floor(D/t.numHeads);if(h&&f&&ye.size(h.dims)&&ye.size(f.dims)){if(h.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(h.dims[0]!==C||h.dims[1]!==t.numHeads||h.dims[3]!==ne)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(f.dims[0]!==C||f.dims[1]!==t.numHeads||f.dims[3]!==ne)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(h.dims[2]!==f.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(f.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');J=h.dims[2],X=h.dims[2]}else if(h&&ye.size(h.dims)||f&&ye.size(f.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');if(s&&ye.size(s.dims)>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(s.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');E=2,W=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==t.numHeads||s.dims[3]!==2||s.dims[4]!==ne)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');E=5,W=s.dims[1]}else{if(s.dims[1]!==t.numHeads||s.dims[3]!==ne)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');E=0,W=s.dims[2]}}else{if(r.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(r.dims[2]!==t.numHeads||r.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');E=3}if(o&&ye.size(o.dims)>0){if(o.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(s&&s.dims.length===5&&s.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let he=J+W,ke=0;if(a&&ye.size(a.dims)>0){ke=8;let Ve=a.dims;throw Ve.length===1?Ve[0]===C?ke=1:Ve[0]===3*C+2&&(ke=3):Ve.length===2&&Ve[0]===C&&Ve[1]===he&&(ke=5),ke===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let Fe=!1,ze=D;if(i&&ye.size(i.dims)>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(W!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');ze=i.dims[2]}else{if(W!==i.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');ze=i.dims[1]*i.dims[3],Fe=!0}}if(a&&ye.size(a.dims)>0)throw new Error("Key padding mask is not supported");if(c&&ye.size(c.dims)>0){if(c.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(c.dims[0]!==C||c.dims[1]!==t.numHeads||c.dims[2]!==d||c.dims[3]!==he)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:C,sequenceLength:d,pastSequenceLength:J,kvSequenceLength:W,totalSequenceLength:he,maxSequenceLength:X,inputHiddenSize:0,hiddenSize:D,vHiddenSize:ze,headSize:ne,vHeadSize:Math.floor(ze/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:ke,scale:t.scale,broadcastResPosBias:!1,passPastInKv:Fe,qkvFormat:E}},to=e=>Le({...e}),ro=Le({perm:[0,2,1,3]}),Fd=(e,t,r,s,i,o,a)=>{let c=[s,i,o],h=ye.size(c),f=[{type:12,data:h},{type:12,data:a},{type:12,data:o}];return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:c,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:f}),getShaderSource:E=>{let C=Et("qkv_with_bias",t.dataType,c),d=rt("qkv",t.dataType,c),D=rt("bias",r.dataType,c);return`
  ${E.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables(d,D,C)}
  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`}},{inputs:[t,r],outputs:[-1]})[0]},qn=(e,t,r,s,i,o,a,c)=>{let h=o;if(a&&ye.size(a.dims)>0){if(s===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return h=Fd(e,o,a,t,s,r*i,c),h=h.reshape([t,s,r,i]),r===1||s===1?h:e.compute(Pn(h,ro.perm),{inputs:[h],outputs:[-1]})[0]}return o.dims.length===3&&(h=o.reshape([t,s,r,i])),r===1||s===1?h:e.compute(Pn(h,ro.perm),{inputs:[h],outputs:[-1]})[0]},zd=(e,t)=>{let r=Id(e.inputs,t),s=e.inputs[0],i=bn(e.inputs,1),o=bn(e.inputs,2),a=bn(e.inputs,3),c=bn(e.inputs,4),h=bn(e.inputs,5),f=bn(e.inputs,6),E=bn(e.inputs,7);if(s.dims.length===5)throw new Error("Packed QKV is not implemented");if((i==null?void 0:i.dims.length)===5)throw new Error("Packed KV is not implemented");let C=i&&o&&i.dims.length===4&&o.dims.length===4,d=qn(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,s,a,0);if(C)return Bs(e,d,i,o,c,void 0,f,E,h,r);if(!i||!o)throw new Error("key and value must be provided");let D=qn(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,i,a,r.hiddenSize),W=qn(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,o,a,2*r.hiddenSize);Bs(e,d,D,W,c,void 0,f,E,h,r)}}),xt=xe(()=>{Jt(),or(),Qr(),dr(),Od=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Ld=(e,t)=>{let r=[],s=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),s=r.length),Le({numOutputs:s,axis:t.axis,splitSizes:r})},Nd=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${jt("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,no=e=>{let t=e.length,r=[];for(let s=0;s<t;++s){let i=e[s].setByIndices("indices","input[global_idx]");t===1?r.push(i):s===0?r.push(`if (output_number == ${s}u) { ${i} }`):s===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${s}) { ${i} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},so=(e,t)=>{let r=e[0].dims,s=ye.size(r),i=e[0].dataType,o=ye.normalizeAxis(t.axis,r.length),a=new Array(t.numOutputs),c=rt("input",i,r.length),h=new Array(t.numOutputs),f=[],E=[],C=0,d=[{type:12,data:s}];for(let D=0;D<t.numOutputs;D++){C+=t.splitSizes[D],h[D]=C;let W=r.slice();W[o]=t.splitSizes[D],E.push(W),a[D]=Et(`output${D}`,i,W.length),f.push({dims:E[D],dataType:e[0].dataType})}return d.push({type:12,data:h},...Lt(r,...E)),{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:D=>`
  ${D.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",h.length).declareVariables(c,...a)}
  ${Nd(h.length)}
  ${no(a)}

  ${D.mainStart()}
    ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${c.offsetToIndices("global_idx")};
    var index = ${c.indicesGet("indices",o)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${jt("uniforms.size_in_split_axis","output_number - 1u",h.length)};
      ${c.indicesSet("indices",o,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`,getRunData:()=>({outputs:f,dispatchGroup:{x:Math.ceil(s/64)},programUniforms:d})}},Bd=(e,t)=>{Od(e.inputs);let r=e.inputs.length===1?t:Ld(e.inputs,t);e.compute(so(e.inputs,r),{inputs:[0]})},Rd=e=>{let t=e.axis,r=e.splitSizes,s=e.numOutputs<0?r.length:e.numOutputs;if(s!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Le({axis:t,numOutputs:s,splitSizes:r})}}),Tt=xe(()=>{Qr(),Go(),st(),xt(),cs(),Dd=(e,t)=>{if(t.doRotary)throw new Error("GroupQuerryAttention do_rotary attribute is not supported");if(t.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let r=e[0],s=e[1],i=e[2],o=e[3],a=e[4];if(t.localWindowSize!==-1)throw new Error("Local attention is not supported");if(t.softcap!==0)throw new Error("Softcap is not supported");if(t.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(t.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let c=r.dims[0],h=r.dims[1],f=r.dims.length===3?r.dims[2]:t.numHeads*r.dims[4],E=h,C=0,d=!s||s.dims.length===0,D=Math.floor(d?f/(t.numHeads+2*t.kvNumHeads):f/t.numHeads);d&&(f=D*t.numHeads);let W=o&&o.dims.length!==0,J=a&&a.dims.length!==0;if(W&&o.dims.length===4&&o.dims[0]===c&&o.dims[1]!==t.kvNumHeads&&o.dims[2]===t.kvNumHeads&&o.dims[3]===D)throw new Error("BSNH pastKey/pastValue is not supported");if(W&&J){if(o.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(a.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');C=o.dims[2]}else if(W||J)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let X=1;if(s&&s.dims.length>0){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(r.dims[2]%s.dims[2]!=0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');E=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==t.numHeads||s.dims[3]!==2||s.dims[4]!==D)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(i)throw new Error('Expect "value" be none when "key" has packed kv format.');E=s.dims[1]}else{if(s.dims[1]!==t.numHeads||s.dims[3]!==D)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');E=s.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');X=3}let ne=!1,he=t.kvNumHeads?D*t.kvNumHeads:f;if(i&&i.dims.length>0){if(i.dims.length!==3&&i.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==i.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(i.dims.length===3){if(E!==i.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');he=i.dims[2]}else{if(E!==i.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');he=i.dims[1]*i.dims[3],ne=!0}}let ke=e.length>4?e[5]:void 0;if(ke&&ke.dims.length!==1&&ke.dims[0]!==c)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:c,sequenceLength:h,pastSequenceLength:C,kvSequenceLength:E,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:f,vHiddenSize:he,headSize:D,vHeadSize:Math.floor(he/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:ne,qkvFormat:X}},xi=Le({perm:[0,2,1,3]}),io=(e,t,r)=>{let s=t,i=r.kvNumHeads;return t.dims.length===3&&r.kvSequenceLength!==0&&(s=t.reshape([r.batchSize,r.kvSequenceLength,i,r.headSize]),s=e.compute(Pn(s,xi.perm),{inputs:[s],outputs:[-1]})[0]),s},jd=(e,t)=>{var X;let r=Dd(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((X=e.inputs[1])==null?void 0:X.dims.length)===5)throw new Error("Packed KV is not implemented");let s=e.inputs[0],i=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,o=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,a=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,c=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,h=e.inputs.length>4?e.inputs[5]:void 0,f=e.inputs.length>5?e.inputs[6]:void 0,E=r.kvNumHeads?r.kvNumHeads:r.numHeads,C=Le({axis:2,numOutputs:3,splitSizes:[r.numHeads*r.headSize,E*r.headSize,E*r.headSize]}),[d,D,W]=i||o?[s,i,o]:e.compute(so([s],C),{inputs:[s],outputs:[-1,-1,-1]}),J=qn(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,d,void 0,0);Bs(e,J,io(e,D,r),io(e,W,r),void 0,void 0,a,c,void 0,r,h,f)}}),bt=xe(()=>{Jt(),or(),cs(),dr(),ao=(e,t,r,s,i,o,a,c)=>{let h=gr(o),f=h===1?"f32":`vec${h}f`,E=h===1?"vec2f":`mat2x${h}f`,C=i*a,d=64;C===1&&(d=256);let D=[i,a,o/h],W=[i,a,2],J=[];return J.push(...Lt(D,W)),e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${h};${c};${d}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:W,dataType:1}],dispatchGroup:{x:C},programUniforms:J}),getShaderSource:X=>{let ne=rt("x",t.dataType,3,h),he=[ne,rt("scale",r.dataType,r.dims),rt("bias",s.dataType,s.dims),Et("output",1,3,2)];return`
  var<workgroup> workgroup_shared : array<${E}, ${d}>;
  const workgroup_size = ${d}u;
  ${X.declareVariables(...he)}
  ${X.mainStart(d)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${f}(0);
    var squared_sum = ${f}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${f}(${ne.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${E}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Hr("workgroup_shared[0][0]",h)} / f32(hight * ${h});
      let squared_sum_final = ${Hr("workgroup_shared[0][1]",h)} / f32(hight * ${h});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${c}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`}},{inputs:[t,r,s],outputs:[-1]})[0]},Zs=(e,t,r)=>{let s=t[0].dims,i=s,o=s[0],a=s[1],c=ye.sizeFromDimension(s,2),h=gr(c),f=ye.size(i)/h,E=ao(e,t[0],t[1],t[2],o,c,a,r.epsilon),C=[o,a,c/h],d=[o,a];e.compute({name:"InstanceNormalization",shaderCache:{hint:`${h}`,inputDependencies:["type","none"]},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...Lt(C,d,C)]}),getShaderSource:D=>{let W=rt("x",t[0].dataType,C.length,h),J=rt("scale_shift",1,d.length,2),X=Et("output",t[0].dataType,C.length,h),ne=[W,J,X];return`
  ${D.registerUniform("output_size","u32").declareVariables(...ne)}
  ${D.mainStart()}
  ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${X.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${J.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${W.getByOffset("global_idx")} * ${X.type.value}(scale_shift.x) + ${X.type.value}(scale_shift.y);
      ${X.setByOffset("global_idx","value")};
  }`}},{inputs:[t[0],E]})},Ud=(e,t,r)=>{let s=t[0].dims,i=s,o=s[0],a=s[s.length-1],c=ye.sizeFromDimension(s,1)/a,h=gr(a),f=ye.size(i)/h,E=[{type:12,data:c},{type:12,data:Math.floor(a/h)}],C=!1,d=[0,s.length-1];for(let J=0;J<s.length-2;J++)C=C||s[J+1]!==1,d.push(J+1);C=C&&s[s.length-1]!==1;let D=C?e.compute(Pn(e.inputs[0],d),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:s.length},(J,X)=>s[d[X]])),W=ao(e,D,t[1],t[2],o,c,a,r.epsilon);e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${h}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:E}),getShaderSource:J=>{let X=vr(t[0].dataType),ne=h===1?"vec2f":`mat${h}x2f`,he=ze=>{let Ve=ze===0?"x":"y",pt=h===1?"f32":`vec${h}f`;switch(h){case 1:return`${X}(${pt}(scale.${Ve}))`;case 2:return`vec2<${X}>(${pt}(scale[0].${Ve}, scale[1].${Ve}))`;case 4:return`vec4<${X}>(${pt}(scale[0].${Ve}, scale[1].${Ve}, scale[2].${Ve}, scale[3].${Ve}))`;default:throw new Error(`Not supported compoents ${h}`)}},ke=rt("input",t[0].dataType,t[0].dims,h),Fe=Et("output",t[0].dataType,i,h);return`
  @group(0) @binding(0) var<storage, read> input : array<${ke.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${ne}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${Fe.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${J.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${he(0)}, ${he(1)});
  }`}},{inputs:[t[0],W]})},Vd=(e,t)=>{t.format==="NHWC"?Ud(e,e.inputs,t):Zs(e,e.inputs,t)}}),Pt=xe(()=>{Jt(),or(),dr(),Gd=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},qd=(e,t,r)=>{let s=t.simplified,i=e[0].dims,o=e[1],a=!s&&e[2],c=i,h=ye.normalizeAxis(t.axis,i.length),f=ye.sizeToDimension(i,h),E=ye.sizeFromDimension(i,h),C=ye.size(o.dims),d=a?ye.size(a.dims):0;if(C!==E||a&&d!==E)throw new Error(`Size of X.shape()[axis:] == ${E}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${C} and bias size of ${d}`);let D=[];for(let Fe=0;Fe<i.length;++Fe)Fe<h?D.push(i[Fe]):D.push(1);let W=gr(E),J=["type","type"],X=[{type:12,data:f},{type:1,data:E},{type:12,data:Math.floor(E/W)},{type:1,data:t.epsilon}];a&&J.push("type");let ne=r>1,he=r>2,ke=[{dims:c,dataType:e[0].dataType}];return ne&&ke.push({dims:D,dataType:1}),he&&ke.push({dims:D,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${W};${r};${s}`,inputDependencies:J},getRunData:()=>({outputs:ke,dispatchGroup:{x:Math.ceil(f/64)},programUniforms:X}),getShaderSource:Fe=>{let ze=vr(e[0].dataType),Ve=[rt("x",e[0].dataType,e[0].dims,W),rt("scale",o.dataType,o.dims,W)];return a&&Ve.push(rt("bias",a.dataType,a.dims,W)),Ve.push(Et("output",e[0].dataType,c,W)),ne&&Ve.push(Et("mean_data_output",1,D)),he&&Ve.push(Et("inv_std_output",1,D)),`
  ${Fe.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...Ve)}
  ${Fe.mainStart()}
    ${Fe.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Tn("f32",W)};
    var mean_square_vector = ${Tn("f32",W)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Fr(ze,W,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Hr("mean_vector",W)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Hr("mean_square_vector",W)} / uniforms.norm_size ${s?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Fr(ze,W,"x[j + offset]")};
      let f32scale = ${Fr(ze,W,"scale[j]")};
      output[j + offset] = ${Ve[0].type.value}((f32input ${s?"":"- mean"}) * inv_std_dev * f32scale
        ${a?`+ ${Fr(ze,W,"bias[j]")}`:""}
      );
    }

    ${ne?"mean_data_output[global_idx] = mean":""};
    ${he?"inv_std_output[global_idx] = inv_std_dev":""};
  }`}}},ki=(e,t)=>{Gd(e.inputs),e.compute(qd(e.inputs,t,e.outputCount))}}),Vt=xe(()=>{or(),Ho(),Ko(),Wd=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Hd=e=>{Wd(e.inputs);let t=Mt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let r=t[t.length-1],s=e.inputs[0].dims[e.inputs[0].dims.length-1];if(r<8&&s<8)e.compute(Ta(e.inputs,{activation:""},t));else{let i=t[t.length-2],o=ye.size(e.inputs[0].dims.slice(0,-2)),a=ye.size(e.inputs[1].dims.slice(0,-2));if(o!==1&&i===1&&a===1){let c=[1,o,r],h=[e.inputs[0].reshape([1,o,s]),e.inputs[1].reshape([1,s,r])];e.compute(hi(h,{activation:""},t,c),{inputs:h})}else e.compute(hi(e.inputs,{activation:""},t))}}}),Zt=xe(()=>{Jt(),or(),Qr(),dr(),Kd=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],s=r.dims.length;if(r.dims[s-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),o=t.blockSize/8*t.bits,a=e[1];if(!ye.areEqual(a.dims,[t.n,i,o]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let c=e[2].dims;if(ye.size(c)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let h=e[3].dims,f=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(ye.size(h)!==f)throw new Error("zeroPoints input size error.")}},ap=(e,t)=>{let r=e[0].dims,s=r.length,i=r[s-2],o=t.k,a=t.n,c=r.slice(0,s-2),h=ye.size(c),f=e[1].dims[2]/4,E=e[0].dataType,C=gr(t.k),d=gr(f),D=gr(a),W=c.concat([i,a]),J=i>1&&a/D%2==0?2:1,X=ye.size(W)/D/J,ne=64,he=[],ke=[h,i,o/C],Fe=ye.convertShape(e[1].dims).slice();Fe.splice(-1,1,f/d),he.push(...Lt(ke)),he.push(...Lt(Fe)),he.push(...Lt(e[2].dims)),e.length===4&&he.push(...Lt(ye.convertShape(e[3].dims)));let ze=[h,i,a/D];return he.push(...Lt(ze)),{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${C};${d};${D};${J};64`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:W,dataType:E}],dispatchGroup:{x:X},programUniforms:he}),getShaderSource:Ve=>{let pt=ke.length,vt=rt("a",e[0].dataType,pt,C),qt=rt("b",12,Fe.length,d),Wt=rt("scales",e[2].dataType,e[2].dims.length),mr=[vt,qt,Wt],Ht=e.length===4?rt("zero_points",12,e[3].dims.length):void 0;Ht&&mr.push(Ht);let ir=ze.length,rr=Et("output",e[0].dataType,ir,D),Qe=vr(e[0].dataType),Ut=(()=>{switch(C){case 1:return`array<${Qe}, 8>`;case 2:return`mat4x2<${Qe}>`;case 4:return`mat2x4<${Qe}>`;default:throw new Error(`${C}-component is not supported.`)}})();return`
        var<workgroup> workgroup_shared: array<${rr.type.value}, ${J*ne}>;
        ${Ve.declareVariables(...mr,rr)}
        ${Ve.mainStart([ne,1,1])}
          let output_indices = ${rr.offsetToIndices(`(global_idx / 64) * ${J}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += 64) {
            //process one block
            var word_offset: u32 = block * ${t.blockSize/C};
            ${(()=>{let zt=`
            var col_index = col * ${D};
            ${Ht?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${Qe}(8);`}
            `;for(let Nt=0;Nt<D*J;Nt++)zt+=`
            let scale${Nt} = ${Wt.getByOffset("col_index * nBlocksPerCol + block")};
            ${Ht?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${Ht.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${Nt} = ${Qe}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return zt})()}
            for (var word: u32 = 0; word < ${f}; word += ${d}) {
              ${(()=>{let zt=`col_index = col * ${D};`;for(let Nt=0;Nt<D*J;Nt++)zt+=`
            let b${Nt}_data = ${qt.getByIndices(`${qt.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return zt+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${Ut};
            var b_dequantized_values: ${Ut};`,zt})()}
              for (var i: u32 = 0; i < ${d}; i++) {
                ${(()=>{let zt=`
          // reuse a data
            var input_offset = ${vt.indicesToOffset(`${vt.type.indices}(batch, row, word_offset)`)};
            var a_data: ${Ut};
            for (var j: u32 = 0; j < ${8/C}; j++) {
              a_data[j] = ${vt.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let Nt=0;Nt<D*J;Nt++)zt+=`
            b_value = ${d===1?`b${Nt}_data`:`b${Nt}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${Ut}(${Array.from({length:4},(wr,Zr)=>`${Qe}(b_value_lower[${Zr}]), ${Qe}(b_value_upper[${Zr}])`).join(", ")});
            b_dequantized_values = ${C===1?`${Ut}(${Array.from({length:8},(wr,Zr)=>`(b_quantized_values[${Zr}] - ${Ht?`zero_point${Nt}`:"zero_point"}) * scale${Nt}`).join(", ")});`:`(b_quantized_values - ${Ut}(${Array(8).fill(Ht?`zero_point${Nt}`:"zero_point").join(",")})) * scale${Nt};`};
            workgroup_shared[local_id.x * ${J} + ${Math.floor(Nt/D)}]${D>1?`[${Nt%D}]`:""} += ${Array.from({length:8/C},(wr,Zr)=>C===1?`a_data[${Zr}] * b_dequantized_values[${Zr}]`:`dot(a_data[${Zr}], b_dequantized_values[${Zr}])`).join(" + ")};
          `;return zt})()}
                word_offset += ${8/C};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${J}) {
            var output_value: ${rr.type.value} = ${rr.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < 64u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${J};
            }
            ${rr.setByIndices(`${rr.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`}}},Qd=(e,t)=>{let r=e[0].dims,s=r.length,i=r[s-2],o=t.k,a=t.n,c=r.slice(0,s-2),h=ye.size(c),f=e[1].dims[2]/4,E=e[0].dataType,C=gr(t.k),d=gr(f),D=c.concat([i,a]),W=a%8==0?8:a%4==0?4:1,J=128/W,X=J*d*8,ne=X/C,he=X/t.blockSize,ke=ye.size(D)/W,Fe=[],ze=[h,i,o/C],Ve=ye.convertShape(e[1].dims).slice();Ve.splice(-1,1,f/d),Fe.push(...Lt(ze)),Fe.push(...Lt(Ve)),Fe.push(...Lt(e[2].dims)),e.length===4&&Fe.push(...Lt(ye.convertShape(e[3].dims)));let pt=[h,i,a];return Fe.push(...Lt(pt)),{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${t.blockSize};${C};${d};${J};${W}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:D,dataType:E}],dispatchGroup:{x:ke},programUniforms:Fe}),getShaderSource:vt=>{let qt=ze.length,Wt=rt("a",e[0].dataType,qt,C),mr=rt("b",12,Ve.length,d),Ht=rt("scales",e[2].dataType,e[2].dims.length),ir=[Wt,mr,Ht],rr=e.length===4?rt("zero_points",12,e[3].dims.length):void 0;rr&&ir.push(rr);let Qe=pt.length,Ut=Et("output",e[0].dataType,Qe),zt=vr(e[0].dataType);return`
        var<workgroup> sub_a: array<${Wt.type.value}, ${ne}>;
        var<workgroup> inter_results: array<array<${Ut.type.value}, ${J}>, ${W}>;
        ${vt.declareVariables(...ir,Ut)}
        ${vt.mainStart([J,W,1])}
          let output_indices = ${Ut.offsetToIndices(`workgroup_index * ${W}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${he} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${ne};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${ne}; a_offset += 128)
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${Wt.getByIndices(`${Wt.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${Wt.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${he} + local_id.x;
            ${rr?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${rr.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${zt}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${zt}(8);`}
            let scale = ${Ht.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${mr.getByIndices(`${mr.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${t.blockSize/C};
            for (var i: u32 = 0; i < ${d}; i++) {
              ${(()=>{switch(C){case 1:return`
          let a_data0 = vec4<${zt}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${zt}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${zt}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${zt}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${C}-component is not supported.`)}})()}
              let b_value = ${d===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${zt}>(${Array.from({length:4},(Nt,wr)=>`${zt}(b_value_lower[${wr}]), ${zt}(b_value_upper[${wr}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${zt}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(Nt,wr)=>`dot(a_data${wr}, b_dequantized_values[${wr}])`).join(" + ")};
              word_offset += ${8/C};
            }
            workgroupBarrier();
          }

          if (local_idx < ${W}) {
            var output_value: ${Ut.type.value} = ${Ut.type.value}(0);
            for (var b = 0u; b < ${J}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${Ut.setByIndices(`${Ut.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`}}},Xd=(e,t)=>{Kd(e.inputs,t),t.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(Qd(e.inputs,t)):e.compute(ap(e.inputs,t))},Yd=e=>Le(e)}),kr=xe(()=>{Jt(),or(),dr(),Rs=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=2*e[0].dims.length===e[1].dims[0];if(e.length===4&&(t=2*e[3].dims[0]===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Jd=(e,t,r)=>{let s="";for(let i=t-1;i>=0;--i)s+=`
            k = i32(${e.indicesGet("indices",i)}) - ${jt("uniforms.pads",i,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${jt("uniforms.x_shape",i,t)})) {
              break;
            }
            offset += k * i32(${jt("uniforms.x_strides",i,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${s}
            value = x[offset];
          }
      `},Zd=(e,t,r)=>{let s="";for(let i=t-1;i>=0;--i)s+=`
                k = i32(${e.indicesGet("indices",i)}) - ${jt("uniforms.pads",i,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${jt("uniforms.x_shape",i,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${jt("uniforms.x_shape",i,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${jt("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},ec=(e,t,r)=>{let s="";for(let i=t-1;i>=0;--i)s+=`
                k = i32(${e.indicesGet("indices",i)}) - ${jt("uniforms.pads",i,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${jt("uniforms.x_shape",i,t)})) {
                  k = i32(${jt("uniforms.x_shape",i,t)}) - 1;
                }
                offset += k * i32(${jt("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},tc=(e,t,r)=>{let s="";for(let i=t-1;i>=0;--i)s+=`
                k = i32(${e.indicesGet("indices",i)}) - ${jt("uniforms.pads",i,r)};
                if (k < 0)  {
                  k += i32(${jt("uniforms.x_shape",i,t)}]);
                }
                if (k >= i32(${jt("uniforms.x_shape",i,t)})) {
                  k -= i32(${jt("uniforms.x_shape",i,t)});
                }
                offset += k * i32(${jt("uniforms.x_strides",i,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},rc=(e,t,r)=>{switch(r.mode){case 0:return Jd(e,t,r.pads.length);case 1:return Zd(e,t,r.pads.length);case 2:return ec(e,t,r.pads.length);case 3:return tc(e,t,r.pads.length);default:throw new Error("Invalid mode")}},nc=(e,t)=>{let r=ye.padShape(e[0].dims.slice(),t.pads),s=e[0].dims,i=[{type:12,data:ye.size(r)},{type:6,data:t.pads}],o=e.length>=3&&e[2].data;return t.mode===0&&i.push({type:o?e[2].dataType:1,data:t.value}),i.push(...Lt(e[0].dims,r)),{name:"Pad",shaderCache:{hint:`${t.mode}${o}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ye.size(r)/64)},programUniforms:i}),getShaderSource:a=>{let c=Et("output",e[0].dataType,r.length),h=rt("x",e[0].dataType,s.length),f=h.type.value,E=rc(c,s.length,t),C=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&C.push({name:"constant_value",type:o?f:"f32"}),`
            ${a.registerUniforms(C).declareVariables(h,c)}
            ${a.mainStart()}
            ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${c.offsetToIndices("global_idx")};

            var value = ${f}(0);
            ${E}
            output[global_idx] = value;
        }`}}},sc=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),s=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,i=e[0].dims.length,o=new Int32Array(2*i).fill(0);if(e.length>=4){let c=e[3].getBigInt64Array();for(let h=0;h<c.length;h++)o[Number(c[h])]=Number(r[h]),o[Number(c[h])+i]=Number(r[h+c.length])}else r.forEach((c,h)=>o[Number(h)]=Number(c));let a=[];return o.forEach(c=>a.push(c)),{mode:t.mode,value:s,pads:a}}return t},Mi=(e,t)=>{Rs(e.inputs);let r=sc(e.inputs,t);e.compute(nc(e.inputs,r),{inputs:[0]})}}),sr=xe(()=>{Ze(),Jt(),or(),dr(),Ti=e=>{if(b.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},oo=(e,t,r)=>{let s=t.format==="NHWC",i=e.dims.slice();s&&i.splice(1,0,i.pop());let o=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),c=t.strides.slice(),h=o?t.dilations.slice():[],f=t.pads.slice();Ot.adjustPoolAttributes(r,i,a,c,h,f);let E=Ot.computePoolOutputShape(r,i,c,h,a,f,t.autoPad),C=Object.assign({},t);o?Object.assign(C,{kernelShape:a,strides:c,pads:f,dilations:h,cacheKey:t.cacheKey}):Object.assign(C,{kernelShape:a,strides:c,pads:f,cacheKey:t.cacheKey});let d=E.slice();return d.push(d.splice(1,1)[0]),[C,s?d:E]},lo=(e,t)=>{let r=t.format==="NHWC",s=[{type:12,data:ye.size(e)},{type:12,data:ye.size(t.kernelShape)}],i=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let o=t.kernelShape[t.kernelShape.length-1],a=t.strides[t.strides.length-1],c=t.pads[t.pads.length/2-1],h=t.pads[t.pads.length-1],f=!!(c+h);s.push({type:12,data:o},{type:12,data:a},{type:12,data:c},{type:12,data:h}),i.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let E=!1;if(t.kernelShape.length===2){let C=t.kernelShape[t.kernelShape.length-2],d=t.strides[t.strides.length-2],D=t.pads[t.pads.length/2-2],W=t.pads[t.pads.length-2];E=!!(D+W),s.push({type:12,data:C},{type:12,data:d},{type:12,data:D},{type:12,data:W}),i.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[s,i,!0,f,E]}{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let o=ye.computeStrides(t.kernelShape);return s.push({type:12,data:o},{type:12,data:t.pads},{type:12,data:t.strides}),i.push({name:"kernelStrides",type:"u32",length:o.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length}),[s,i,!!t.pads.reduce((a,c)=>a+c),!1,!1]}},uo=(e,t,r,s,i,o,a,c,h,f,E,C)=>{let d=i.format==="NHWC",D=t.type.value,W=Et("output",t.type.tensor,s);if(i.kernelShape.length<=2){let J="",X="",ne="",he=r-(d?2:1);if(J=E?`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${he}] = indices[${he}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${he}] < 0 || xIndices[${he}]
                      >= uniforms.x_shape[${he}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${o}
                }`:`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${he}] = indices[${he}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${o}
                }`,i.kernelShape.length===2){let ke=r-(d?3:2);X=C?`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${ke}] = indices[${ke}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${ke}] < 0 || xIndices[${ke}] >= uniforms.x_shape[${ke}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${ke}] = indices[${ke}] * uniforms.sh - uniforms.phStart + j;
                `,ne=`
              }
            `}return`
            ${e.registerUniforms(h).declareVariables(t,W)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${W.offsetToIndices("global_idx")};
              var xIndices = ${W.offsetToIndices("global_idx")};

              var value = ${D}(${c});
              var pad = 0;
              ${X}
              ${J}
              ${ne}
              ${a}

              output[global_idx] = value;
            }`}{if(d)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let J=i.kernelShape.length,X=i.pads.length,ne="";return ne=f?`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${o}
              }`:`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${o}
            `,`
            ${e.registerUniforms(h).declareVariables(t,W)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${W.offsetToIndices("global_idx")};
              var xIndices = ${W.offsetToIndices("global_idx")};

              var offsets: array<u32, ${J}>;

              var value = ${D}(${c});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${J-1}u; j++) {
                  offsets[j] = offset / ${jt("uniforms.kernelStrides","j",J)};
                  offset -= offsets[j] * ${jt("uniforms.kernelStrides","j",J)};
                }
                offsets[${J-1}] = offset;

                isPad = false;
                for (var j = ${r-J}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${jt("uniforms.strides",`j - ${r-J}u`,J)}
                    + offsets[j - ${r-J}u] - ${jt("uniforms.pads","j - 2u",X)};
                  ${ne}
              }
              ${a}

              output[global_idx] = value;
            }`}},co=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,ic=e=>`${co(e)};${e.countIncludePad}`,po=e=>`${co(e)};${e.storageOrder};${e.dilations}`,ho=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),mo=(e,t,r,s)=>{let[i,o]=oo(t,s,r),a=rt("x",t.dataType,t.dims.length),c=a.type.value,h="";i.countIncludePad?h+=`value /= ${c}(uniforms.kernelSize);`:h+=`value /= ${c}(i32(uniforms.kernelSize) - pad);`;let[f,E,C,d,D]=lo(o,i);return f.push(...Lt(t.dims,o)),{name:e,shaderCache:{hint:`${s.cacheKey};${C};${d};${D}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(ye.size(o)/64)},programUniforms:f}),getShaderSource:W=>uo(W,a,t.dims.length,o.length,i,"value += x_val;",h,0,E,C,d,D)}},fo=e=>{let t=e.count_include_pad!==0,r=ho(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let s={countIncludePad:t,...r,cacheKey:""};return{...s,cacheKey:ic(s)}},ac=(e,t)=>{Ti(e.inputs),e.compute(mo("AveragePool",e.inputs[0],!1,t))},_o={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},go=e=>{let t=e.format;return{format:t,..._o,cacheKey:t}},oc=(e,t)=>{Ti(e.inputs),e.compute(mo("GlobalAveragePool",e.inputs[0],!0,t))},wo=(e,t,r,s)=>{let[i,o]=oo(t,s,r),a=rt("x",t.dataType,t.dims.length),[c,h,f,E,C]=lo(o,i);return c.push(...Lt(t.dims,o)),{name:e,shaderCache:{hint:`${s.cacheKey};${f};${E};${C}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(ye.size(o)/64)},programUniforms:c}),getShaderSource:d=>uo(d,a,t.dims.length,o.length,i,`
      value = max(x_val, value);
    `,"",t.dataType===10?-65504:-1e5,h,f,E,C)}},$i=(e,t)=>{Ti(e.inputs),e.compute(wo("MaxPool",e.inputs[0],!1,t))},lc=e=>{let t=e.storage_order,r=e.dilations,s=ho(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...s,cacheKey:""};return{...i,cacheKey:po(i)}},uc=e=>{let t=e.format;return{format:t,..._o,cacheKey:t}},dc=(e,t)=>{Ti(e.inputs),e.compute(wo("GlobalMaxPool",e.inputs[0],!0,t))}}),ur=xe(()=>{Jt(),or(),Qr(),dr(),cc=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((r,s)=>r===e[2].dims[s]).reduce((r,s)=>r&&s,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((i,o)=>o===t.axis||i===e[0].dims[o]).reduce((i,o)=>i&&o,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let r=e[0].dims[t.axis],s=e[1].dims[t.axis];if(t.blockSize<Math.ceil(r/s)||t.blockSize>Math.ceil(r/(s-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},yo=(e,t)=>{let r=ye.normalizeAxis(t.axis,e[0].dims.length),s=e[0].dataType,i=s===3,o=e[0].dims,a=e[1].dataType,c=ye.size(o),h=s===3||s===2,f=h?[Math.ceil(ye.size(e[0].dims)/4)]:e[0].dims,E=e[1].dims,C=e.length>2?e[2]:void 0,d=C?h?[Math.ceil(ye.size(C.dims)/4)]:C.dims:void 0,D=E.length===0||E.length===1&&E[0]===1,W=D===!1&&E.length===1,J=gr(c),X=D&&(!h||J===4),ne=X?J:1,he=X&&!h?J:1,ke=rt("input",h?12:s,f.length,he),Fe=rt("scale",a,E.length),ze=C?rt("zero_point",h?12:s,d.length):void 0,Ve=Et("output",a,o.length,ne),pt=[ke,Fe];ze&&pt.push(ze);let vt=[f,E];C&&vt.push(d);let qt=[{type:12,data:c/ne},{type:12,data:r},{type:12,data:t.blockSize},...Lt(...vt,o)];return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:ze?["rank","rank","rank"]:["rank","rank"]},getShaderSource:Wt=>`
      ${Wt.registerUniforms([{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...pt,Ve)}
      ${Wt.mainStart()}
          ${Wt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${Ve.offsetToIndices("global_idx")};

          // Set input x
          ${h?`
            let input = ${ke.getByOffset("global_idx / 4")};
            let x_vec = ${i?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${ne===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${ke.getByOffset("global_idx")};`};

          // Set scale input
          ${D?`let scale_value= ${Fe.getByOffset("0")}`:W?`
            let scale_index = ${Ve.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${Fe.getByOffset("scale_index")};`:`
            var scale_indices: ${Fe.type.indices} = output_indices;
            let index = ${Fe.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${Fe.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${Fe.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${ze?D?h?`
                let zero_point_input = ${ze.getByOffset("0")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${ze.getByOffset("0")}`:W?h?`
                let zero_point_index = ${Ve.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${ze.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${Ve.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${ze.getByOffset("zero_point_index")};`:h?`
                let zero_point_offset = ${Fe.indicesToOffset("scale_indices")};
                let zero_point_input = ${ze.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${i?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${ze.getByIndices("scale_indices")};`:`let zero_point_value = ${h?i?"i32":"u32":ke.type.value}(0);`};
      // Compute and write output
      ${Ve.setByOffset("global_idx",`${Ve.type.value}(x_value - zero_point_value) * scale_value`)};
      }`,getRunData:()=>({outputs:[{dims:o,dataType:a}],dispatchGroup:{x:Math.ceil(c/ne/64),y:1,z:1},programUniforms:qt})}},Ei=(e,t)=>{cc(e.inputs,t),e.compute(yo(e.inputs,t))},op=e=>Le({axis:e.axis,blockSize:e.blockSize})}),cr=xe(()=>{Ze(),Jt(),dr(),pc=(e,t,r)=>{if(e===t||e<t&&r<0||e>t&&r>0)throw new Error("Range these inputs' contents are invalid.")},hc=(e,t,r,s)=>{let i=Math.abs(Math.ceil((t-e)/r)),o=[i],a=i,c=[{type:12,data:a},{type:s,data:e},{type:s,data:r},...Lt(o)];return{name:"Range",shaderCache:{hint:`${s}`},getShaderSource:h=>{let f=Et("output",s,o.length),E=f.type.value,C=[{name:"outputSize",type:"u32"},{name:"start",type:E},{name:"delta",type:E}];return`
        ${h.registerUniforms(C).declareVariables(f)}
        ${h.mainStart()}
        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${E}(global_idx) * uniforms.delta;
      }`},getRunData:()=>({outputs:[{dims:o,dataType:s}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:c})}},bo=e=>{let t=0,r=0,s=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],s=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],s=e.inputs[2].getFloat32Array()[0]),b.webgpu.validateInputContent&&pc(t,r,s),e.compute(hc(t,r,s,e.inputs[0].dataType),{inputs:[]})}}),Mr=xe(()=>{Jt(),or(),Qr(),dr(),mc=(e,t,r,s)=>{if(e!=="none"&&s!=="i32"&&s!=="u32"&&s!=="f32")throw new Error(`Input ${s} is not supported with reduction ${e}.`);let i=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,o=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${t}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${t}=${r};`;case"add":return s==="i32"||s==="u32"?`atomicAdd(&${t}, bitcast<${s}>(${r}));`:`
              ${i}bitcast<${s}>(oldValue) + (${r})${o}`;case"max":return s==="i32"||s==="u32"?`atomicMax(&${t}, bitcast<${s}>(${r}));`:`
                ${i}max(bitcast<f32>(oldValue), (${r}))${o}`;case"min":return s==="i32"||s==="u32"?`atomicMin(&${t}, bitcast<${s}>(${r}));`:`${i}min(bitcast<${s}>(oldValue), (${r}))${o}`;case"mul":return`${i}(bitcast<${s}>(oldValue) * (${r}))${o}`;default:throw new Error(`Reduction ${e} is not supported.`)}},fc=(e,t)=>{let r=e[0].dims,s=e[1].dims,i=r,o=Math.ceil(ye.size(s)/1),a=s[s.length-1],c=ye.sizeFromDimension(r,a),h=[{type:12,data:o},{type:12,data:a},{type:12,data:c},...Lt(e[1].dims,e[2].dims,i)];return{name:"ScatterND",shaderCache:{hint:`${t.cacheKey}_${t.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:h}),getShaderSource:f=>{let E=rt("indices",e[1].dataType,e[1].dims.length),C=rt("updates",e[2].dataType,e[2].dims.length,1),d=t.reduction!=="none"&&t.reduction!==""?Ln("output",e[0].dataType,i.length):Et("output",e[0].dataType,i.length,1);return`
      ${f.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(E,C,d)}
      ${f.mainStart()}
        ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var data_offset = 0u;
  let indices_start = uniforms.last_index_dimension * global_idx;
  let indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${e[0].dims.length===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[i - indices_start];
    let dim_value = uniforms.output_shape[i - indices_start + uniforms.last_index_dimension];`}
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));
  }

  for (var i = 0u; i < uniforms.num_updates_elements; i++) {
    let value = updates[uniforms.num_updates_elements * global_idx + i];
    ${mc(t.reduction,"output[data_offset + i]","value",d.type.value)}
  }

      }`}}},vo=e=>Le({reduction:e.reduction}),_c=(e,t)=>{e.compute(fc(e.inputs,t),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),Br=xe(()=>{Jt(),or(),Qr(),dr(),gc=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},xo=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let s=new Array(r).fill(1);return t.forEach((i,o)=>s[i]=e[o]),s},lp=(e,t,r,s,i,o)=>{let[a,c,h]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],f=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(E=>o.push(E));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(c>0&&e.length>c&&e[c].dims.length===1&&e[c].dims[0]>0){if(e[c].getFloat32Array().forEach(E=>s.push(E)),s.length!==0&&s.length!==f&&r>=18&&s.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");gc(s,t),t.axes.length>0&&xo(s,t.axes,f).forEach((E,C)=>s[C]=E)}if(h>0&&e.length>h&&e[h].dims.length===1&&e[h].dims[0]>0&&(e[h].getBigInt64Array().forEach(E=>i.push(Number(E))),i.length!==0&&i.length!==f&&r>=18&&i.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(s.length!==0&&s.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(i.length!==0&&i.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof s<"u"&&typeof i<"u"&&s.length>0&&i.length>f)throw new Error("Resize requires only of scales or sizes to be specified")},wc=(e,t,r,s)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${e}) * (${t});
  let whole = ${s}(big / (${r}));
  let fract = ${s}(big % (${r})) / ${s}(${r});
  return whole + fract;
`,ko=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${t}(xResized) / ${t}(xScale);
          } else {
            ${wc("xResized","lengthOriginal","lengthResized",t)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${wc("xResized","lengthOriginal - 1","lengthResized - 1",t)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Mo=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",yc=(e,t,r)=>{let s=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?s:e.slice();return t.length>0?(t.forEach((o,a)=>{s[o]=i[a],s[a+r]=i[t.length+a]}),s):i},bc=(e,t,r,s)=>{let i=[];if(r.length>0)if(s.length>0){if(e.forEach(o=>i.push(o)),Math.max(...s)>e.length)throw new Error("axes is out of bound");s.forEach((o,a)=>i[o]=r[a])}else r.forEach(o=>i.push(o));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((o,a)=>Math.round(o*t[a]))}return i},To=(e,t,r)=>{let s=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(o=>t[o]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(o=>t[o]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(o=>t[o]=s),r.axes.forEach(o=>i[o]=Math.round(e[o]*t[o]))):(t.fill(s,0,t.length),i.forEach((o,a)=>i[a]=Math.round(o*t[a]))),i},vc=(e,t,r,s,i)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {
      var original_indices: array<${e.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${jt("uniforms.scales","i",s)};
        var roi_low = ${jt("uniforms.roi","i",i)};
        var roi_hi = ${jt("uniforms.roi",`i + ${t.length}`,i)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${jt("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${jt("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,xc=(e,t,r,s,i,o,a)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${jt("uniforms.scales","i",i)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${jt("uniforms.roi","i",o)};
          var roi_hi = ${jt("uniforms.roi",`i + ${r.length}`,o)};
          var input_shape_i = ${jt("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${jt("uniforms.output_shape","i",s.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,$o=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${jt("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,Eo=(e,t,r,s)=>e.rank>s?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",r,"batch")};
`:"",kc=(e,t,r,s,i)=>{let[o,a,c,h]=r.length===2?[-1,0,1,-1]:[0,2,3,1],f=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${f} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",a,`max(0, min(row, ${r[a]} - 1))`)};
      ${e.indicesSet("input_indices",c,`max(0, min(col, ${r[c]} - 1))`)};
      ${Eo(e,h,o,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${f} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${f} = originalIndices[${a}];
      var col:${f} = originalIndices[${c}];
      ${s?`if (row < 0 || row > (${r[a]} - 1) || col < 0 || col > (${r[c]} - 1)) {
        return ${i};
      }`:""};
      row = max(0, min(row, ${r[a]} - 1));
      col = max(0, min(col, ${r[c]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${h}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${o}])`:"0"};
      var x11: ${f} = getInputValue(batch, channel, row1, col1);
      var x12: ${f} = getInputValue(batch, channel, row1, col2);
      var x21: ${f} = getInputValue(batch, channel, row2, col1);
      var x22: ${f} = getInputValue(batch, channel, row2, col2);
      var dx1: ${f} = abs(row - ${f}(row1));
      var dx2: ${f} = abs(${f}(row2) - row);
      var dy1: ${f} = abs(col - ${f}(col1));
      var dy2: ${f} = abs(${f}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},So=(e,t,r,s,i,o,a,c,h,f)=>{let E=r.length===2,[C,d]=E?[0,1]:[2,3],D=e.type.value,W=J=>{let X=J===C?"row":"col";return`
      fn ${X}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${D} {
        var output_index = ${t.indicesGet("output_indices",J)};
        var originalIdx: ${D} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[J]},
        ${s[J]}, ${r[J]}, ${o[J]}, ${o[J]} + ${r.length});
        var fractOriginalIdx: ${D} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${c} && (originalIdx < 0 || originalIdx > (${r[J]} - 1))) {
          return ${h};
        }
        var data: array<${D}, 4> = array<${D}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${X}: ${D} = originalIdx + ${D}(i);
          if (${X} < 0 || ${X} >= ${r[J]}) {
            ${f?`coefs[i + 1] = 0.0;
                        continue;`:c?`return ${h};`:`${X} = max(0, min(${X}, ${r[J]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",J,`u32(${X})`)};
          data[i + 1] = ${J===C?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${W(C)};
    ${W(d)};
  fn getCubicInterpolationCoefs(s: ${D}) -> array<${D}, 4> {
    var absS = abs(s);
    var coeffs: array<${D}, 4> = array<${D}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${D} = 1.0 - absS;
    var twoMinusAbsS: ${D} = 2.0 - absS;
    var onePlusAbsS: ${D} = 1.0 + absS;
    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};
    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;
    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${D}, 4>, coefs: array<${D}, 4>) -> ${D} {
    var coefsSum: ${D} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${D} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},Mc=(e,t,r,s,i)=>{let[o,a,c,h,f]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],E=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${E} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",a,`max(0, min(depth, ${r[a]} - 1))`)};
      ${e.indicesSet("input_indices",c,`max(0, min(height, ${r[c]} - 1))`)};
      ${e.indicesSet("input_indices",h,`max(0, min(width, ${r[h]} - 1))`)};
      ${Eo(e,f,o,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${E} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${E} = originalIndices[${a}];
      var height:${E} = originalIndices[${c}];
      var width:${E} = originalIndices[${h}];
      ${s?`if (depth < 0 || depth > (${r[a]} - 1) || height < 0 || height > (${r[c]} - 1) || width < 0 || (width > ${r[h]} - 1)) {
      return ${i};
        }`:""};

    depth = max(0, min(depth, ${r[a]} - 1));
      height = max(0, min(height, ${r[c]} - 1));
      width = max(0, min(width, ${r[h]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${f}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${o}])`:"0"};

      var x111: ${E} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${E} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${E} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${E} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${E} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${E} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${E} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${E} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${E} = abs(depth - ${E}(depth1));
      var dx2: ${E} = abs(${E}(depth2) - depth);
      var dy1: ${E} = abs(height - ${E}(height1));
      var dy2: ${E} = abs(${E}(height2) - height);
      var dz1: ${E} = abs(width - ${E}(width1));
      var dz2: ${E} = abs(${E}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},Tc=(e,t,r,s,i,o)=>{let a=e.dims,c=yc(o,t.axes,a.length),h=bc(a,s,i,t.axes),f=s.slice();s.length===0&&(f=a.map((ne,he)=>ne===0?1:h[he]/ne),t.keepAspectRatioPolicy!=="stretch"&&(h=To(a,f,t)));let E=Et("output",e.dataType,h.length),C=rt("input",e.dataType,a.length),d=ye.size(h),D=a.length===h.length&&a.every((ne,he)=>ne===h[he]),W=t.coordinateTransformMode==="tf_crop_and_resize",J=t.extrapolationValue,X=C.type.value;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${f.length>0?t.mode==="cubic"?f:f.length:""}|${i.length>0?i:""}|${c.length>0?c:""}|${D}|${t.mode==="nearest"?a.length:a}`,inputDependencies:["rank"]},getShaderSource:ne=>`
      ${D?"":`
      ${ko(t.coordinateTransformMode,X)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${$o(C,a)};
              ${Mo(t.nearestMode,r,X)};
              ${xc(C,E,a,h,f.length,c.length,W)};
              `;case"linear":return`
              ${vc(E,a,h,f.length,c.length)};
              ${(()=>{if(a.length===2||a.length===4)return`${kc(C,E,a,W,J)}`;if(a.length===3||a.length===5)return`${Mc(C,E,a,W,J)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(a.length===2||a.length===4)return`${So(C,E,a,h,f,c,t.cubicCoeffA,W,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${ne.registerUniform("output_size","u32").registerUniform("scales","f32",f.length).registerUniform("roi","f32",c.length).declareVariables(C,E)}
      ${ne.mainStart()}
        ${ne.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${D?"output[global_idx] = input[global_idx];":`
        let output_indices = ${E.offsetToIndices("global_idx")};
        var input_indices: ${C.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${C.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`,getRunData:()=>({outputs:[{dims:h,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},{type:1,data:f},{type:1,data:c},...Lt(a,h)]})}},$c=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Ec=(e,t)=>{let r=[],s=[],i=[],o=$c(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");lp(e.inputs,t,o,r,s,i),e.compute(Tc(e.inputs[0],t,o,r,s,i),{inputs:[0]})},Sc=e=>{let t=e.antialias,r=e.axes,s=e.coordinateTransformMode,i=e.cubicCoeffA,o=e.excludeOutside!==0,a=e.extrapolationValue,c=e.keepAspectRatioPolicy,h=e.mode,f=e.nearestMode===""?"simple":e.nearestMode;return Le({antialias:t,axes:r,coordinateTransformMode:s,cubicCoeffA:i,excludeOutside:o,extrapolationValue:a,keepAspectRatioPolicy:c,mode:h,nearestMode:f})}}),Vr=xe(()=>{Jt(),or(),Qr(),dr(),Cc=(e,t)=>{let[r,s,i,o]=e,{numHeads:a,rotaryEmbeddingDim:c}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!ye.areEqual(s.dims,[])&&!ye.areEqual(s.dims,[1])&&s.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${s.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(o.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${o.dims.length}`);if(!ye.areEqual(i.dims,o.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(c>0&&a===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let h=r.dims[0],f=r.dims[r.dims.length-2],E=i.dims[0],C=ye.sizeFromDimension(r.dims,1)/f,d=c===0?2*i.dims[1]:C/a;if(c>d)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(s.dims.length===2){if(h!==s.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${s.dims[0]}`);if(f!==s.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${s.dims[1]}`)}if(d/2!==i.dims[1]&&c/2!==i.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(f>E)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Pc=(e,t)=>{let{interleaved:r,numHeads:s,rotaryEmbeddingDim:i,scale:o}=t,a=e[0].dims[0],c=ye.sizeFromDimension(e[0].dims,1),h=e[0].dims[e[0].dims.length-2],f=c/h,E=e[2].dims[1],C=i===0?2*E:f/s,d=new Array(a,h,f/C,C-E),D=ye.computeStrides(d),W=[{type:1,data:o},{type:12,data:d},{type:12,data:D},...e[0].dims.length===3?new Array({type:12,data:[c,f,C,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[c,C,h*C,1]}):[],...Lt(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)];return{name:"RotaryEmbedding",shaderCache:{hint:Le({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:J=>{let X=rt("input",e[0].dataType,e[0].dims.length),ne=rt("position_ids",e[1].dataType,e[1].dims.length),he=rt("cos_cache",e[2].dataType,e[2].dims.length),ke=rt("sin_cache",e[3].dataType,e[3].dims.length),Fe=Et("output",e[0].dataType,e[0].dims.length);return J.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:d.length},{name:"global_strides",type:"u32",length:D.length},{name:"input_output_strides",type:"u32",length:D.length}]),`
        ${J.declareVariables(X,ne,he,ke,Fe)}

        ${J.mainStart(fr)}
          let half_rotary_emb_dim = uniforms.${he.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${J.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${ne.broadcastedIndicesToOffset("bsnh.xy",Et("",ne.type.tensor,2))};
            let position_id =
                u32(${ne.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});
            let j = i + select(half_rotary_emb_dim, 1, ${r});
            let re = ${X.getByOffset("i")} * ${he.get("position_id","bsnh[3]")} -
                ${X.getByOffset("j")} * ${ke.get("position_id","bsnh[3]")};
            ${Fe.setByOffset("i","re")}
            let im = ${X.getByOffset("i")} * ${ke.get("position_id","bsnh[3]")} +
                ${X.getByOffset("j")} * ${he.get("position_id","bsnh[3]")};
            ${Fe.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${Fe.setByOffset("k",X.getByOffset("k"))}
          }
        }`},getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ye.size(d)/fr)},programUniforms:W})}},Ac=(e,t)=>{Cc(e.inputs,t),e.compute(Pc(e.inputs,t))}}),Pr=xe(()=>{Jt(),or(),dr(),Ic=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],s=e[2];if(t.dataType!==r.dataType||t.dataType!==s.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],o=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==o)throw new Error("Skip must have the same sequence length as input");if(s.dims.length!==1)throw new Error("Gamma must be 1D");if(s.dims[s.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let a=e[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let a=e[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},Co=(e,t,r,s)=>{let i=t.simplified,o=e[0].dims,a=ye.size(o),c=o,h=a,f=o.slice(-1)[0],E=s?o.slice(0,-1).concat(1):[],C=!i&&e.length>3,d=e.length>4,D=s&&r>1,W=s&&r>2,J=r>3,X=64,ne=gr(f),he=[{type:12,data:h},{type:12,data:ne},{type:12,data:f},{type:1,data:t.epsilon}],ke=[{dims:c,dataType:e[0].dataType}];return r>1&&ke.push({dims:E,dataType:1}),r>2&&ke.push({dims:E,dataType:1}),r>3&&ke.push({dims:o,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${ne};${D};${W};${J}`,inputDependencies:e.map((Fe,ze)=>"type")},getShaderSource:Fe=>{let ze=[rt("x",e[0].dataType,e[0].dims,ne),rt("skip",e[1].dataType,e[1].dims,ne),rt("gamma",e[2].dataType,e[2].dims,ne)];C&&ze.push(rt("beta",e[3].dataType,e[3].dims,ne)),d&&ze.push(rt("bias",e[4].dataType,e[4].dims,ne)),ze.push(Et("output",e[0].dataType,c,ne)),D&&ze.push(Et("mean_output",1,E)),W&&ze.push(Et("inv_std_output",1,E)),J&&ze.push(Et("input_skip_bias_sum",e[0].dataType,c,ne));let Ve=vr(e[0].dataType),pt=vr(1,ne);return`

      ${Fe.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...ze)}
      var<workgroup> sum_shared : array<${pt}, 64>;
      var<workgroup> sum_squared_shared : array<${pt}, 64>;

      ${Fe.mainStart([X,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / 64;

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / 64;
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == 63) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${d?"bias[offset1d + i]":Ve+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${J?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Fr(Ve,ne,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = 64;
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Hr("sum",ne)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Hr("square_sum",ne)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);
        ${D?"mean_output[global_idx] = mean;":""}
        ${W?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${i?"":`- ${Ve}(mean)`}) *
            ${Ve}(inv_std_dev) * gamma[offset1d + i]
            ${C?"+ beta[offset1d + i]":""};
        }
      }`},getRunData:()=>({outputs:ke,dispatchGroup:{x:Math.ceil(h/f)},programUniforms:he})}},Fc=(e,t)=>{Ic(e.inputs);let r=[0];e.outputCount>1&&r.push(-3),e.outputCount>2&&r.push(-3),e.outputCount>3&&r.push(3),e.compute(Co(e.inputs,t,e.outputCount,!1),{outputs:r})}}),dn=xe(()=>{Jt(),or(),Qr(),dr(),zc=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,s)=>{if(e[s+1].dataType!==6&&e[s+1].dataType!==7)throw new Error(`Input ${s} must be an array of int32 or int64`)})},Ds=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(s=>r.push(Number(s)));else{if(e[t].dataType!==6)throw new Error(`Input ${t} must be an array of int32 or int64`);e[t].getInt32Array().forEach(s=>r.push(Number(s)))}return r},Oc=(e,t)=>{if(e.length>1){let r=Ds(e,1),s=Ds(e,2),i=Ds(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),Le({starts:r,ends:s,axes:i})}return t},Po=(e,t,r,s,i)=>{let o=e;return e<0&&(o+=r[s[t]]),i[t]<0?Math.max(0,Math.min(o,r[s[t]]-1)):Math.max(0,Math.min(o,r[s[t]]))},Sr=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${jt("uniforms.input_shape","i",r.length)};
            let steps_i = ${jt("uniforms.steps","i",r.length)};
            let signs_i = ${jt("uniforms.signs","i",r.length)};
            let starts_i = ${jt("uniforms.starts","i",r.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,up=(e,t)=>{let r=e[0].dims,s=ye.size(r),i=t.axes.length>0?ye.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],o=Ds(e,4);o.forEach(X=>X!==0||(()=>{throw new Error("step cannot be 0")})),o.length===0&&(o=Array(i.length).fill(1));let a=t.starts.map((X,ne)=>Po(X,ne,r,i,o)),c=t.ends.map((X,ne)=>Po(X,ne,r,i,o));if(i.length!==a.length||i.length!==c.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let X=0;X<r.length;++X)i.includes(X)||(a.splice(X,0,0),c.splice(X,0,r[X]),o.splice(X,0,1));let h=o.map(X=>Math.sign(X));o.forEach((X,ne,he)=>{if(X<0){let ke=(c[ne]-a[ne])/X,Fe=a[ne],ze=Fe+ke*o[ne];a[ne]=ze,c[ne]=Fe,he[ne]=-X}});let f=r.slice(0);i.forEach((X,ne)=>{f[X]=Math.ceil((c[X]-a[X])/o[X])});let E={dims:f,dataType:e[0].dataType},C=Et("output",e[0].dataType,f.length),d=rt("input",e[0].dataType,e[0].dims.length),D=ye.size(f),W=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:h.length},{name:"steps",type:"u32",length:o.length}],J=[{type:12,data:D},{type:12,data:a},{type:6,data:h},{type:12,data:o},...Lt(e[0].dims,f)];return{name:"Slice",shaderCache:{hint:`${h.length}_${a.length}_${o.length}`,inputDependencies:["rank"]},getShaderSource:X=>`
      ${X.registerUniforms(W).declareVariables(d,C)}
        ${Sr(d,C,r)}
        ${X.mainStart()}
          ${X.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${C.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${C.setByOffset("global_idx",d.getByIndices("input_indices"))}
      }`,getRunData:()=>({outputs:[E],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:J})}},dp=(e,t)=>{zc(e.inputs,t);let r=Oc(e.inputs,t);e.compute(up(e.inputs,r),{inputs:[0]})},cp=e=>{let t=e.starts,r=e.ends,s=e.axes;return Le({starts:t,ends:r,axes:s})}}),Jr=xe(()=>{Jt(),or(),Qr(),cs(),dr(),Ao=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Lc=(e,t)=>{let r,s=e.inputs[0],i=s.dims,o=ye.size(i),a=i.length,c=ye.normalizeAxis(t.axis,a),h=c<i.length-1,f=[];h?(f=Array.from({length:a},(ze,Ve)=>Ve),f[c]=a-1,f[a-1]=c,r=e.compute(Pn(s,f),{inputs:[s],outputs:[-1]})[0]):r=s;let E=r.dims,C=E[a-1],d=o/C,D=gr(C),W=C/D,J=64;d===1&&(J=256);let X=rt("x",r.dataType,r.dims,D),ne=Et("result",r.dataType,r.dims,D),he=X.type.value,ke=vr(r.dataType)==="f32"?`var threadMax = ${he}(-3.402823e+38f);`:`var threadMax = ${he}(-65504.0h);`,Fe=e.compute({name:"Softmax",shaderCache:{hint:`${D};${J}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:E,dataType:r.dataType}],dispatchGroup:{x:d},programUniforms:[{type:6,data:W}]}),getShaderSource:ze=>`
      var<workgroup> rowMaxShared : ${he};
      var<workgroup> rowSumShared : ${he};
      var<workgroup> threadShared : array<${he}, ${J}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${he} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${he}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${ze.registerUniform("packedCols","i32").declareVariables(X,ne)}
      ${ze.mainStart(J)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${J};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${ke}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${he}(${((Ve,pt)=>pt===4?`max(max(${Ve}.x, ${Ve}.y), max(${Ve}.z, ${Ve}.w))`:pt===2?`max(${Ve}.x, ${Ve}.y)`:pt===3?`max(max(${Ve}.x, ${Ve}.y), ${Ve}.z)`:Ve)("threadShared[0]",D)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${he}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${he}(${Hr("threadShared[0]",D)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`},{inputs:[r],outputs:[h?-1:0]})[0];h&&e.compute(Pn(Fe,f),{inputs:[Fe]})},Nc=(e,t)=>{Ao(e.inputs),Lc(e,t)},Bc=e=>Le({axis:e.axis})}),Ar=xe(()=>{Jt(),or(),dr(),Io=e=>Array.from(e.getBigInt64Array(),Number),Fo=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Io(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},zo=(e,t)=>{let r=[];for(let s=0;s<e.length;++s)r.push(e[s]*t[s]);return r},pp=(e,t)=>{let r=e[0].dims,s=t??Io(e[1]),i=zo(r,s),o=ye.size(i),a=e[0].dataType,c=rt("input",a,r.length),h=Et("output",a,i.length);return{name:"Tile",shaderCache:{hint:`${s}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},...Lt(e[0].dims,i)]}),getShaderSource:f=>`
      const inputShape = ${c.indices(...r)};
      ${f.registerUniform("output_size","u32").declareVariables(c,h)}
      ${f.mainStart()}
      ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${h.offsetToIndices("global_idx")};
      var input_indices: ${c.type.indices};
      for (var i = 0; i < ${r.length}; i++) {
        let input_dim_i = ${c.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${h.indicesGet("output_indices","i")}  % input_dim_i;

        ${c.indicesSet("input_indices","i","input_dim_value")}
      }
      ${h.setByOffset("global_idx",c.getByIndices("input_indices"))}
    }`}},Rc=e=>{Fo(e.inputs),e.compute(pp(e.inputs),{inputs:[0]})}}),cn=xe(()=>{Jt(),or(),dr(),Dc=(e,t,r,s,i)=>{let o,a=Et("output_data",i,r.length,4),c=rt("a_data",t[1].dataType,t[1].dims.length,4),h=rt("b_data",t[2].dataType,t[2].dims.length,4),f=rt("c_data",t[0].dataType,t[0].dims.length,4),E=(C,d,D)=>`select(${d}, ${C}, ${D})`;if(s){let C=(d,D,W="")=>{let J=`a_data[index_a${D}][component_a${D}]`,X=`b_data[index_b${D}][component_b${D}]`,ne=`bool(c_data[index_c${D}] & (0xffu << (component_c${D} * 8)))`;return`
            let output_indices${D} = ${a.offsetToIndices(`global_idx * 4u + ${D}u`)};
            let offset_a${D} = ${c.broadcastedIndicesToOffset(`output_indices${D}`,a)};
            let offset_b${D} = ${h.broadcastedIndicesToOffset(`output_indices${D}`,a)};
            let offset_c${D} = ${f.broadcastedIndicesToOffset(`output_indices${D}`,a)};
            let index_a${D} = offset_a${D} / 4u;
            let index_b${D} = offset_b${D} / 4u;
            let index_c${D} = offset_c${D} / 4u;
            let component_a${D} = offset_a${D} % 4u;
            let component_b${D} = offset_b${D} % 4u;
            let component_c${D} = offset_c${D} % 4u;
            ${d}[${D}] = ${W}(${E(J,X,ne)});
          `};o=i===9?`
            var data = vec4<u32>(0);
            ${C("data",0,"u32")}
            ${C("data",1,"u32")}
            ${C("data",2,"u32")}
            ${C("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${C("output_data[global_idx]",0)}
            ${C("output_data[global_idx]",1)}
            ${C("output_data[global_idx]",2)}
            ${C("output_data[global_idx]",3)}
          `}else o=a.setByOffset("global_idx",E(c.getByOffset("global_idx"),h.getByOffset("global_idx"),f.getByOffset("global_idx")));return`
        ${e.registerUniform("vec_size","u32").declareVariables(f,c,h,a)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${o}
      }`},Oo=e=>{let t=e[1].dims,r=e[2].dims,s=e[0].dims,i=e[1].dataType,o=!(ye.areEqual(t,r)&&ye.areEqual(r,s)),a=t,c=ye.size(t);if(o){let f=Mt.calcShape(Mt.calcShape(t,r,!1),s,!1);if(!f)throw new Error("Can't perform where op on the given tensors");a=f,c=ye.size(a)}let h=Math.ceil(c/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:f=>Dc(f,e,a,o,i),getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:h},...Lt(s,t,r,a)]})}},hp=e=>{e.compute(Oo(e.inputs))}}),Xn=xe(()=>{vp(),Go(),xp(),kp(),Mp(),Tp(),$p(),Cp(),mn(),vn(),Us(),Zp(),Pp(),Ap(),w(),P(),Q(),Pe(),Xe(),Ye(),Tt(),bt(),Pt(),Vt(),Zt(),st(),kr(),sr(),ur(),cr(),Mr(),Vo(),Br(),Vr(),Pr(),dn(),Jr(),xt(),Ar(),cs(),qo(),cn(),mp=new Map([["Abs",[na]],["Acos",[Hl]],["Acosh",[Kl]],["Add",[xu]],["ArgMax",[Ll,li]],["ArgMin",[Ol,li]],["Asin",[sa]],["Asinh",[Ql]],["Atan",[Xl]],["Atanh",[ia]],["Attention",[jl]],["AveragePool",[ac,fo]],["BatchNormalization",[ta]],["BiasAdd",[ra]],["BiasSplitGelu",[bu]],["Cast",[Jl,Yl]],["Ceil",[eu]],["Clip",[Zl]],["Concat",[Au,Iu]],["Conv",[Oa,Fa]],["ConvTranspose",[Xu,Hu]],["Cos",[oa]],["Cosh",[tu]],["CumSum",[Da,Ju]],["DepthToSpace",[td,Ua]],["DequantizeLinear",[Ei,op]],["Div",[wa]],["Einsum",[Wa,id]],["Elu",[la,Qs]],["Equal",[ku]],["Erf",[ru]],["Exp",[ua]],["Expand",[ld]],["FastGelu",[dd]],["Floor",[nu]],["FusedConv",[Oa,Fa]],["Gather",[hd,Ka]],["GatherElements",[vd,Ya]],["GatherBlockQuantized",[wd,Xa]],["GatherND",[Qa,fd]],["Gelu",[su]],["Gemm",[Md,kd]],["GlobalAveragePool",[oc,go]],["GlobalMaxPool",[dc,uc]],["Greater",[$u]],["GreaterOrEqual",[Eu]],["GridSample",[Ad,eo]],["GroupQueryAttention",[jd]],["HardSigmoid",[uu,pa]],["InstanceNormalization",[Vd]],["LayerNormalization",[ki]],["LeakyRelu",[da,Qs]],["Less",[ba]],["LessOrEqual",[Su]],["Log",[fa]],["MatMul",[Hd]],["MatMulNBits",[Xd,Yd]],["MaxPool",[$i,lc]],["Mul",[Mu]],["MultiHeadAttention",[zd,to]],["Neg",[au]],["Not",[iu]],["Pad",[Mi]],["Pow",[ya]],["QuickGelu",[_a,Qs]],["Range",[bo]],["Reciprocal",[ca]],["ReduceMin",[Al]],["ReduceMean",[Sl]],["ReduceMax",[Pl]],["ReduceSum",[Fl]],["ReduceProd",[Il]],["ReduceL1",[ip]],["ReduceL2",[Cl]],["ReduceLogSum",[oi]],["ReduceLogSumExp",[Yi]],["ReduceSumSquare",[zl]],["Relu",[ou]],["Resize",[Ec,Sc]],["RotaryEmbedding",[Ac]],["ScatterND",[_c,vo]],["Sigmoid",[lu]],["Sin",[du]],["Sinh",[ha]],["Slice",[dp,cp]],["SkipLayerNormalization",[Fc]],["Split",[Bd,Rd]],["Sqrt",[cu]],["Softmax",[Nc,Bc]],["Sub",[Tu]],["Tan",[pu]],["Tanh",[hu]],["ThresholdedRelu",[fu,Qs]],["Tile",[Rc]],["Transpose",[sl,il]],["Where",[hp]]])}),Cr=xe(()=>{Ze(),ts(),dr(),jc=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,r,s,i){Se(e.programInfo.name);let o=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let c=[];for(let f of t)c.push({binding:c.length,resource:{buffer:f.buffer}});for(let f of r)c.push({binding:c.length,resource:{buffer:f.buffer}});i&&c.push({binding:c.length,resource:i});let h=o.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:c,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let f={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:h,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(f)}a.setPipeline(e.computePipeline),a.setBindGroup(0,h),a.dispatchWorkgroups(...s),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Re(e.programInfo.name)}dispose(){}build(e,t){Se(e.name);let r=this.backend.device,s=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"},{feature:"subgroups-f16",extension:"subgroups_f16"}].forEach(f=>{r.features.has(f.feature)&&s.push(`enable ${f.extension};`)});let i=Kr(t,this.backend.device.limits),o=e.getShaderSource(i),a=`${s.join(`
`)}
${i.additionalImplementations}
${o}`,c=r.createShaderModule({code:a,label:e.name});wt("verbose",()=>`[WebGPU] ${e.name} shader code: ${a}`);let h=r.createComputePipeline({compute:{module:c,entryPoint:"main"},layout:"auto",label:e.name});return Re(e.name),{programInfo:e,computePipeline:h,uniformVariablesInfo:i.variablesInfo}}normalizeDispatchGroupSize(e){let t=typeof e=="number"?e:e.x,r=typeof e=="number"?1:e.y||1,s=typeof e=="number"?1:e.z||1,i=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=i&&r<=i&&s<=i)return[t,r,s];let o=t*r*s,a=Math.ceil(Math.sqrt(o));if(a>i){if(a=Math.ceil(Math.cbrt(o)),a>i)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}return[a,a,1]}}}),xn=xe(()=>{Ze(),Jt(),ts(),Zc(),yp(),Xn(),Cr(),Uc=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let s=0;s<e.length;++s){let i=e[s].dataType;switch(t[s]){case"none":r.push("");break;case"type":r.push(`${i}`);break;case"rank":{let o=e[s].dims.length;r.push(`${i};${o}`);break}case"dims":{let o=e[s].dims.join(",");r.push(`${i};${o}`);break}default:throw new Error(`unsupported input dependency: ${t[s]}`)}}return r.join("|")},Vc=(e,t,r)=>{var i,o;let s=e.name;return(i=e.shaderCache)!=null&&i.hint&&(s+="["+e.shaderCache.hint+"]"),s+=":"+r+`:${Uc(t,((o=e.shaderCache)==null?void 0:o.inputDependencies)??new Array(t.length).fill("dims"))}`,s},Gc=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},qc=class{constructor(e){this.subgroupsSupported=e.features.has("subgroups"),this.subgroupsF16Supported=e.features.has("subgroups");let t=e.limits;this.subgroupsSupported&&t.minSubgroupSize&&t.maxSubgroupSize?this.subgroupSizeRange=[t.minSubgroupSize,t.maxSubgroupSize]:this.subgroupSizeRange=void 0}},Wc=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let r=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:r},i=o=>t.features.has(o)&&r.push(o)&&!0;i("chromium-experimental-timestamp-query-inside-passes")||i("timestamp-query"),i("shader-f16"),i("subgroups")&&i("subgroups-f16"),this.device=await t.requestDevice(s),this.deviceInfo=new qc(this.device),this.adapterInfo=new Gc(t.info||await t.requestAdapterInfo()),this.gpuDataManager=ve(this),this.programManager=new jc(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Dt(e.logLevel,!!e.debug),this.device.onuncapturederror=o=>{o.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${o.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;let e;Se(),this.endComputePass(),this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),e=this.device.createBuffer({size:2*this.pendingDispatchNumber*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,2*this.pendingDispatchNumber*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{var s;let t=new BigUint64Array(e.getMappedRange()),r=this.pendingQueries.get(e);for(let i=0;i<t.length/2;i++){let o=r[i],a=o.kernelId,c=this.kernels.get(a),h=c.kernelType,f=c.kernelName,E=o.programName,C=o.inputTensorViews,d=o.outputTensorViews,D=t[2*i],W=t[2*i+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=D);let J=Number(D-this.queryTimeBase),X=Number(W-this.queryTimeBase);if(!Number.isSafeInteger(J)||!Number.isSafeInteger(X))throw new RangeError("incorrect timestamp range");if((s=this.env.webgpu.profiling)!=null&&s.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:C.map(ne=>({dims:ne.dims,dataType:zn(ne.dataType)})),outputsMetadata:d.map(ne=>({dims:ne.dims,dataType:zn(ne.dataType)})),kernelId:a,kernelType:h,kernelName:f,programName:E,startTime:J,endTime:X});else{let ne="";C.forEach((ke,Fe)=>{ne+=`input[${Fe}]: [${ke.dims}] | ${zn(ke.dataType)}, `});let he="";d.forEach((ke,Fe)=>{he+=`output[${Fe}]: [${ke.dims}] | ${zn(ke.dataType)}, `}),console.log(`[profiling] kernel "${a}|${h}|${f}|${E}" ${ne}${he}execution time: ${X-J} ns`)}Ae("GPU",`${E}::${D}::${W}`)}e.unmap(),this.pendingQueries.delete(e)}),Re()}run(e,t,r,s,i,o){Se(e.name);let a=[];for(let he=0;he<t.length;++he){let ke=t[he].data;if(ke===0)continue;let Fe=this.gpuDataManager.get(ke);if(!Fe)throw new Error(`no GPU data for input: ${ke}`);a.push(Fe)}let{outputs:c,dispatchGroup:h,programUniforms:f}=e.getRunData(t),E=r.length===0?c.map((he,ke)=>ke):r;if(E.length!==c.length)throw new Error(`Output size ${E.length} must be equal to ${c.length}.`);let C,d=[],D=[];for(let he=0;he<c.length;++he){if(!Number.isInteger(E[he])||E[he]<-3||E[he]>=o)throw new Error(`Invalid output index: ${E[he]}`);if(E[he]===-3)continue;let ke=E[he]===-1,Fe=E[he]===-2,ze=ke||Fe?i(c[he].dataType,c[he].dims):s(E[he],c[he].dataType,c[he].dims);if(d.push(ze),ze.data===0)continue;let Ve=this.gpuDataManager.get(ze.data);if(!Ve)throw new Error(`no GPU data for output: ${ze.data}`);if(ke&&this.temporaryData.push(Ve),Fe){let pt=this.kernelPersistentData.get(this.currentKernelId);pt||(pt=[],this.kernelPersistentData.set(this.currentKernelId,pt)),pt.push(Ve)}D.push(Ve)}if(a.length!==t.length||D.length!==d.length){if(D.length===0)return Re(e.name),d;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(f){let he=0,ke=[];f.forEach(pt=>{let vt=typeof pt.data=="number"?[pt.data]:pt.data;if(vt.length===0)return;let qt,Wt,mr=pt.type===10?2:4;pt.type===10?(Wt=vt.length>4?16:vt.length>2?8:vt.length*mr,qt=vt.length>4?16:mr*vt.length):(Wt=vt.length<=2?vt.length*mr:16,qt=16),he=Math.ceil(he/Wt)*Wt,ke.push(he);let Ht=pt.type===10?8:4;he+=vt.length>4?Math.ceil(vt.length/Ht)*qt:vt.length*mr});let Fe=16;he=Math.ceil(he/Fe)*Fe;let ze=new ArrayBuffer(he);f.forEach((pt,vt)=>{let qt=ke[vt],Wt=typeof pt.data=="number"?[pt.data]:pt.data;if(pt.type===6)new Int32Array(ze,qt,Wt.length).set(Wt);else if(pt.type===12)new Uint32Array(ze,qt,Wt.length).set(Wt);else if(pt.type===10)new Uint16Array(ze,qt,Wt.length).set(Wt);else{if(pt.type!==1)throw new Error(`Unsupported uniform type: ${zn(pt.type)}`);new Float32Array(ze,qt,Wt.length).set(Wt)}});let Ve=this.gpuDataManager.create(he,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(Ve.buffer,0,ze,0,he),this.gpuDataManager.release(Ve.id),C={offset:0,size:he,buffer:Ve.buffer}}let W=this.programManager.normalizeDispatchGroupSize(h),J=W[1]===1&&W[2]===1,X=Vc(e,t,J),ne=this.programManager.getArtifact(X);if(ne||(ne=this.programManager.build(e,W),this.programManager.setArtifact(X,ne),wt("info",()=>`[artifact] key: ${X}, programName: ${e.name}`)),f&&ne.uniformVariablesInfo){if(f.length!==ne.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${ne.uniformVariablesInfo.length}, got ${f.length} in program "${ne.programInfo.name}".`);for(let he=0;he<f.length;he++){let ke=f[he],Fe=ke.type,ze=typeof ke.data=="number"?1:ke.data.length,[Ve,pt]=ne.uniformVariablesInfo[he];if(Fe!==Ve||ze!==pt)throw new Error(`Uniform variable ${he} mismatch: expect type ${Ve} with size ${pt}, got type ${Fe} with size ${ze} in program "${ne.programInfo.name}".`)}}if(wt("info",()=>`[ProgramManager] run "${e.name}" (key=${X}) with ${W[0]}x${W[1]}x${W[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let he={kernelId:this.currentKernelId,programName:ne.programInfo.name,inputTensorViews:t,outputTensorViews:d};this.pendingKernels.push(he),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(he)}return this.programManager.run(ne,a,D,W,C),Re(e.name),d}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,r,s){let i=mp.get(e);if(!i)throw new Error(`kernel not implemented: ${e}`);let o={kernelType:e,kernelName:s,kernelEntry:i[0],attributes:[i[1],r]};this.kernels.set(t,o)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let r of t)this.gpuDataManager.release(r.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,r){let s=this.kernels.get(e);if(!s)throw new Error(`kernel not created: ${e}`);let i=s.kernelType,o=s.kernelName,a=s.kernelEntry,c=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${i}] ${o}" is not allowed to be called recursively`);this.currentKernelId=e,c[0]&&(c[1]=c[0](c[1]),c[0]=void 0),wt("info",()=>`[WebGPU] Start to run kernel "[${i}] ${o}"...`);let h=this.env.debug;this.temporaryData=[];try{return h&&this.device.pushErrorScope("validation"),a(t,c[1]),0}catch(f){return r.push(Promise.resolve(`[WebGPU] Kernel "[${i}] ${o}" failed. ${f}`)),1}finally{h&&r.push(this.device.popErrorScope().then(f=>f?`GPU validation error for kernel "[${i}] ${o}": ${f.message}`:null));for(let f of this.temporaryData)this.gpuDataManager.release(f.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,r,s){let i=this.sessionExternalDataMapping.get(e);i||(i=new Map,this.sessionExternalDataMapping.set(e,i));let o=i.get(t),a=this.gpuDataManager.registerExternalBuffer(r,s,o);return i.set(t,[a,r]),a}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach(r=>this.gpuDataManager.unregisterExternalBuffer(r[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,r){return async()=>{let s=await ee(this,e,t);return Qt(s.buffer,r)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",(((e=this.env.webgpu.profiling)==null?void 0:e.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:2*this.maxDispatchNumber*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){wt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){wt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){wt("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),r=e.length;this.pendingKernels=[];for(let s=0;s<r;s++){let i=this.getComputePassEncoder(),o=e[s];this.writeTimestamp(2*this.pendingDispatchNumber),i.setPipeline(o.computePipeline),i.setBindGroup(0,o.bindGroup),i.dispatchWorkgroups(...o.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),ps=xe(()=>{ts(),Hc=1,Lo=()=>Hc++,Kc=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),No=(e,t)=>{let r=Kc.get(e);if(!r)throw new Error("Unsupported data type.");return t.length>0?Math.ceil(t.reduce((s,i)=>s*i)*r/8):0},Bo=class{constructor(e){this.sessionId=e.sessionId,this.mlContext=e.context,this.mlTensor=e.tensor,this.dataType=e.dataType,this.tensorShape=e.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return No(this.dataType,this.tensorShape)}destroy(){wt("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e){return e?this.mlContext.readTensor(this.mlTensor,e):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,t,r){return this.mlContext===e&&this.dataType===t&&this.tensorShape.length===r.length&&this.tensorShape.every((s,i)=>s===r[i])}},Ro=class{constructor(e,t){this.tensorManager=e,this.wrapper=t}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,t,r,s){if(this.wrapper){if(this.wrapper.canReuseTensor(e,t,r))return this.wrapper.tensor;if(s){if(this.wrapper.byteLength!==No(t,r))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let i=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(t,r,i,!0,!0),s&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){if(this.wrapper){if(e.byteLength===this.wrapper.byteLength)return void this.wrapper.write(e);wt("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor()}this.activeUpload?this.activeUpload.set(e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)return e?void(e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload)):this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(e):this.wrapper.read()}},fp=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let e=Lo();return this.tensorTrackersById.set(e,new Ro(this)),e}releaseTensorId(e){let t=this.tensorTrackersById.get(e);t&&(this.tensorTrackersById.delete(e),t.tensorWrapper&&this.releaseTensor(t.tensorWrapper))}async ensureTensor(e,t,r,s){wt("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${t}, shape: ${r}, copyOld: ${s}}`);let i=this.tensorTrackersById.get(e);if(!i)throw new Error("Tensor not found.");return i.ensureTensor(this.backend.currentContext,t,r,s)}upload(e,t){let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");r.upload(t)}async download(e,t){wt("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t==null?void 0:t.byteLength}}`);let r=this.tensorTrackersById.get(e);if(!r)throw new Error("Tensor not found.");return r.download(t)}releaseTensorsForSession(e){for(let t of this.freeTensors)t.sessionId===e&&t.destroy();this.freeTensors=this.freeTensors.filter(t=>t.sessionId!==e)}registerTensor(e,t,r,s){let i=Lo(),o=new Bo({sessionId:this.backend.currentSessionId,context:e,tensor:t,dataType:r,shape:s});return this.tensorTrackersById.set(i,new Ro(this,o)),this.externalTensors.add(o),i}async getCachedTensor(e,t,r,s,i){let o=this.backend.currentSessionId,a=this.backend.currentContext;for(let[h,f]of this.freeTensors.entries())if(f.canReuseTensor(a,e,t)){wt("verbose",()=>`[WebNN] Reusing tensor {dataType: ${e}, shape: ${t}}`);let E=this.freeTensors.splice(h,1)[0];return E.sessionId=o,E}wt("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${t}}`);let c=await a.createTensor({dataType:e,shape:t,dimensions:t,usage:r,writable:s,readable:i});return new Bo({sessionId:o,context:a,tensor:c,dataType:e,shape:t})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},Qc=(...e)=>new fp(...e)}),Qo=xe(()=>{Jt(),js(),Zc(),ps(),ts(),Do=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),Xc=(e,t)=>{if(e===t)return!0;if(e===void 0||t===void 0)return!1;let r=Object.keys(e).sort(),s=Object.keys(t).sort();return r.length===s.length&&r.every((i,o)=>i===s[o]&&e[i]===t[i])},Yc=class{constructor(e){this.tensorManager=Qc(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],Dt(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){this.activeSessionId=e}async createMLContext(e){if(e instanceof GPUDevice){let r=this.mlContextCache.findIndex(s=>s.gpuDevice===e);if(r!==-1)return this.mlContextCache[r].mlContext;{let s=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:s}),s}}if(e===void 0){let r=this.mlContextCache.findIndex(s=>s.options===void 0&&s.gpuDevice===void 0);if(r!==-1)return this.mlContextCache[r].mlContext;{let s=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:s}),s}}let t=this.mlContextCache.findIndex(r=>Xc(r.options,e));if(t!==-1)return this.mlContextCache[t].mlContext;{let r=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:r}),r}}get currentContext(){let e=this.getMLContext(this.currentSessionId);if(!e)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return e}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let r=this.sessionIdsByMLContext.get(t);r||(r=new Set,this.sessionIdsByMLContext.set(t,r)),r.add(e)}onReleaseSession(e){let t=this.mlContextBySessionId.get(e);if(!t)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let r=this.sessionIdsByMLContext.get(t);if(r.delete(e),r.size===0){this.sessionIdsByMLContext.delete(t);let s=this.mlContextCache.findIndex(i=>i.mlContext===t);s!==-1&&this.mlContextCache.splice(s,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){wt("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,r,s){let i=Do.get(t);if(!i)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e,i,r,s)}uploadTensor(e,t){if(!Nr().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");wt("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let r=await this.tensorManager.download(e);return Qt(r,t)}}registerMLTensor(e,t,r){let s=Do.get(t);if(!s)throw new Error(`Unsupported ONNX data type: ${t}`);let i=this.tensorManager.registerTensor(this.currentContext,e,s,r);return wt("verbose",()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${s}, dimensions: ${r}} -> {tensorId: ${i}}`),i}registerMLConstant(e,t,r,s,i,o){if(!o)throw new Error("External mounted files are not available.");let a=e;e.startsWith("./")&&(a=e.substring(2));let c=o.get(a);if(!c)throw new Error(`File with name ${a} not found in preloaded files.`);if(t+r>c.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let h,f=c.slice(t,t+r).buffer;switch(i.dataType){case"float32":h=new Float32Array(f);break;case"float16":h=new Uint16Array(f);break;case"int32":h=new Int32Array(f);break;case"uint32":h=new Uint32Array(f);break;case"int64":h=new BigInt64Array(f);break;case"uint64":h=new BigUint64Array(f);break;case"int8":h=new Int8Array(f);break;case"int4":case"uint4":case"uint8":h=new Uint8Array(f);break;default:throw new Error(`Unsupported data type: ${i.dataType} in creating WebNN Constant from external data.`)}return wt("verbose",()=>`[WebNN] registerMLConstant {dataType: ${i.dataType}, shape: ${i.shape}}}`),s.constant(i,h)}flush(){}}}),Vs={};je(Vs,{init:()=>Rr});var $s,Ip,Rr,nn,rs,hs,Bn,Ci,ei,Pi,Ai,ep,Ii,ti,Fi,ms,Sn,fs,zi,Oi,Xo,_s,An,Li,Ni,Ah,Ih,Fh,zh,Oh,Lh,Nh,Bh,eh,Rh,Dh,Cf=xe(()=>{Jt(),xn(),ts(),or(),Qo(),$s=class hf{constructor(t,r,s,i){this.module=t,this.dataType=r,this.data=s,this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=ye.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=ye.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=ye.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let t=ye.size(this.dims);return t===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(ye.size(t)!==ye.size(this.dims))throw new Error("Invalid new shape");return new hf(this.module,this.dataType,this.data,t)}},Ip=class{constructor(e,t,r){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo,this.deviceInfo=t.deviceInfo;let s=e.PTR_SIZE,i=r/e.PTR_SIZE,o=s===4?"i32":"i64";this.opKernelContext=Number(e.getValue(s*i++,o));let a=Number(e.getValue(s*i++,o));this.outputCount=Number(e.getValue(s*i++,o)),this.customDataOffset=Number(e.getValue(s*i++,"*")),this.customDataSize=Number(e.getValue(s*i++,o));let c=[];for(let h=0;h<a;h++){let f=Number(e.getValue(s*i++,o)),E=Number(e.getValue(s*i++,"*")),C=Number(e.getValue(s*i++,o)),d=[];for(let D=0;D<C;D++)d.push(Number(e.getValue(s*i++,o)));c.push(new $s(e,f,E,d))}this.inputs=c}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,t){var i;let r=((i=t==null?void 0:t.inputs)==null?void 0:i.map(o=>typeof o=="number"?this.inputs[o]:o))??this.inputs,s=(t==null?void 0:t.outputs)??[];return this.backend.run(e,r,s,(o,a,c)=>new $s(this.module,a,this.output(o,c),c),(o,a)=>{let c=On(o,a);if(!c)throw new Error(`Unsupported data type: ${o}`);let h=c>0?this.backend.gpuDataManager.create(c).id:0;return new $s(this.module,o,h,a)},this.outputCount)}output(e,t){let r=this.module.stackSave();try{let s=this.module.PTR_SIZE,i=s===4?"i32":"i64",o=this.module.stackAlloc((1+t.length)*s);this.module.setValue(o,t.length,i);for(let a=0;a<t.length;a++)this.module.setValue(o+s*(a+1),t[a],i);return this.module._JsepOutput(this.opKernelContext,e,o)}catch(s){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(r)}}},Rr=async(e,t,r,s)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let o=new Wc;await o.initialize(r,s),i("webgpu",[o,a=>o.alloc(Number(a)),a=>o.free(a),(a,c,h,f=!1)=>{if(f)wt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(a)}, dst=${Number(c)}, size=${Number(h)}`),o.memcpy(Number(a),Number(c));else{wt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(a)}, gpuDataId=${Number(c)}, size=${Number(h)}`);let E=t.HEAPU8.subarray(Number(a>>>0),Number(a>>>0)+Number(h));o.upload(Number(c),E)}},async(a,c,h)=>{wt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${c}, size=${h}`),await o.download(Number(a),()=>t.HEAPU8.subarray(Number(c)>>>0,Number(c+h)>>>0))},(a,c,h)=>o.createKernel(a,Number(c),h,t.UTF8ToString(t._JsepGetNodeName(Number(c)))),a=>o.releaseKernel(a),(a,c,h,f)=>{wt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${h}, kernel=${a}, contextDataOffset=${c}`);let E=new Ip(t,o,Number(c));return o.computeKernel(Number(a),E,f)},()=>o.captureBegin(),()=>o.captureEnd(),()=>o.replay()])}else{let o=new Yc(r);i("webnn",[o,()=>o.reserveTensorId(),a=>o.releaseTensorId(a),async(a,c,h,f)=>o.ensureTensor(a,c,h,f),(a,c)=>{o.uploadTensor(a,c)},async(a,c)=>o.downloadTensor(a,c)])}}}),jh=xe(()=>{gp(),wp(),Jt(),js(),Si(),Jc(),nn=(e,t)=>{Nr()._OrtInit(e,t)!==0&&pr("Can't initialize onnxruntime.")},rs=async e=>{nn(e.wasm.numThreads,u(e.logLevel))},hs=async(e,t)=>{{let r=(Cf(),He(Vs)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let s=e.webgpu.adapter;if(s){if(typeof s.limits!="object"||typeof s.features!="object"||typeof s.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let o=e.webgpu.forceFallbackAdapter;if(o!==void 0&&typeof o!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${o}"`);if(s=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:o}),!s)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await r("webgpu",Nr(),e,s)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",Nr(),e)}}},Bn=new Map,Ci=e=>{let t=Nr(),r=t.stackSave();try{let s=t.PTR_SIZE,i=t.stackAlloc(2*s);t._OrtGetInputOutputCount(e,i,i+s)!==0&&pr("Can't get session input/output count.");let o=s===4?"i32":"i64";return[Number(t.getValue(i,o)),Number(t.getValue(i+s,o))]}finally{t.stackRestore(r)}},ei=e=>{let t=Nr(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},Pi=async(e,t)=>{var C,d,D;let r,s,i=Nr();Array.isArray(e)?[r,s]=e:e.buffer===i.HEAPU8.buffer?[r,s]=[e.byteOffset,e.byteLength]:[r,s]=ei(e);let o=0,a=0,c=0,h=[],f=[],E=[];try{if([a,h]=Fn(t),(t==null?void 0:t.externalData)&&i.mountExternalData){let ze=[];for(let Ve of t.externalData){let pt=typeof Ve=="string"?Ve:Ve.path;ze.push(_e(typeof Ve=="string"?Ve:Ve.data).then(vt=>{i.mountExternalData(pt,vt)}))}await Promise.all(ze)}for(let ze of(t==null?void 0:t.executionProviders)??[])if((typeof ze=="string"?ze:ze.name)==="webnn"){if(i.shouldTransferToMLTensor=!1,typeof ze!="string"){let Ve=ze,pt=Ve==null?void 0:Ve.context,vt=Ve==null?void 0:Ve.gpuDevice,qt=Ve==null?void 0:Ve.deviceType,Wt=Ve==null?void 0:Ve.powerPreference;i.currentContext=pt||(vt?await i.jsepCreateMLContext(vt):await i.jsepCreateMLContext({deviceType:qt,powerPreference:Wt}))}else i.currentContext=await i.jsepCreateMLContext();break}o=await i._OrtCreateSession(r,s,a),o===0&&pr("Can't create a session."),(C=i.jsepOnCreateSession)==null||C.call(i),i.currentContext&&(i.jsepRegisterMLContext(o,i.currentContext),i.currentContext=void 0,i.shouldTransferToMLTensor=!0);let[W,J]=Ci(o),X=!!(t!=null&&t.enableGraphCapture),ne=[],he=[],ke=[];for(let ze=0;ze<W;ze++){let Ve=i._OrtGetInputName(o,ze);Ve===0&&pr("Can't get an input name."),f.push(Ve),ne.push(i.UTF8ToString(Ve))}for(let ze=0;ze<J;ze++){let Ve=i._OrtGetOutputName(o,ze);Ve===0&&pr("Can't get an output name."),E.push(Ve);let pt=i.UTF8ToString(Ve);he.push(pt);{if(X&&(t==null?void 0:t.preferredOutputLocation)===void 0){ke.push("gpu-buffer");continue}let vt=typeof(t==null?void 0:t.preferredOutputLocation)=="string"?t.preferredOutputLocation:((d=t==null?void 0:t.preferredOutputLocation)==null?void 0:d[pt])??"cpu";if(vt!=="cpu"&&vt!=="cpu-pinned"&&vt!=="gpu-buffer"&&vt!=="ml-tensor")throw new Error(`Not supported preferred output location: ${vt}.`);if(X&&vt!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${vt}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);ke.push(vt)}}let Fe=null;return ke.some(ze=>ze==="gpu-buffer"||ze==="ml-tensor")&&(c=i._OrtCreateBinding(o),c===0&&pr("Can't create IO binding."),Fe={handle:c,outputPreferredLocations:ke,outputPreferredLocationsEncoded:ke.map(ze=>q(ze))}),Bn.set(o,[o,f,E,Fe,X,!1]),[o,ne,he]}catch(W){throw f.forEach(J=>i._OrtFree(J)),E.forEach(J=>i._OrtFree(J)),c!==0&&i._OrtReleaseBinding(c)!==0&&pr("Can't release IO binding."),o!==0&&i._OrtReleaseSession(o)!==0&&pr("Can't release session."),W}finally{i._free(r),a!==0&&i._OrtReleaseSessionOptions(a)!==0&&pr("Can't release session options."),h.forEach(W=>i._free(W)),(D=i.unmountExternalData)==null||D.call(i)}},Ai=e=>{var h;let t=Nr(),r=Bn.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,i,o,a,c]=r;a&&(c&&t._OrtClearBoundOutputs(a.handle)!==0&&pr("Can't clear bound outputs."),t._OrtReleaseBinding(a.handle)!==0&&pr("Can't release IO binding.")),(h=t.jsepOnReleaseSession)==null||h.call(t,e),i.forEach(f=>t._OrtFree(f)),o.forEach(f=>t._OrtFree(f)),t._OrtReleaseSession(s)!==0&&pr("Can't release session."),Bn.delete(e)},ep=(e,t,r,s,i,o=!1)=>{if(!e)return void t.push(0);let a,c,h=Nr(),f=h.PTR_SIZE,E=e[0],C=e[1],d=e[3];if(E==="string"&&(d==="gpu-buffer"||d==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(o&&d!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(d==="gpu-buffer"){let J=e[2].gpuBuffer;c=On(Kn(E),C);let X=h.jsepRegisterBuffer;if(!X)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');a=X(s,i,J,c)}else if(d==="ml-tensor"){let J=e[2].mlTensor;c=On(Kn(E),C);let X=h.jsepRegisterMLTensor;if(!X)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');a=X(J,Kn(E),C)}else{let J=e[2];if(Array.isArray(J)){c=f*J.length,a=h._malloc(c),r.push(a);for(let X=0;X<J.length;X++){if(typeof J[X]!="string")throw new TypeError(`tensor data at index ${X} is not a string`);h.setValue(a+X*f,Wr(J[X],r),"*")}}else c=J.byteLength,a=h._malloc(c),r.push(a),h.HEAPU8.set(new Uint8Array(J.buffer,J.byteOffset,c),a)}let D=h.stackSave(),W=h.stackAlloc(4*C.length);try{C.forEach((X,ne)=>h.setValue(W+ne*f,X,f===4?"i32":"i64"));let J=h._OrtCreateTensor(Kn(E),a,c,W,C.length,q(d));J===0&&pr(`Can't create tensor for input/output. session=${s}, index=${i}.`),t.push(J)}finally{h.stackRestore(D)}},Ii=async(e,t,r,s,i,o)=>{var mr,Ht;let a=Nr(),c=a.PTR_SIZE,h=Bn.get(e);if(!h)throw new Error(`cannot run inference. invalid session id: ${e}`);let f=h[0],E=h[1],C=h[2],d=h[3],D=h[4],W=h[5],J=t.length,X=s.length,ne=0,he=[],ke=[],Fe=[],ze=[],Ve=a.stackSave(),pt=a.stackAlloc(J*c),vt=a.stackAlloc(J*c),qt=a.stackAlloc(X*c),Wt=a.stackAlloc(X*c);try{(mr=a.jsepOnRunStart)==null||mr.call(a,f),[ne,he]=as(o);for(let Qe=0;Qe<J;Qe++)ep(r[Qe],ke,ze,e,t[Qe],D);for(let Qe=0;Qe<X;Qe++)ep(i[Qe],Fe,ze,e,J+s[Qe],D);for(let Qe=0;Qe<J;Qe++)a.setValue(pt+Qe*c,ke[Qe],"*"),a.setValue(vt+Qe*c,E[t[Qe]],"*");for(let Qe=0;Qe<X;Qe++)a.setValue(qt+Qe*c,Fe[Qe],"*"),a.setValue(Wt+Qe*c,C[s[Qe]],"*");if(d&&!W){let{handle:Qe,outputPreferredLocations:Ut,outputPreferredLocationsEncoded:zt}=d;if(E.length!==J)throw new Error(`input count from feeds (${J}) is expected to be always equal to model's input count (${E.length}).`);for(let Nt=0;Nt<J;Nt++){let wr=t[Nt];await a._OrtBindInput(Qe,E[wr],ke[Nt])!==0&&pr(`Can't bind input[${Nt}] for session=${e}.`)}for(let Nt=0;Nt<X;Nt++){let wr=s[Nt];(Ht=i[Nt])!=null&&Ht[3]?a._OrtBindOutput(Qe,C[wr],Fe[Nt],0)!==0&&pr(`Can't bind pre-allocated output[${Nt}] for session=${e}.`):a._OrtBindOutput(Qe,C[wr],0,zt[wr])!==0&&pr(`Can't bind output[${Nt}] to ${Ut[Nt]} for session=${e}.`)}Bn.set(e,[f,E,C,d,D,!0])}let ir;ir=d?await a._OrtRunWithBinding(f,d.handle,X,qt,ne):await a._OrtRun(f,vt,pt,J,Wt,X,qt,ne),ir!==0&&pr("failed to call OrtRun().");let rr=[];for(let Qe=0;Qe<X;Qe++){let Ut=Number(a.getValue(qt+Qe*c,"*"));if(Ut===Fe[Qe]){rr.push(i[Qe]);continue}let zt,Nt=a.stackSave(),wr=a.stackAlloc(4*c),Zr=!1,kn=0;try{a._OrtGetTensorData(Ut,wr,wr+c,wr+2*c,wr+3*c)!==0&&pr(`Can't access output tensor data on index ${Qe}.`);let Es=c===4?"i32":"i64",Gs=Number(a.getValue(wr,Es));kn=a.getValue(wr+c,"*");let Bi=a.getValue(wr+2*c,"*"),ns=Number(a.getValue(wr+3*c,Es)),Ss=[];for(let zr=0;zr<ns;zr++)Ss.push(Number(a.getValue(Bi+zr*c,Es)));a._OrtFree(Bi)!==0&&pr("Can't free memory for tensor dims.");let Cs=Ss.reduce((zr,Rn)=>zr*Rn,1);zt=zn(Gs);let ss=d==null?void 0:d.outputPreferredLocations[s[Qe]];if(zt==="string"){if(ss==="gpu-buffer"||ss==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let zr=[];for(let Rn=0;Rn<Cs;Rn++){let qs=a.getValue(kn+Rn*c,"*"),rh=a.getValue(kn+(Rn+1)*c,"*"),Ri=Rn===Cs-1?void 0:rh-qs;zr.push(a.UTF8ToString(qs,Ri))}rr.push([zt,Ss,zr,"cpu"])}else if(ss==="gpu-buffer"&&Cs>0){let zr=a.jsepGetBuffer;if(!zr)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let Rn=zr(kn),qs=On(Gs,Cs);if(qs===void 0||!m(zt))throw new Error(`Unsupported data type: ${zt}`);Zr=!0,rr.push([zt,Ss,{gpuBuffer:Rn,download:a.jsepCreateDownloader(Rn,qs,zt),dispose:()=>{a._OrtReleaseTensor(Ut)!==0&&pr("Can't release tensor.")}},"gpu-buffer"])}else if(ss==="ml-tensor"&&Cs>0){let zr=a.jsepEnsureTensor;if(!zr)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(On(Gs,Cs)===void 0||!T(zt))throw new Error(`Unsupported data type: ${zt}`);let Rn=await zr(kn,Gs,Ss,!1);Zr=!0,rr.push([zt,Ss,{mlTensor:Rn,download:a.jsepCreateMLTensorDownloader(kn,zt),dispose:()=>{a.jsepReleaseTensorId(kn),a._OrtReleaseTensor(Ut)}},"ml-tensor"])}else{let zr=new(Zn(zt))(Cs);new Uint8Array(zr.buffer,zr.byteOffset,zr.byteLength).set(a.HEAPU8.subarray(kn,kn+zr.byteLength)),rr.push([zt,Ss,zr,"cpu"])}}finally{a.stackRestore(Nt),zt==="string"&&kn&&a._free(kn),Zr||a._OrtReleaseTensor(Ut)}}return d&&!D&&(a._OrtClearBoundOutputs(d.handle)!==0&&pr("Can't clear bound outputs."),Bn.set(e,[f,E,C,d,D,!1])),rr}finally{a.stackRestore(Ve),ke.forEach(ir=>a._OrtReleaseTensor(ir)),Fe.forEach(ir=>a._OrtReleaseTensor(ir)),ze.forEach(ir=>a._free(ir)),ne!==0&&a._OrtReleaseRunOptions(ne),he.forEach(ir=>a._free(ir))}},ti=e=>{let t=Nr(),r=Bn.get(e);if(!r)throw new Error("invalid session id");let s=r[0],i=t._OrtEndProfiling(s);i===0&&pr("Can't get an profile file name."),t._OrtFree(i)},Fi=e=>{let t=[];for(let r of e){let s=r[2];!Array.isArray(s)&&"buffer"in s&&t.push(s.buffer)}return t}}),Uh=xe(()=>{Ze(),jh(),js(),jo(),ms=()=>!!b.wasm.proxy&&typeof document<"u",fs=!1,zi=!1,Oi=!1,An=new Map,Li=(e,t)=>{let r=An.get(e);r?r.push(t):An.set(e,[t])},Ni=()=>{if(fs||!zi||Oi||!Sn)throw new Error("worker not ready")},Ah=e=>{switch(e.data.type){case"init-wasm":fs=!1,e.data.err?(Oi=!0,_s[1](e.data.err)):(zi=!0,_s[0]()),Xo&&(URL.revokeObjectURL(Xo),Xo=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=An.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},Ih=async()=>{if(!zi){if(fs)throw new Error("multiple calls to 'initWasm()' detected.");if(Oi)throw new Error("previous call to 'initWasm()' failed.");if(fs=!0,ms())return new Promise((e,t)=>{Sn==null||Sn.terminate(),Mn().then(([r,s])=>{var i;try{(Sn=s).onerror=a=>t(a),Sn.onmessage=Ah,_s=[e,t];let o={type:"init-wasm",in:b};!o.in.wasm.wasmPaths&&(r||(i=typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:er&&er.tagName.toUpperCase()==="SCRIPT"&&er.src||new URL("kokoro.umd.js",document.baseURI).href)!=null&&i.startsWith("file:"))&&(o.in.wasm.wasmPaths={wasm:new URL(n("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),n.b).href}),Sn.postMessage(o),Xo=r}catch(o){t(o)}},t)});try{await Hn(b.wasm),await rs(b),zi=!0}catch(e){throw Oi=!0,e}finally{fs=!1}}},Fh=async e=>{if(ms())return Ni(),new Promise((t,r)=>{Li("init-ep",[t,r]);let s={type:"init-ep",in:{epName:e,env:b}};Sn.postMessage(s)});await hs(b,e)},zh=async e=>ms()?(Ni(),new Promise((t,r)=>{Li("copy-from",[t,r]);let s={type:"copy-from",in:{buffer:e}};Sn.postMessage(s,[e.buffer])})):ei(e),Oh=async(e,t)=>{if(ms()){if(t!=null&&t.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Ni(),new Promise((r,s)=>{Li("create",[r,s]);let i={type:"create",in:{model:e,options:{...t}}},o=[];e instanceof Uint8Array&&o.push(e.buffer),Sn.postMessage(i,o)})}return Pi(e,t)},Lh=async e=>{if(ms())return Ni(),new Promise((t,r)=>{Li("release",[t,r]);let s={type:"release",in:e};Sn.postMessage(s)});Ai(e)},Nh=async(e,t,r,s,i,o)=>{if(ms()){if(r.some(a=>a[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(i.some(a=>a))throw new Error("pre-allocated output tensor is not supported for proxy.");return Ni(),new Promise((a,c)=>{Li("run",[a,c]);let h=r,f={type:"run",in:{sessionId:e,inputIndices:t,inputs:h,outputIndices:s,options:o}};Sn.postMessage(f,Fi(h))})}return Ii(e,t,r,s,i,o)},Bh=async e=>{if(ms())return Ni(),new Promise((t,r)=>{Li("end-profiling",[t,r]);let s={type:"end-profiling",in:e};Sn.postMessage(s)});ti(e)}}),Pf=xe(()=>{Ze(),Uh(),Jt(),ct(),Jc(),eh=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},Rh=e=>{switch(e[3]){case"cpu":return new ge(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!m(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:s,dispose:i}=e[2];return ge.fromGpuBuffer(r,{dataType:t,dims:e[1],download:s,dispose:i})}case"ml-tensor":{let t=e[0];if(!T(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:r,download:s,dispose:i}=e[2];return ge.fromMLTensor(r,{dataType:t,dims:e[1],download:s,dispose:i})}default:throw new Error(`invalid data location: ${e[3]}`)}},Dh=class{async fetchModelAndCopyToWasmMemory(e){return zh(await _e(e))}async loadModel(e,t){let r;Se(),r=typeof e=="string"?await this.fetchModelAndCopyToWasmMemory(e):e,[this.sessionId,this.inputNames,this.outputNames]=await Oh(r,t),Re()}async dispose(){return Lh(this.sessionId)}async run(e,t,r){Se();let s=[],i=[];Object.entries(e).forEach(C=>{let d=C[0],D=C[1],W=this.inputNames.indexOf(d);if(W===-1)throw new Error(`invalid input '${d}'`);s.push(D),i.push(W)});let o=[],a=[];Object.entries(t).forEach(C=>{let d=C[0],D=C[1],W=this.outputNames.indexOf(d);if(W===-1)throw new Error(`invalid output '${d}'`);o.push(D),a.push(W)});let c=s.map((C,d)=>eh(C,()=>`input "${this.inputNames[i[d]]}"`)),h=o.map((C,d)=>C?eh(C,()=>`output "${this.outputNames[a[d]]}"`):null),f=await Nh(this.sessionId,i,c,a,h,r),E={};for(let C=0;C<f.length;C++)E[this.outputNames[a[C]]]=o[C]??Rh(f[C]);return Re(),E}startProfiling(){}endProfiling(){Bh(this.sessionId)}}}),Vh={};je(Vh,{OnnxruntimeWebAssemblyBackend:()=>Gh,initializeFlags:()=>th,wasmBackend:()=>qh});var th,Gh,qh,Af=xe(()=>{Ze(),Uh(),Pf(),th=()=>{if((typeof b.wasm.initTimeout!="number"||b.wasm.initTimeout<0)&&(b.wasm.initTimeout=0),b.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof b.wasm.proxy!="boolean"&&(b.wasm.proxy=!1),typeof b.wasm.trace!="boolean"&&(b.wasm.trace=!1),typeof b.wasm.numThreads!="number"||!Number.isInteger(b.wasm.numThreads)||b.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)b.wasm.numThreads=1;else{let e=typeof navigator>"u"?qe("node:os").cpus().length:navigator.hardwareConcurrency;b.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},qh=new(Gh=class{async init(e){th(),await Ih(),await Fh(e)}async createInferenceSessionHandler(e,t){let r=new Dh;return await r.loadModel(e,t),Promise.resolve(r)}})});Ze(),Ze(),Ze();var If=tt;{let e=(Af(),He(Vh)).wasmBackend;Y("webgpu",e,5),Y("webnn",e,5),Y("cpu",e,10),Y("wasm",e,10)}Object.defineProperty(b.versions,"web",{value:"1.21.0-dev.20250206-d981b153d3",enumerable:!0})},"./src/backends/onnx.js":(Te,k,n)=>{var p;n.r(k),n.d(k,{Tensor:()=>z.Tensor,createInferenceSession:()=>le,deviceToExecutionProviders:()=>re,isONNXProxy:()=>ie,isONNXTensor:()=>L});var I=n("./src/env.js"),V=n("?2ce3"),Y=n("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96"),z=n("./node_modules/onnxruntime-common/dist/esm/index.js");const $=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),y=[];let _,A;const b=Symbol.for("onnxruntime");if(b in globalThis)A=globalThis[b];else if(I.apis.IS_NODE_ENV){switch(A=V??(p||(p=n.t(V,2))),process.platform){case"win32":y.push("dml");break;case"linux":process.arch==="x64"&&y.push("cuda")}y.push("cpu"),_=["cpu"]}else A=Y,I.apis.IS_WEBNN_AVAILABLE&&y.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),I.apis.IS_WEBGPU_AVAILABLE&&y.push("webgpu"),y.push("wasm"),_=["wasm"];const j=A.InferenceSession;function re(N=null){if(!N)return _;switch(N){case"auto":return y;case"gpu":return y.filter(v=>["webgpu","cuda","dml","webnn-gpu"].includes(v))}if(y.includes(N))return[$[N]??N];throw new Error(`Unsupported device: "${N}". Should be one of: ${y.join(", ")}.`)}let se=null;async function le(N,v,O){se&&await se;const x=j.create(N,v);se??(se=x);const R=await x;return R.config=O,R}function L(N){return N instanceof A.Tensor}const G=A==null?void 0:A.env;function ie(){var N;return(N=G==null?void 0:G.wasm)==null?void 0:N.proxy}G!=null&&G.wasm&&(G.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${I.env.version}/dist/`,G.wasm.proxy=!1,typeof crossOriginIsolated<"u"&&crossOriginIsolated||(G.wasm.numThreads=1)),G!=null&&G.webgpu&&(G.webgpu.powerPreference="high-performance"),I.env.backends.onnx=G},"./src/base/feature_extraction_utils.js":(Te,k,n)=>{n.r(k),n.d(k,{FeatureExtractor:()=>Y,validate_audio_inputs:()=>z});var p=n("./src/utils/constants.js"),I=n("./src/utils/generic.js"),V=n("./src/utils/hub.js");class Y extends I.Callable{constructor(y){super(),this.config=y}static async from_pretrained(y,_){return new this(await(0,V.getModelJSON)(y,p.FEATURE_EXTRACTOR_NAME,!0,_))}}function z($,y){var _;if(!($ instanceof Float32Array||$ instanceof Float64Array))throw new Error(`${y} expects input to be a Float32Array or a Float64Array, but got ${((_=$==null?void 0:$.constructor)==null?void 0:_.name)??typeof $} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(Te,k,n)=>{n.r(k),n.d(k,{ImageProcessor:()=>ie,center_to_corners_format:()=>A,post_process_instance_segmentation:()=>G,post_process_object_detection:()=>b,post_process_panoptic_segmentation:()=>L,post_process_semantic_segmentation:()=>j});var p=n("./src/utils/generic.js"),I=n("./src/utils/tensor.js"),V=n("./src/utils/maths.js");n("./src/utils/image.js");var Y=n("./src/utils/core.js"),z=n("./src/utils/hub.js"),$=n("./src/utils/constants.js");function y(N,v,O=0,x=null){const R=N/v;let K=(0,V.bankers_round)(R)*v;return x!==null&&K>x&&(K=Math.floor(R)*v),K<O&&(K=Math.ceil(R)*v),K}function _([N,v],O){return[Math.max(Math.floor(N/O),1)*O,Math.max(Math.floor(v/O),1)*O]}function A([N,v,O,x]){return[N-O/2,v-x/2,N+O/2,v+x/2]}function b(N,v=.5,O=null,x=!1){const R=N.logits,K=N.pred_boxes,[fe,de,ge]=R.dims;if(O!==null&&O.length!==fe)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Ae=[];for(let we=0;we<fe;++we){let Se=O!==null?O[we]:null,Re={boxes:[],classes:[],scores:[]},Ue=R[we],dt=K[we];for(let oe=0;oe<de;++oe){let Z,pe=Ue[oe],Ee=[];if(x){Z=pe.sigmoid().data;for(let qe=0;qe<Z.length;++qe)Z[qe]>v&&Ee.push(qe)}else{let qe=(0,V.max)(pe.data)[1];if(qe===ge-1||(Z=(0,V.softmax)(pe.data),Z[qe]<v))continue;Ee.push(qe)}for(const qe of Ee){let xe=dt[oe].data;xe=A(xe),Se!==null&&(xe=xe.map((je,He)=>je*Se[(He+1)%2])),Re.boxes.push(xe),Re.classes.push(qe),Re.scores.push(Z[qe])}}Ae.push(Re)}return Ae}function j(N,v=null){const O=N.logits,x=O.dims[0];if(v!==null&&v.length!==x)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const R=[];for(let K=0;K<x;++K){const fe=v!==null?v[K]:null;let de=O[K];fe!==null&&(de=(0,I.interpolate)(de,fe,"bilinear",!1));const[ge,Ae]=fe??de.dims.slice(-2),we=new I.Tensor("int32",new Int32Array(ge*Ae),[ge,Ae]),Se=de[0].data,Re=we.data;for(let oe=1;oe<de.dims[0];++oe){const Z=de[oe].data;for(let pe=0;pe<Z.length;++pe)Z[pe]>Se[pe]&&(Se[pe]=Z[pe],Re[pe]=oe)}const Ue=new Array(de.dims[0]);for(let oe=0;oe<Re.length;++oe){const Z=Re[oe];Ue[Z]=Z}const dt=Ue.filter(oe=>oe!==void 0);R.push({segmentation:we,labels:dt})}return R}function re(N,v,O,x){const R=[],K=[],fe=[];for(let de=0;de<N.dims[0];++de){const ge=N[de],Ae=v[de],we=(0,V.max)(ge.data)[1];if(we===x)continue;const Se=(0,V.softmax)(ge.data)[we];Se>O&&(R.push(Ae),K.push(Se),fe.push(we))}return[R,K,fe]}function se(N,v,O,x=.5,R=.8){const K=[];let fe=0,de=0;const ge=v[O].data;for(let we=0;we<N.length;++we)N[we]===O&&(K.push(we),++fe),ge[we]>=x&&++de;let Ae=fe>0&&de>0;return Ae&&(Ae=fe/de>R),[Ae,K]}function le(N,v,O,x,R,K=null,fe=null){const[de,ge]=fe??N[0].dims,Ae=new I.Tensor("int32",new Int32Array(de*ge),[de,ge]),we=[];if(fe!==null)for(let oe=0;oe<N.length;++oe)N[oe]=(0,I.interpolate)(N[oe],fe,"bilinear",!1);const Se=new Int32Array(N[0].data.length),Re=new Float32Array(N[0].data.length);for(let oe=0;oe<N.length;++oe){let Z=v[oe];const pe=N[oe].data;for(let Ee=0;Ee<pe.length;++Ee)pe[Ee]*=Z,pe[Ee]>Re[Ee]&&(Se[Ee]=oe,Re[Ee]=pe[Ee])}let Ue=0;const dt=Ae.data;for(let oe=0;oe<O.length;++oe){const Z=O[oe],[pe,Ee]=se(Se,N,oe,x,R);if(pe){++Ue;for(const qe of Ee)dt[qe]=Ue;we.push({id:Ue,label_id:Z,score:v[oe]})}}return[Ae,we]}function L(N,v=.5,O=.5,x=.8,R=null,K=null){R===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),R=new Set);const fe=N.class_queries_logits??N.logits,de=(N.masks_queries_logits??N.pred_masks).sigmoid();let[ge,Ae,we]=fe.dims;if(we-=1,K!==null&&K.length!==ge)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Se=[];for(let Re=0;Re<ge;++Re){let Ue=K!==null?K[Re]:null,dt=fe[Re],oe=de[Re],[Z,pe,Ee]=re(dt,oe,v,we);if(Ee.length===0){let[je,He]=Ue??oe.dims.slice(-2),at=new I.Tensor("int32",new Int32Array(je*He).fill(-1),[je,He]);Se.push({segmentation:at,segments_info:[]});continue}let[qe,xe]=le(Z,pe,Ee,O,x,R,Ue);Se.push({segmentation:qe,segments_info:xe})}return Se}function G(N,v=.5,O=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class ie extends p.Callable{constructor(v){super(),this.image_mean=v.image_mean??v.mean,this.image_std=v.image_std??v.std,this.resample=v.resample??2,this.do_rescale=v.do_rescale??!0,this.rescale_factor=v.rescale_factor??1/255,this.do_normalize=v.do_normalize,this.do_thumbnail=v.do_thumbnail,this.size=v.size??v.image_size,this.do_resize=v.do_resize??this.size!==void 0,this.size_divisibility=v.size_divisibility??v.size_divisor,this.do_center_crop=v.do_center_crop,this.crop_size=v.crop_size,this.do_convert_rgb=v.do_convert_rgb??!0,this.do_crop_margin=v.do_crop_margin,this.pad_size=v.pad_size,this.do_pad=v.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=v.do_flip_channel_order??!1,this.config=v}async thumbnail(v,O,x=2){const R=v.height,K=v.width,fe=O.height,de=O.width;let ge=Math.min(R,fe),Ae=Math.min(K,de);return ge===R&&Ae===K?v:(R>K?Ae=Math.floor(K*ge/R):K>R&&(ge=Math.floor(R*Ae/K)),await v.resize(Ae,ge,{resample:x}))}async crop_margin(v,O=200){const x=v.clone().grayscale(),R=(0,V.min)(x.data)[0],K=(0,V.max)(x.data)[0]-R;if(K===0)return v;const fe=O/255;let de=x.width,ge=x.height,Ae=0,we=0;const Se=x.data;for(let Re=0;Re<x.height;++Re){const Ue=Re*x.width;for(let dt=0;dt<x.width;++dt)(Se[Ue+dt]-R)/K<fe&&(de=Math.min(de,dt),ge=Math.min(ge,Re),Ae=Math.max(Ae,dt),we=Math.max(we,Re))}return v=await v.crop([de,ge,Ae,we])}pad_image(v,O,x,{mode:R="constant",center:K=!1,constant_values:fe=0}={}){const[de,ge,Ae]=O;let we,Se;if(typeof x=="number"?(we=x,Se=x):x==="square"?we=Se=Math.max(de,ge):(we=x.width,Se=x.height),we!==ge||Se!==de){const Re=new Float32Array(we*Se*Ae);if(Array.isArray(fe))for(let oe=0;oe<Re.length;++oe)Re[oe]=fe[oe%Ae];else fe!==0&&Re.fill(fe);const[Ue,dt]=K?[Math.floor((we-ge)/2),Math.floor((Se-de)/2)]:[0,0];for(let oe=0;oe<de;++oe){const Z=(oe+dt)*we,pe=oe*ge;for(let Ee=0;Ee<ge;++Ee){const qe=(Z+Ee+Ue)*Ae,xe=(pe+Ee)*Ae;for(let je=0;je<Ae;++je)Re[qe+je]=v[xe+je]}}if(R==="symmetric"){if(K)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const oe=de-1,Z=ge-1;for(let pe=0;pe<Se;++pe){const Ee=pe*we,qe=(0,Y.calculateReflectOffset)(pe,oe)*ge;for(let xe=0;xe<we;++xe){if(pe<de&&xe<ge)continue;const je=(Ee+xe)*Ae,He=(qe+(0,Y.calculateReflectOffset)(xe,Z))*Ae;for(let at=0;at<Ae;++at)Re[je+at]=v[He+at]}}}v=Re,O=[Se,we,Ae]}return[v,O]}rescale(v){for(let O=0;O<v.length;++O)v[O]=this.rescale_factor*v[O]}get_resize_output_image_size(v,O){const[x,R]=v.size;let K,fe;if(this.do_thumbnail){const{height:de,width:ge}=O;K=Math.min(de,ge)}else Number.isInteger(O)?(K=O,fe=this.config.max_size??K):O!==void 0&&(K=O.shortest_edge,fe=O.longest_edge);if(K!==void 0||fe!==void 0){const de=K===void 0?1:Math.max(K/x,K/R),ge=x*de,Ae=R*de,we=fe===void 0?1:Math.min(fe/ge,fe/Ae);let Se=Math.floor(Number((ge*we).toFixed(2))),Re=Math.floor(Number((Ae*we).toFixed(2)));return this.size_divisibility!==void 0&&([Se,Re]=_([Se,Re],this.size_divisibility)),[Se,Re]}if(O!==void 0&&O.width!==void 0&&O.height!==void 0){let de=O.width,ge=O.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Ae=ge/R,we=de/x;Math.abs(1-we)<Math.abs(1-Ae)?Ae=we:we=Ae,ge=y(Ae*R,this.config.ensure_multiple_of),de=y(we*x,this.config.ensure_multiple_of)}return[de,ge]}if(this.size_divisibility!==void 0)return _([x,R],this.size_divisibility);if(O.min_pixels!==void 0&&O.max_pixels!==void 0){const{min_pixels:de,max_pixels:ge}=O;return function(Ae,we,Se=28,Re=3136,Ue=1003520){if(Ae<Se||we<Se)throw new Error(`height:${Ae} or width:${we} must be larger than factor:${Se}`);if(Math.max(Ae,we)/Math.min(Ae,we)>200)throw new Error("absolute aspect ratio must be smaller than 200, got "+Math.max(Ae,we)/Math.min(Ae,we));let dt=Math.round(Ae/Se)*Se,oe=Math.round(we/Se)*Se;if(dt*oe>Ue){const Z=Math.sqrt(Ae*we/Ue);dt=Math.floor(Ae/Z/Se)*Se,oe=Math.floor(we/Z/Se)*Se}else if(dt*oe<Re){const Z=Math.sqrt(Re/(Ae*we));dt=Math.ceil(Ae*Z/Se)*Se,oe=Math.ceil(we*Z/Se)*Se}return[dt,oe]}(R,x,this.config.patch_size*this.config.merge_size,de,ge)}throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(O)}`)}async resize(v){const[O,x]=this.get_resize_output_image_size(v,this.size);return await v.resize(O,x,{resample:this.resample})}async preprocess(v,{do_normalize:O=null,do_pad:x=null,do_convert_rgb:R=null,do_convert_grayscale:K=null,do_flip_channel_order:fe=null}={}){this.do_crop_margin&&(v=await this.crop_margin(v));const[de,ge]=v.size;if(R??this.do_convert_rgb?v=v.rgb():K&&(v=v.grayscale()),this.do_resize&&(v=await this.resize(v)),this.do_thumbnail&&(v=await this.thumbnail(v,this.size,this.resample)),this.do_center_crop){let Re,Ue;Number.isInteger(this.crop_size)?(Re=this.crop_size,Ue=this.crop_size):(Re=this.crop_size.width,Ue=this.crop_size.height),v=await v.center_crop(Re,Ue)}const Ae=[v.height,v.width];let we=Float32Array.from(v.data),Se=[v.height,v.width,v.channels];if(this.do_rescale&&this.rescale(we),O??this.do_normalize){let Re=this.image_mean;Array.isArray(this.image_mean)||(Re=new Array(v.channels).fill(Re));let Ue=this.image_std;if(Array.isArray(this.image_std)||(Ue=new Array(v.channels).fill(Re)),Re.length!==v.channels||Ue.length!==v.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${Re.length}) and \`image_std\` (${Ue.length}) must match the number of channels in the image (${v.channels}).`);for(let dt=0;dt<we.length;dt+=v.channels)for(let oe=0;oe<v.channels;++oe)we[dt+oe]=(we[dt+oe]-Re[oe])/Ue[oe]}if(x??this.do_pad){if(this.pad_size)[we,Se]=this.pad_image(we,[v.height,v.width,v.channels],this.pad_size);else if(this.size_divisibility){const[Re,Ue]=_([Se[1],Se[0]],this.size_divisibility);[we,Se]=this.pad_image(we,Se,{width:Re,height:Ue})}}if(fe??this.do_flip_channel_order){if(Se[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let Re=0;Re<we.length;Re+=3){const Ue=we[Re];we[Re]=we[Re+2],we[Re+2]=Ue}}return{original_size:[ge,de],reshaped_input_size:Ae,pixel_values:new I.Tensor("float32",we,Se).permute(2,0,1)}}async _call(v,...O){Array.isArray(v)||(v=[v]);const x=await Promise.all(v.map(R=>this.preprocess(R)));return{pixel_values:(0,I.stack)(x.map(R=>R.pixel_values),0),original_sizes:x.map(R=>R.original_size),reshaped_input_sizes:x.map(R=>R.reshaped_input_size)}}static async from_pretrained(v,O){return new this(await(0,z.getModelJSON)(v,$.IMAGE_PROCESSOR_NAME,!0,O))}}},"./src/base/processing_utils.js":(Te,k,n)=>{n.r(k),n.d(k,{Processor:()=>Y});var p=n("./src/utils/constants.js"),I=n("./src/utils/generic.js"),V=n("./src/utils/hub.js");class Y extends I.Callable{constructor($,y){super(),this.config=$,this.components=y}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template($,y={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template($,{tokenize:!1,...y})}batch_decode(...$){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...$)}decode(...$){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...$)}async _call($,...y){for(const _ of[this.image_processor,this.feature_extractor,this.tokenizer])if(_)return _($,...y);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained($,y){const[_,A]=await Promise.all([this.uses_processor_config?(0,V.getModelJSON)($,p.PROCESSOR_NAME,!0,y):{},Promise.all(this.classes.filter(b=>b in this).map(async b=>{const j=await this[b].from_pretrained($,y);return[b.replace(/_class$/,""),j]})).then(Object.fromEntries)]);return new this(_,A)}}Me(Y,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),Me(Y,"uses_processor_config",!1)},"./src/configs.js":(Te,k,n)=>{n.r(k),n.d(k,{AutoConfig:()=>$,PretrainedConfig:()=>z,getKeyValueShapes:()=>Y});var p=n("./src/utils/core.js"),I=n("./src/utils/hub.js");function V(y){const _={};let A={};switch(y.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":A=V(y.text_config);break;case"moondream1":A=V(y.phi_config);break;case"musicgen":A=V(y.decoder);break;case"multi_modality":A=V(y.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":_.num_heads="n_head",_.num_layers="n_layer",_.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":_.num_heads="num_attention_heads",_.num_layers="num_hidden_layers",_.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":_.num_heads="num_key_value_heads",_.num_layers="num_hidden_layers",_.hidden_size="hidden_size",_.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":case"glm":case"helium":_.num_heads="num_key_value_heads",_.num_layers="num_hidden_layers",_.dim_kv="head_dim";break;case"openelm":_.num_heads="num_kv_heads",_.num_layers="num_transformer_layers",_.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":_.num_heads="num_heads",_.num_layers="num_layers",_.hidden_size="hidden_size";break;case"bloom":_.num_heads="n_head",_.num_layers="n_layer",_.hidden_size="hidden_size";break;case"mpt":_.num_heads="n_heads",_.num_layers="n_layers",_.hidden_size="d_model";break;case"exaone":_.num_heads="num_key_value_heads",_.num_layers="num_layers",_.dim_kv="head_dim",_.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":_.num_decoder_layers="num_decoder_layers",_.num_decoder_heads="num_heads",_.decoder_dim_kv="d_kv",_.num_encoder_layers="num_layers",_.num_encoder_heads="num_heads",_.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":_.num_decoder_layers="decoder_layers",_.num_decoder_heads="decoder_attention_heads",_.decoder_hidden_size="d_model",_.num_encoder_layers="encoder_layers",_.num_encoder_heads="encoder_attention_heads",_.encoder_hidden_size="d_model";break;case"speecht5":_.num_decoder_layers="decoder_layers",_.num_decoder_heads="decoder_attention_heads",_.decoder_hidden_size="hidden_size",_.num_encoder_layers="encoder_layers",_.num_encoder_heads="encoder_attention_heads",_.encoder_hidden_size="hidden_size";break;case"trocr":_.num_encoder_layers=_.num_decoder_layers="decoder_layers",_.num_encoder_heads=_.num_decoder_heads="decoder_attention_heads",_.encoder_hidden_size=_.decoder_hidden_size="d_model";break;case"musicgen_decoder":_.num_encoder_layers=_.num_decoder_layers="num_hidden_layers",_.num_encoder_heads=_.num_decoder_heads="num_attention_heads",_.encoder_hidden_size=_.decoder_hidden_size="hidden_size";break;case"moonshine":_.num_decoder_layers="decoder_num_hidden_layers",_.num_decoder_heads="decoder_num_key_value_heads",_.num_encoder_layers="encoder_num_hidden_layers",_.num_encoder_heads="encoder_num_key_value_heads",_.encoder_hidden_size=_.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const j=V(y.decoder),re="num_decoder_layers"in j,se=(0,p.pick)(y,["model_type","is_encoder_decoder"]);return re?(se.num_decoder_layers=j.num_decoder_layers,se.num_decoder_heads=j.num_decoder_heads,se.decoder_hidden_size=j.decoder_hidden_size,se.num_encoder_layers=j.num_encoder_layers,se.num_encoder_heads=j.num_encoder_heads,se.encoder_hidden_size=j.encoder_hidden_size):(se.num_layers=j.num_layers,se.num_heads=j.num_heads,se.hidden_size=j.hidden_size),se}const b={...A,...(0,p.pick)(y,["model_type","multi_query","is_encoder_decoder"])};for(const j in _)b[j]=y[_[j]];return b}function Y(y,{prefix:_="past_key_values",batch_size:A=1}={}){const b={},j=y.normalized_config;if(j.is_encoder_decoder&&"num_encoder_heads"in j&&"num_decoder_heads"in j){const re=j.encoder_dim_kv??j.encoder_hidden_size/j.num_encoder_heads,se=j.decoder_dim_kv??j.decoder_hidden_size/j.num_decoder_heads,le=[A,j.num_encoder_heads,0,re],L=[A,j.num_decoder_heads,0,se];for(let G=0;G<j.num_decoder_layers;++G)b[`${_}.${G}.encoder.key`]=le,b[`${_}.${G}.encoder.value`]=le,b[`${_}.${G}.decoder.key`]=L,b[`${_}.${G}.decoder.value`]=L}else{const re=j.num_heads,se=j.num_layers,le=j.dim_kv??j.hidden_size/(j.num_attention_heads??re);if(j.model_type==="falcon"){const L=[A*re,0,le];for(let G=0;G<se;++G)b[`${_}.${G}.key`]=L,b[`${_}.${G}.value`]=L}else if(j.multi_query){const L=[A*re,0,2*le];for(let G=0;G<se;++G)b[`${_}.${G}.key_value`]=L}else if(j.model_type==="bloom"){const L=[A*re,le,0],G=[A*re,0,le];for(let ie=0;ie<se;++ie)b[`${_}.${ie}.key`]=L,b[`${_}.${ie}.value`]=G}else if(j.model_type==="openelm")for(let L=0;L<se;++L){const G=[A,re[L],0,le];b[`${_}.${L}.key`]=G,b[`${_}.${L}.value`]=G}else{const L=[A,re,0,le];for(let G=0;G<se;++G)b[`${_}.${G}.key`]=L,b[`${_}.${G}.value`]=L}}return b}class z{constructor(_){Me(this,"model_type",null);Me(this,"is_encoder_decoder",!1);Me(this,"max_position_embeddings");Me(this,"transformers.js_config");Object.assign(this,_),this.normalized_config=V(this)}static async from_pretrained(_,{progress_callback:A=null,config:b=null,cache_dir:j=null,local_files_only:re=!1,revision:se="main"}={}){!b||b instanceof z||(b=new z(b));const le=b??await async function(L,G){return await(0,I.getModelJSON)(L,"config.json",!0,G)}(_,{progress_callback:A,config:b,cache_dir:j,local_files_only:re,revision:se});return new this(le)}}class ${static async from_pretrained(..._){return z.from_pretrained(..._)}}},"./src/env.js":(Te,k,n)=>{var O,x;n.r(k),n.d(k,{apis:()=>se,env:()=>N});var p=n("?569f"),I=n("?3f59"),V=n("?154a");const Y=typeof window<"u"&&window.document!==void 0,z=typeof self<"u"&&((O=self.constructor)==null?void 0:O.name)==="DedicatedWorkerGlobalScope",$=typeof self<"u"&&"caches"in self,y=typeof navigator<"u"&&"gpu"in navigator,_=typeof navigator<"u"&&"ml"in navigator,A=typeof process<"u",b=A&&((x=process==null?void 0:process.release)==null?void 0:x.name)==="node",j=!v(p),re=!v(I),se=Object.freeze({IS_BROWSER_ENV:Y,IS_WEBWORKER_ENV:z,IS_WEB_CACHE_AVAILABLE:$,IS_WEBGPU_AVAILABLE:y,IS_WEBNN_AVAILABLE:_,IS_PROCESS_AVAILABLE:A,IS_NODE_ENV:b,IS_FS_AVAILABLE:j,IS_PATH_AVAILABLE:re}),le=j&&re;let L="./";if(le){const R=Object({url:typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:er&&er.tagName.toUpperCase()==="SCRIPT"&&er.src||new URL("kokoro.umd.js",document.baseURI).href}).url;R?L=I.dirname(I.dirname(V.fileURLToPath(R))):typeof __dirname<"u"&&(L=I.dirname(__dirname))}const G=le?I.join(L,"/.cache/"):null,ie="/models/",N={version:"3.3.3",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(Y||z),localModelPath:le?I.join(L,ie):ie,useFS:j,useBrowserCache:$,useFSCache:j,cacheDir:G,useCustomCache:!1,customCache:null};function v(R){return Object.keys(R).length===0}},"./src/generation/configuration_utils.js":(Te,k,n)=>{n.r(k),n.d(k,{GenerationConfig:()=>I});var p=n("./src/utils/core.js");class I{constructor(Y){Me(this,"max_length",20);Me(this,"max_new_tokens",null);Me(this,"min_length",0);Me(this,"min_new_tokens",null);Me(this,"early_stopping",!1);Me(this,"max_time",null);Me(this,"do_sample",!1);Me(this,"num_beams",1);Me(this,"num_beam_groups",1);Me(this,"penalty_alpha",null);Me(this,"use_cache",!0);Me(this,"temperature",1);Me(this,"top_k",50);Me(this,"top_p",1);Me(this,"typical_p",1);Me(this,"epsilon_cutoff",0);Me(this,"eta_cutoff",0);Me(this,"diversity_penalty",0);Me(this,"repetition_penalty",1);Me(this,"encoder_repetition_penalty",1);Me(this,"length_penalty",1);Me(this,"no_repeat_ngram_size",0);Me(this,"bad_words_ids",null);Me(this,"force_words_ids",null);Me(this,"renormalize_logits",!1);Me(this,"constraints",null);Me(this,"forced_bos_token_id",null);Me(this,"forced_eos_token_id",null);Me(this,"remove_invalid_values",!1);Me(this,"exponential_decay_length_penalty",null);Me(this,"suppress_tokens",null);Me(this,"streamer",null);Me(this,"begin_suppress_tokens",null);Me(this,"forced_decoder_ids",null);Me(this,"guidance_scale",null);Me(this,"num_return_sequences",1);Me(this,"output_attentions",!1);Me(this,"output_hidden_states",!1);Me(this,"output_scores",!1);Me(this,"return_dict_in_generate",!1);Me(this,"pad_token_id",null);Me(this,"bos_token_id",null);Me(this,"eos_token_id",null);Me(this,"encoder_no_repeat_ngram_size",0);Me(this,"decoder_start_token_id",null);Me(this,"generation_kwargs",{});Object.assign(this,(0,p.pick)(Y,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(Te,k,n)=>{n.r(k),n.d(k,{ClassifierFreeGuidanceLogitsProcessor:()=>L,ForcedBOSTokenLogitsProcessor:()=>$,ForcedEOSTokenLogitsProcessor:()=>y,LogitsProcessor:()=>V,LogitsProcessorList:()=>z,LogitsWarper:()=>Y,MinLengthLogitsProcessor:()=>re,MinNewTokensLengthLogitsProcessor:()=>se,NoBadWordsLogitsProcessor:()=>le,NoRepeatNGramLogitsProcessor:()=>b,RepetitionPenaltyLogitsProcessor:()=>j,SuppressTokensAtBeginLogitsProcessor:()=>_,TemperatureLogitsWarper:()=>G,TopKLogitsWarper:()=>N,TopPLogitsWarper:()=>ie,WhisperTimeStampLogitsProcessor:()=>A});var p=n("./src/utils/generic.js");n("./src/utils/tensor.js");var I=n("./src/utils/maths.js");class V extends p.Callable{_call(O,x){throw Error("`_call` should be implemented in a subclass")}}class Y extends p.Callable{_call(O,x){throw Error("`_call` should be implemented in a subclass")}}class z extends p.Callable{constructor(){super(),this.processors=[]}push(O){this.processors.push(O)}extend(O){this.processors.push(...O)}_call(O,x){let R=x;for(const K of this.processors)R=K(O,R);return R}[Symbol.iterator](){return this.processors.values()}}class $ extends V{constructor(O){super(),this.bos_token_id=O}_call(O,x){for(let R=0;R<O.length;++R)if(O[R].length===1){const K=x[R].data;K.fill(-1/0),K[this.bos_token_id]=0}return x}}class y extends V{constructor(O,x){super(),this.max_length=O,this.eos_token_id=Array.isArray(x)?x:[x]}_call(O,x){for(let R=0;R<O.length;++R)if(O[R].length===this.max_length-1){const K=x[R].data;K.fill(-1/0);for(const fe of this.eos_token_id)K[fe]=0}return x}}class _ extends V{constructor(O,x){super(),this.begin_suppress_tokens=O,this.begin_index=x}_call(O,x){for(let R=0;R<O.length;++R)if(O[R].length===this.begin_index){const K=x[R].data;for(const fe of this.begin_suppress_tokens)K[fe]=-1/0}return x}}class A extends V{constructor(O,x){super(),this.eos_token_id=Array.isArray(O.eos_token_id)?O.eos_token_id[0]:O.eos_token_id,this.no_timestamps_token_id=O.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=x.length,x.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=O.max_initial_timestamp_index}_call(O,x){for(let R=0;R<O.length;++R){const K=x[R].data;if(K[this.no_timestamps_token_id]=-1/0,O[R].length===this.begin_index-1){K.fill(-1/0),K[this.timestamp_begin]=0;continue}const fe=O[R].slice(this.begin_index),de=fe.length>=1&&fe[fe.length-1]>=this.timestamp_begin,ge=fe.length<2||fe[fe.length-2]>=this.timestamp_begin;if(de&&(ge?K.subarray(this.timestamp_begin).fill(-1/0):K.subarray(0,this.eos_token_id).fill(-1/0)),O[R].length===this.begin_index&&this.max_initial_timestamp_index!==null){const we=this.timestamp_begin+this.max_initial_timestamp_index;K.subarray(we+1).fill(-1/0)}const Ae=(0,I.log_softmax)(K);Math.log(Ae.subarray(this.timestamp_begin).map(Math.exp).reduce((we,Se)=>we+Se))>(0,I.max)(Ae.subarray(0,this.timestamp_begin))[0]&&K.subarray(0,this.timestamp_begin).fill(-1/0)}return x}}class b extends V{constructor(O){super(),this.no_repeat_ngram_size=O}getNgrams(O){const x=O.length,R=[];for(let fe=0;fe<x+1-this.no_repeat_ngram_size;++fe){const de=[];for(let ge=0;ge<this.no_repeat_ngram_size;++ge)de.push(O[fe+ge]);R.push(de.map(Number))}const K=new Map;for(const fe of R){const de=fe.slice(0,fe.length-1),ge=JSON.stringify(de),Ae=K.get(ge)??[];Ae.push(fe[fe.length-1]),K.set(ge,Ae)}return K}getGeneratedNgrams(O,x){const R=x.slice(x.length+1-this.no_repeat_ngram_size,x.length);return O.get(JSON.stringify(R.map(Number)))??[]}calcBannedNgramTokens(O){const x=[];if(O.length+1<this.no_repeat_ngram_size)return x;{const R=this.getNgrams(O);return this.getGeneratedNgrams(R,O)}}_call(O,x){for(let R=0;R<O.length;++R){const K=x[R].data,fe=this.calcBannedNgramTokens(O[R]);for(const de of fe)K[de]=-1/0}return x}}class j extends V{constructor(O){super(),this.penalty=O}_call(O,x){for(let R=0;R<O.length;++R){const K=x[R].data;for(const fe of new Set(O[R])){const de=Number(fe);K[de]<0?K[de]*=this.penalty:K[de]/=this.penalty}}return x}}class re extends V{constructor(O,x){super(),this.min_length=O,this.eos_token_id=Array.isArray(x)?x:[x]}_call(O,x){for(let R=0;R<O.length;++R)if(O[R].length<this.min_length){const K=x[R].data;for(const fe of this.eos_token_id)K[fe]=-1/0}return x}}class se extends V{constructor(O,x,R){super(),this.prompt_length_to_skip=O,this.min_new_tokens=x,this.eos_token_id=Array.isArray(R)?R:[R]}_call(O,x){for(let R=0;R<O.length;++R)if(O[R].length-this.prompt_length_to_skip<this.min_new_tokens){const K=x[R].data;for(const fe of this.eos_token_id)K[fe]=-1/0}return x}}class le extends V{constructor(O,x){super(),this.bad_words_ids=O,this.eos_token_id=Array.isArray(x)?x:[x]}_call(O,x){for(let R=0;R<O.length;++R){const K=x[R].data,fe=O[R];for(const de of this.bad_words_ids){let ge=!0;for(let Ae=1;Ae<=de.length-1&&de.length<fe.length;++Ae)if(de.at(-Ae-1)!=fe.at(-Ae)){ge=!1;break}ge&&(K[de.at(-1)]=-1/0)}}return x}}class L extends V{constructor(O){if(super(),O<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${O}.`);this.guidance_scale=O}_call(O,x){if(x.dims[0]!==2*O.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${x.dims[0]} for the logits and ${O.length} for the input ids.`);const R=O.length,K=x.slice([0,R],null),fe=x.slice([R,x.dims[0]],null);for(let de=0;de<fe.data.length;++de)fe.data[de]+=(K.data[de]-fe.data[de])*this.guidance_scale;return fe}}class G extends Y{constructor(O){super(),this.temperature=O}_call(O,x){const R=x.data;for(let K=0;K<R.length;++K)R[K]/=this.temperature;return x}}class ie extends Y{constructor(O,{filter_value:x=-1/0,min_tokens_to_keep:R=1}={}){if(super(),O<0||O>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${O}`);if(!Number.isInteger(R)||R<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${R}`);this.top_p=O,this.filter_value=x,this.min_tokens_to_keep=R}}class N extends Y{constructor(O,{filter_value:x=-1/0,min_tokens_to_keep:R=1}={}){if(super(),!Number.isInteger(O)||O<0)throw new Error(`\`top_k\` must be a positive integer, but is ${O}`);this.top_k=Math.max(O,R),this.filter_value=x}}},"./src/generation/logits_sampler.js":(Te,k,n)=>{n.r(k),n.d(k,{LogitsSampler:()=>Y});var p=n("./src/utils/generic.js"),I=n("./src/utils/tensor.js"),V=n("./src/utils/maths.js");n("./src/generation/configuration_utils.js");class Y extends p.Callable{constructor(A){super(),this.generation_config=A}async _call(A){return this.sample(A)}async sample(A){throw Error("sample should be implemented in subclasses.")}getLogits(A,b){let j=A.dims.at(-1),re=A.data;if(b===-1)re=re.slice(-j);else{let se=b*j;re=re.slice(se,se+j)}return re}randomSelect(A){let b=0;for(let re=0;re<A.length;++re)b+=A[re];let j=Math.random()*b;for(let re=0;re<A.length;++re)if(j-=A[re],j<=0)return re;return 0}static getSampler(A){if(A.do_sample)return new $(A);if(A.num_beams>1)return new y(A);if(A.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${A.num_return_sequences}.`);return new z(A)}}class z extends Y{async sample(A){const b=(0,V.max)(A.data)[1];return[[BigInt(b),0]]}}class $ extends Y{async sample(A){let b=A.dims.at(-1);this.generation_config.top_k>0&&(b=Math.min(this.generation_config.top_k,b));const[j,re]=await(0,I.topk)(A,b),se=(0,V.softmax)(j.data);return Array.from({length:this.generation_config.num_beams},()=>{const le=this.randomSelect(se);return[re.data[le],Math.log(se[le])]})}}class y extends Y{async sample(A){let b=A.dims.at(-1);this.generation_config.top_k>0&&(b=Math.min(this.generation_config.top_k,b));const[j,re]=await(0,I.topk)(A,b),se=(0,V.softmax)(j.data);return Array.from({length:this.generation_config.num_beams},(le,L)=>[re.data[L],Math.log(se[L])])}}},"./src/generation/stopping_criteria.js":(Te,k,n)=>{n.r(k),n.d(k,{EosTokenCriteria:()=>z,InterruptableStoppingCriteria:()=>$,MaxLengthCriteria:()=>Y,StoppingCriteria:()=>I,StoppingCriteriaList:()=>V});var p=n("./src/utils/generic.js");class I extends p.Callable{_call(_,A){throw Error("StoppingCriteria needs to be subclassed")}}class V extends p.Callable{constructor(){super(),this.criteria=[]}push(_){this.criteria.push(_)}extend(_){_ instanceof V?_=_.criteria:_ instanceof I&&(_=[_]),this.criteria.push(..._)}_call(_,A){const b=new Array(_.length).fill(!1);for(const j of this.criteria){const re=j(_,A);for(let se=0;se<b.length;++se)b[se]||(b[se]=re[se])}return b}[Symbol.iterator](){return this.criteria.values()}}class Y extends I{constructor(_,A=null){super(),this.max_length=_,this.max_position_embeddings=A}_call(_){return _.map(A=>A.length>=this.max_length)}}class z extends I{constructor(_){super(),Array.isArray(_)||(_=[_]),this.eos_token_id=_}_call(_,A){return _.map(b=>{const j=b.at(-1);return this.eos_token_id.some(re=>j==re)})}}class $ extends I{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(_,A){return new Array(_.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(Te,k,n)=>{n.r(k),n.d(k,{BaseStreamer:()=>Y,TextStreamer:()=>$,WhisperTextStreamer:()=>y});var p=n("./src/utils/core.js"),I=n("./src/tokenizers.js"),V=n("./src/env.js");class Y{put(A){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const z=V.apis.IS_PROCESS_AVAILABLE?_=>process.stdout.write(_):_=>console.log(_);class $ extends Y{constructor(A,{skip_prompt:b=!1,callback_function:j=null,token_callback_function:re=null,skip_special_tokens:se=!0,decode_kwargs:le={},...L}={}){super(),this.tokenizer=A,this.skip_prompt=b,this.callback_function=j??z,this.token_callback_function=re,this.decode_kwargs={skip_special_tokens:se,...le,...L},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(A){var se;if(A.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt)return void(this.next_tokens_are_prompt=!1);const b=A[0];(se=this.token_callback_function)==null||se.call(this,b),this.token_cache=(0,p.mergeArrays)(this.token_cache,b);const j=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let re;j.endsWith(`
`)?(re=j.slice(this.print_len),this.token_cache=[],this.print_len=0):j.length>0&&(0,I.is_chinese_char)(j.charCodeAt(j.length-1))?(re=j.slice(this.print_len),this.print_len+=re.length):(re=j.slice(this.print_len,j.lastIndexOf(" ")+1),this.print_len+=re.length),this.on_finalized_text(re,!1)}end(){let A;this.token_cache.length>0?(A=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):A="",this.next_tokens_are_prompt=!0,this.on_finalized_text(A,!0)}on_finalized_text(A,b){var j,re;A.length>0&&((j=this.callback_function)==null||j.call(this,A)),b&&this.callback_function===z&&V.apis.IS_PROCESS_AVAILABLE&&((re=this.callback_function)==null||re.call(this,`
`))}}class y extends ${constructor(A,{skip_prompt:b=!1,callback_function:j=null,token_callback_function:re=null,on_chunk_start:se=null,on_chunk_end:le=null,on_finalize:L=null,time_precision:G=.02,skip_special_tokens:ie=!0,decode_kwargs:N={}}={}){super(A,{skip_prompt:b,skip_special_tokens:ie,callback_function:j,token_callback_function:re,decode_kwargs:N}),this.timestamp_begin=A.timestamp_begin,this.on_chunk_start=se,this.on_chunk_end=le,this.on_finalize=L,this.time_precision=G,this.waiting_for_timestamp=!1}put(A){var j,re;if(A.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const b=A[0];if(b.length===1){const se=Number(b[0])-this.timestamp_begin;if(se>=0){const le=se*this.time_precision;this.waiting_for_timestamp?(j=this.on_chunk_end)==null||j.call(this,le):(re=this.on_chunk_start)==null||re.call(this,le),this.waiting_for_timestamp=!this.waiting_for_timestamp,A=[[]]}}return super.put(A)}end(){var A;super.end(),(A=this.on_finalize)==null||A.call(this)}}},"./src/models.js":(Te,k,n)=>{n.r(k),n.d(k,{ASTForAudioClassification:()=>_l,ASTModel:()=>fl,ASTPreTrainedModel:()=>qi,AlbertForMaskedLM:()=>ye,AlbertForQuestionAnswering:()=>Mt,AlbertForSequenceClassification:()=>_t,AlbertModel:()=>Le,AlbertPreTrainedModel:()=>Ge,AutoModel:()=>Si,AutoModelForAudioClassification:()=>qo,AutoModelForAudioFrameClassification:()=>Tp,AutoModelForCTC:()=>kp,AutoModelForCausalLM:()=>Uo,AutoModelForDepthEstimation:()=>Ep,AutoModelForDocumentQuestionAnswering:()=>$p,AutoModelForImageClassification:()=>dr,AutoModelForImageFeatureExtraction:()=>Sp,AutoModelForImageMatting:()=>Ts,AutoModelForImageSegmentation:()=>cs,AutoModelForImageToImage:()=>Wo,AutoModelForMaskGeneration:()=>xp,AutoModelForMaskedLM:()=>yp,AutoModelForNormalEstimation:()=>Ho,AutoModelForObjectDetection:()=>vp,AutoModelForPoseEstimation:()=>Ko,AutoModelForQuestionAnswering:()=>Qr,AutoModelForSemanticSegmentation:()=>bp,AutoModelForSeq2SeqLM:()=>Jt,AutoModelForSequenceClassification:()=>gp,AutoModelForSpeechSeq2Seq:()=>Jc,AutoModelForTextToSpectrogram:()=>ts,AutoModelForTextToWaveform:()=>Zc,AutoModelForTokenClassification:()=>wp,AutoModelForUniversalSegmentation:()=>Vo,AutoModelForVision2Seq:()=>or,AutoModelForXVector:()=>Mp,AutoModelForZeroShotObjectDetection:()=>Go,BartForConditionalGeneration:()=>Fr,BartForSequenceClassification:()=>Hr,BartModel:()=>Tn,BartPretrainedModel:()=>gr,BaseModelOutput:()=>nt,BeitForImageClassification:()=>za,BeitModel:()=>Fa,BeitPreTrainedModel:()=>Js,BertForMaskedLM:()=>gt,BertForQuestionAnswering:()=>ae,BertForSequenceClassification:()=>yt,BertForTokenClassification:()=>U,BertModel:()=>ht,BertPreTrainedModel:()=>ft,BlenderbotForConditionalGeneration:()=>Kr,BlenderbotModel:()=>Yr,BlenderbotPreTrainedModel:()=>rn,BlenderbotSmallForConditionalGeneration:()=>zs,BlenderbotSmallModel:()=>En,BlenderbotSmallPreTrainedModel:()=>ln,BloomForCausalLM:()=>$u,BloomModel:()=>Tu,BloomPreTrainedModel:()=>ya,CLIPModel:()=>El,CLIPPreTrainedModel:()=>bs,CLIPSegForImageSegmentation:()=>ui,CLIPSegModel:()=>Nl,CLIPSegPreTrainedModel:()=>li,CLIPTextModel:()=>Qn,CLIPTextModelWithProjection:()=>Sl,CLIPVisionModel:()=>ip,CLIPVisionModelWithProjection:()=>Cl,CamembertForMaskedLM:()=>ar,CamembertForQuestionAnswering:()=>yn,CamembertForSequenceClassification:()=>Cn,CamembertForTokenClassification:()=>wn,CamembertModel:()=>F,CamembertPreTrainedModel:()=>gn,CausalLMOutput:()=>Us,CausalLMOutputWithPast:()=>Zp,ChineseCLIPModel:()=>zl,ChineseCLIPPreTrainedModel:()=>Fl,ClapAudioModelWithProjection:()=>dc,ClapModel:()=>lc,ClapPreTrainedModel:()=>$i,ClapTextModelWithProjection:()=>uc,CodeGenForCausalLM:()=>Xl,CodeGenModel:()=>Ql,CodeGenPreTrainedModel:()=>sa,CohereForCausalLM:()=>pu,CohereModel:()=>cu,CoherePreTrainedModel:()=>ha,ConvBertForMaskedLM:()=>hn,ConvBertForQuestionAnswering:()=>sn,ConvBertForSequenceClassification:()=>Gt,ConvBertForTokenClassification:()=>Dn,ConvBertModel:()=>Gr,ConvBertPreTrainedModel:()=>Dr,ConvNextForImageClassification:()=>bd,ConvNextModel:()=>yd,ConvNextPreTrainedModel:()=>Xa,ConvNextV2ForImageClassification:()=>xd,ConvNextV2Model:()=>vd,ConvNextV2PreTrainedModel:()=>Ya,DPTForDepthEstimation:()=>ad,DPTModel:()=>id,DPTPreTrainedModel:()=>Wa,DebertaForMaskedLM:()=>Hn,DebertaForQuestionAnswering:()=>fn,DebertaForSequenceClassification:()=>Nr,DebertaForTokenClassification:()=>Wr,DebertaModel:()=>ws,DebertaPreTrainedModel:()=>In,DebertaV2ForMaskedLM:()=>ys,DebertaV2ForQuestionAnswering:()=>ls,DebertaV2ForSequenceClassification:()=>os,DebertaV2ForTokenClassification:()=>Jn,DebertaV2Model:()=>as,DebertaV2PreTrainedModel:()=>pr,DecisionTransformerModel:()=>Ec,DecisionTransformerPreTrainedModel:()=>$c,DeiTForImageClassification:()=>Zu,DeiTModel:()=>Ju,DeiTPreTrainedModel:()=>Da,DepthAnythingForDepthEstimation:()=>od,DepthAnythingPreTrainedModel:()=>Ha,DepthProForDepthEstimation:()=>pd,DepthProPreTrainedModel:()=>cd,DetrForObjectDetection:()=>Oa,DetrForSegmentation:()=>La,DetrModel:()=>qu,DetrObjectDetectionOutput:()=>Na,DetrPreTrainedModel:()=>gi,DetrSegmentationOutput:()=>Wu,Dinov2ForImageClassification:()=>Md,Dinov2Model:()=>kd,Dinov2PreTrainedModel:()=>Ja,Dinov2WithRegistersForImageClassification:()=>ks,Dinov2WithRegistersModel:()=>es,Dinov2WithRegistersPreTrainedModel:()=>Gn,DistilBertForMaskedLM:()=>u,DistilBertForQuestionAnswering:()=>Zn,DistilBertForSequenceClassification:()=>zn,DistilBertForTokenClassification:()=>On,DistilBertModel:()=>Kn,DistilBertPreTrainedModel:()=>Fn,DonutSwinModel:()=>wd,DonutSwinPreTrainedModel:()=>gd,EfficientNetForImageClassification:()=>gc,EfficientNetModel:()=>_c,EfficientNetPreTrainedModel:()=>vo,ElectraForMaskedLM:()=>St,ElectraForQuestionAnswering:()=>Mn,ElectraForSequenceClassification:()=>Bt,ElectraForTokenClassification:()=>Ir,ElectraModel:()=>it,ElectraPreTrainedModel:()=>an,EsmForMaskedLM:()=>q,EsmForSequenceClassification:()=>_e,EsmForTokenClassification:()=>Ie,EsmModel:()=>T,EsmPreTrainedModel:()=>m,ExaoneForCausalLM:()=>ru,ExaoneModel:()=>di,ExaonePreTrainedModel:()=>la,FalconForCausalLM:()=>wo,FalconModel:()=>oc,FalconPreTrainedModel:()=>go,FastViTForImageClassification:()=>Lu,FastViTModel:()=>hi,FastViTPreTrainedModel:()=>Pa,Florence2ForConditionalGeneration:()=>xl,Florence2PreTrainedModel:()=>vl,GLPNForDepthEstimation:()=>_d,GLPNModel:()=>fd,GLPNPreTrainedModel:()=>Qa,GPT2LMHeadModel:()=>Rl,GPT2Model:()=>Bl,GPT2PreTrainedModel:()=>Zi,GPTBigCodeForCausalLM:()=>Kl,GPTBigCodeModel:()=>Hl,GPTBigCodePreTrainedModel:()=>na,GPTJForCausalLM:()=>xr,GPTJModel:()=>Wl,GPTJPreTrainedModel:()=>ra,GPTNeoForCausalLM:()=>Vl,GPTNeoModel:()=>Ul,GPTNeoPreTrainedModel:()=>ea,GPTNeoXForCausalLM:()=>ql,GPTNeoXModel:()=>Gl,GPTNeoXPreTrainedModel:()=>ta,Gemma2ForCausalLM:()=>fu,Gemma2Model:()=>mu,Gemma2PreTrainedModel:()=>pi,GemmaForCausalLM:()=>ma,GemmaModel:()=>hu,GemmaPreTrainedModel:()=>ci,GlmForCausalLM:()=>Qs,GlmModel:()=>tu,GlmPreTrainedModel:()=>oa,GraniteForCausalLM:()=>du,GraniteModel:()=>uu,GranitePreTrainedModel:()=>pa,GroundingDinoForObjectDetection:()=>Td,GroundingDinoPreTrainedModel:()=>Ms,GroupViTModel:()=>Ca,GroupViTPreTrainedModel:()=>Ou,HeliumForCausalLM:()=>eu,HeliumModel:()=>Zl,HeliumPreTrainedModel:()=>aa,HieraForImageClassification:()=>td,HieraModel:()=>ed,HieraPreTrainedModel:()=>ja,HubertForCTC:()=>Xd,HubertForSequenceClassification:()=>Yd,HubertModel:()=>Qd,HubertPreTrainedModel:()=>ap,IJepaForImageClassification:()=>xs,IJepaModel:()=>vs,IJepaPreTrainedModel:()=>ds,Idefics3ForConditionalGeneration:()=>Qi,Idefics3PreTrainedModel:()=>Tl,ImageMattingOutput:()=>Pp,JAISLMHeadModel:()=>jl,JAISModel:()=>Dl,JAISPreTrainedModel:()=>Bs,JinaCLIPModel:()=>Ji,JinaCLIPPreTrainedModel:()=>oi,JinaCLIPTextModel:()=>Ol,JinaCLIPVisionModel:()=>Ll,LlamaForCausalLM:()=>Jl,LlamaModel:()=>Yl,LlamaPreTrainedModel:()=>ia,LlavaForConditionalGeneration:()=>Ns,LlavaOnevisionForConditionalGeneration:()=>Ki,LlavaPreTrainedModel:()=>bl,LongT5ForConditionalGeneration:()=>Ur,LongT5Model:()=>fr,LongT5PreTrainedModel:()=>br,M2M100ForConditionalGeneration:()=>Fd,M2M100Model:()=>ro,M2M100PreTrainedModel:()=>to,MBartForCausalLM:()=>Ln,MBartForConditionalGeneration:()=>rt,MBartForSequenceClassification:()=>Et,MBartModel:()=>$n,MBartPreTrainedModel:()=>jt,MPNetForMaskedLM:()=>Xt,MPNetForQuestionAnswering:()=>$r,MPNetForSequenceClassification:()=>qr,MPNetForTokenClassification:()=>jr,MPNetModel:()=>Qt,MPNetPreTrainedModel:()=>wt,MT5ForConditionalGeneration:()=>Lt,MT5Model:()=>Lr,MT5PreTrainedModel:()=>vr,MarianMTModel:()=>Id,MarianModel:()=>bn,MarianPreTrainedModel:()=>eo,MaskFormerForInstanceSegmentation:()=>md,MaskFormerModel:()=>hd,MaskFormerPreTrainedModel:()=>Ka,MaskedLMOutput:()=>mn,MgpstrForSceneTextRecognition:()=>Ic,MgpstrModelOutput:()=>Pc,MgpstrPreTrainedModel:()=>Ac,MistralForCausalLM:()=>mo,MistralModel:()=>ho,MistralPreTrainedModel:()=>po,MobileBertForMaskedLM:()=>kt,MobileBertForQuestionAnswering:()=>tr,MobileBertForSequenceClassification:()=>Dt,MobileBertModel:()=>Ke,MobileBertPreTrainedModel:()=>De,MobileLLMForCausalLM:()=>su,MobileLLMModel:()=>nu,MobileLLMPreTrainedModel:()=>ua,MobileNetV1ForImageClassification:()=>bc,MobileNetV1Model:()=>yc,MobileNetV1PreTrainedModel:()=>Mo,MobileNetV2ForImageClassification:()=>xc,MobileNetV2Model:()=>vc,MobileNetV2PreTrainedModel:()=>To,MobileNetV3ForImageClassification:()=>kc,MobileNetV3Model:()=>Eo,MobileNetV3PreTrainedModel:()=>$o,MobileNetV4ForImageClassification:()=>Tc,MobileNetV4Model:()=>Mc,MobileNetV4PreTrainedModel:()=>So,MobileViTForImageClassification:()=>Ru,MobileViTModel:()=>Ys,MobileViTPreTrainedModel:()=>mi,MobileViTV2ForImageClassification:()=>ju,MobileViTV2Model:()=>Du,MobileViTV2PreTrainedModel:()=>fi,ModelOutput:()=>Be,ModernBertForMaskedLM:()=>Oe,ModernBertForSequenceClassification:()=>tt,ModernBertForTokenClassification:()=>Ze,ModernBertModel:()=>me,ModernBertPreTrainedModel:()=>H,Moondream1ForConditionalGeneration:()=>Un,MoonshineForConditionalGeneration:()=>yl,MoonshineModel:()=>sp,MoonshinePreTrainedModel:()=>Hi,MptForCausalLM:()=>Su,MptModel:()=>Eu,MptPreTrainedModel:()=>ba,MultiModalityCausalLM:()=>Cc,MultiModalityPreTrainedModel:()=>Sc,MusicgenForCausalLM:()=>wc,MusicgenForConditionalGeneration:()=>ko,MusicgenModel:()=>lp,MusicgenPreTrainedModel:()=>xo,NomicBertModel:()=>$t,NomicBertPreTrainedModel:()=>ct,OPTForCausalLM:()=>Pu,OPTModel:()=>Cu,OPTPreTrainedModel:()=>va,Olmo2ForCausalLM:()=>lu,Olmo2Model:()=>ou,Olmo2PreTrainedModel:()=>ca,OlmoForCausalLM:()=>au,OlmoModel:()=>iu,OlmoPreTrainedModel:()=>da,OpenELMForCausalLM:()=>gu,OpenELMModel:()=>_u,OpenELMPreTrainedModel:()=>fa,OwlViTForObjectDetection:()=>Vu,OwlViTModel:()=>Uu,OwlViTPreTrainedModel:()=>Aa,Owlv2ForObjectDetection:()=>Gu,Owlv2Model:()=>_i,Owlv2PreTrainedModel:()=>Ia,PaliGemmaForConditionalGeneration:()=>Ml,PaliGemmaPreTrainedModel:()=>kl,PatchTSMixerForPrediction:()=>Po,PatchTSMixerModel:()=>Oc,PatchTSMixerPreTrainedModel:()=>Ds,PatchTSTForPrediction:()=>zc,PatchTSTModel:()=>Fc,PatchTSTPreTrainedModel:()=>Co,Phi3ForCausalLM:()=>Mu,Phi3Model:()=>ku,Phi3PreTrainedModel:()=>wa,Phi3VForCausalLM:()=>Xi,Phi3VPreTrainedModel:()=>$l,PhiForCausalLM:()=>xu,PhiModel:()=>Vn,PhiPreTrainedModel:()=>ga,PreTrainedModel:()=>ue,PretrainedMixin:()=>Sr,PvtForImageClassification:()=>Xs,PvtModel:()=>Fu,PvtPreTrainedModel:()=>Ma,PyAnnoteForAudioFrameClassification:()=>Bd,PyAnnoteModel:()=>so,PyAnnotePreTrainedModel:()=>no,QuestionAnsweringModelOutput:()=>vn,Qwen2ForCausalLM:()=>yu,Qwen2Model:()=>wu,Qwen2PreTrainedModel:()=>_a,Qwen2VLForConditionalGeneration:()=>vu,Qwen2VLPreTrainedModel:()=>bu,RTDetrForObjectDetection:()=>Hu,RTDetrModel:()=>Ra,RTDetrObjectDetectionOutput:()=>Ku,RTDetrPreTrainedModel:()=>Ba,ResNetForImageClassification:()=>yi,ResNetModel:()=>Va,ResNetPreTrainedModel:()=>Ua,RoFormerForMaskedLM:()=>Ft,RoFormerForQuestionAnswering:()=>yr,RoFormerForSequenceClassification:()=>Rt,RoFormerForTokenClassification:()=>_r,RoFormerModel:()=>It,RoFormerPreTrainedModel:()=>mt,RobertaForMaskedLM:()=>nl,RobertaForQuestionAnswering:()=>il,RobertaForSequenceClassification:()=>Pn,RobertaForTokenClassification:()=>sl,RobertaModel:()=>rl,RobertaPreTrainedModel:()=>us,SamImageSegmentationOutput:()=>Ad,SamModel:()=>Pd,SamPreTrainedModel:()=>Cd,SapiensForDepthEstimation:()=>ud,SapiensForNormalEstimation:()=>dd,SapiensForSemanticSegmentation:()=>ld,SapiensPreTrainedModel:()=>vi,SegformerForImageClassification:()=>pc,SegformerForSemanticSegmentation:()=>hc,SegformerModel:()=>op,SegformerPreTrainedModel:()=>Ei,Seq2SeqLMOutput:()=>Jp,SequenceClassifierOutput:()=>lr,SiglipModel:()=>Pl,SiglipPreTrainedModel:()=>Yi,SiglipTextModel:()=>Al,SiglipVisionModel:()=>Il,SpeechT5ForSpeechToText:()=>oo,SpeechT5ForTextToSpeech:()=>lo,SpeechT5HifiGan:()=>uo,SpeechT5Model:()=>Ti,SpeechT5PreTrainedModel:()=>Mi,SqueezeBertForMaskedLM:()=>ee,SqueezeBertForQuestionAnswering:()=>ve,SqueezeBertForSequenceClassification:()=>ce,SqueezeBertModel:()=>M,SqueezeBertPreTrainedModel:()=>Ne,StableLmForCausalLM:()=>fc,StableLmModel:()=>mc,StableLmPreTrainedModel:()=>bo,Starcoder2ForCausalLM:()=>_o,Starcoder2Model:()=>ac,Starcoder2PreTrainedModel:()=>fo,StyleTextToSpeech2Model:()=>sc,StyleTextToSpeech2PreTrainedModel:()=>nc,Swin2SRForImageSuperResolution:()=>sd,Swin2SRModel:()=>qa,Swin2SRPreTrainedModel:()=>Ga,SwinForImageClassification:()=>nd,SwinModel:()=>rd,SwinPreTrainedModel:()=>bi,T5ForConditionalGeneration:()=>Or,T5Model:()=>nr,T5PreTrainedModel:()=>Ot,TableTransformerForObjectDetection:()=>Xu,TableTransformerModel:()=>Qu,TableTransformerObjectDetectionOutput:()=>Yu,TableTransformerPreTrainedModel:()=>wi,TokenClassifierOutput:()=>un,TrOCRForCausalLM:()=>ic,TrOCRPreTrainedModel:()=>co,UniSpeechForCTC:()=>jd,UniSpeechForSequenceClassification:()=>ao,UniSpeechModel:()=>io,UniSpeechPreTrainedModel:()=>xi,UniSpeechSatForAudioFrameClassification:()=>qd,UniSpeechSatForCTC:()=>Vd,UniSpeechSatForSequenceClassification:()=>Gd,UniSpeechSatModel:()=>Ud,UniSpeechSatPreTrainedModel:()=>Zs,ViTForImageClassification:()=>Iu,ViTMAEModel:()=>zu,ViTMAEPreTrainedModel:()=>Ta,ViTMSNForImageClassification:()=>Sa,ViTMSNModel:()=>Ea,ViTMSNPreTrainedModel:()=>$a,ViTModel:()=>Au,ViTPreTrainedModel:()=>xa,VisionEncoderDecoderModel:()=>Nn,VitMatteForImageMatting:()=>Bu,VitMattePreTrainedModel:()=>Nu,VitPoseForPoseEstimation:()=>_n,VitPosePreTrainedModel:()=>ka,VitsModel:()=>yo,VitsModelOutput:()=>Ap,VitsPreTrainedModel:()=>cc,Wav2Vec2BertForCTC:()=>Hd,Wav2Vec2BertForSequenceClassification:()=>Kd,Wav2Vec2BertModel:()=>Wd,Wav2Vec2BertPreTrainedModel:()=>ki,Wav2Vec2ForAudioFrameClassification:()=>Nd,Wav2Vec2ForCTC:()=>Od,Wav2Vec2ForSequenceClassification:()=>Ld,Wav2Vec2Model:()=>zd,Wav2Vec2PreTrainedModel:()=>qn,WavLMForAudioFrameClassification:()=>rc,WavLMForCTC:()=>Zd,WavLMForSequenceClassification:()=>ec,WavLMForXVector:()=>tc,WavLMModel:()=>Jd,WavLMPreTrainedModel:()=>Rs,WeSpeakerResNetModel:()=>Dd,WeSpeakerResNetPreTrainedModel:()=>Rd,WhisperForConditionalGeneration:()=>wl,WhisperModel:()=>gl,WhisperPreTrainedModel:()=>Wi,XLMForQuestionAnswering:()=>dl,XLMForSequenceClassification:()=>ll,XLMForTokenClassification:()=>ul,XLMModel:()=>al,XLMPreTrainedModel:()=>Os,XLMRobertaForMaskedLM:()=>pl,XLMRobertaForQuestionAnswering:()=>ml,XLMRobertaForSequenceClassification:()=>hl,XLMRobertaForTokenClassification:()=>jn,XLMRobertaModel:()=>cl,XLMRobertaPreTrainedModel:()=>Ls,XLMWithLMHeadModel:()=>ol,XVectorOutput:()=>Cp,YolosForObjectDetection:()=>Ed,YolosModel:()=>$d,YolosObjectDetectionOutput:()=>Sd,YolosPreTrainedModel:()=>Za});var p=n("./src/configs.js"),I=n("./src/backends/onnx.js"),V=n("./src/utils/dtypes.js"),Y=n("./src/utils/generic.js"),z=n("./src/utils/core.js"),$=n("./src/utils/hub.js"),y=n("./src/utils/constants.js"),_=n("./src/generation/logits_process.js"),A=n("./src/generation/configuration_utils.js"),b=n("./src/utils/tensor.js"),j=n("./src/utils/image.js"),re=n("./src/utils/maths.js"),se=n("./src/generation/stopping_criteria.js"),le=n("./src/generation/logits_sampler.js"),L=n("./src/env.js"),G=n("./src/models/whisper/generation_whisper.js"),ie=n("./src/models/whisper/common_whisper.js");const N=0,v=1,O=2,x=3,R=4,K=5,fe=6,de=7,ge=8,Ae=9,we=new Map,Se=new Map,Re=new Map;async function Ue(w,P,Q){return Object.fromEntries(await Promise.all(Object.keys(P).map(async Pe=>{const{buffer:Xe,session_options:Ye,session_config:st}=await async function(xt,Tt,bt){var Xn;const Pt=((Xn=bt.config)==null?void 0:Xn["transformers.js_config"])??{};let Vt=bt.device??Pt.device;Vt&&typeof Vt!="string"&&(Vt.hasOwnProperty(Tt)?Vt=Vt[Tt]:(console.warn(`device not specified for "${Tt}". Using the default device.`),Vt=null));const Zt=Vt??(L.apis.IS_NODE_ENV?"cpu":"wasm"),kr=(0,I.deviceToExecutionProviders)(Zt);let sr=bt.dtype??Pt.dtype;if(typeof sr!="string"&&(sr&&sr.hasOwnProperty(Tt)?sr=sr[Tt]:(sr=V.DEFAULT_DEVICE_DTYPE_MAPPING[Zt]??V.DATA_TYPES.fp32,console.warn(`dtype not specified for "${Tt}". Using the default dtype (${sr}) for this device (${Zt}).`))),sr===V.DATA_TYPES.auto){let Cr=Pt.dtype;typeof Cr!="string"&&(Cr=Cr[Tt]),sr=Cr&&Cr!==V.DATA_TYPES.auto&&V.DATA_TYPES.hasOwnProperty(Cr)?Cr:V.DEFAULT_DEVICE_DTYPE_MAPPING[Zt]??V.DATA_TYPES.fp32}const ur=sr;if(!V.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(ur))throw new Error(`Invalid dtype: ${ur}. Should be one of: ${Object.keys(V.DATA_TYPES).join(", ")}`);if(ur===V.DATA_TYPES.fp16&&Zt==="webgpu"&&!await(0,V.isWebGpuFp16Supported)())throw new Error(`The device (${Zt}) does not support fp16.`);const cr=Pt.kv_cache_dtype?typeof Pt.kv_cache_dtype=="string"?Pt.kv_cache_dtype:Pt.kv_cache_dtype[ur]??"float32":void 0;if(cr&&!["float32","float16"].includes(cr))throw new Error(`Invalid kv_cache_dtype: ${cr}. Should be one of: float32, float16`);const Mr={dtype:ur,kv_cache_dtype:cr},Br=V.DEFAULT_DTYPE_SUFFIX_MAPPING[ur],Vr=`${bt.subfolder??""}/${Tt}${Br}.onnx`,Pr={...bt.session_options};Pr.executionProviders??(Pr.executionProviders=kr);const dn=Pt.free_dimension_overrides;dn?Pr.freeDimensionOverrides??(Pr.freeDimensionOverrides=dn):Zt.startsWith("webnn")&&!Pr.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const Jr=(0,$.getModelFile)(xt,Vr,!0,bt),Ar=bt.use_external_data_format??Pt.use_external_data_format;let cn=[];if(Ar&&(Ar===!0||typeof Ar=="object"&&Ar.hasOwnProperty(Tt)&&Ar[Tt]===!0)){if(L.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const Cr=`${Tt}${Br}.onnx_data`,xn=`${bt.subfolder??""}/${Cr}`;cn.push(new Promise(async(ps,Qo)=>{const Vs=await(0,$.getModelFile)(xt,xn,!0,bt);ps({path:Cr,data:Vs})}))}else Pr.externalData!==void 0&&(cn=Pr.externalData.map(async Cr=>{if(typeof Cr.data=="string"){const xn=await(0,$.getModelFile)(xt,Cr.data,!0,bt);return{...Cr,data:xn}}return Cr}));if(cn.length>0&&(Pr.externalData=await Promise.all(cn)),Zt==="webgpu"){const Cr=(0,p.getKeyValueShapes)(bt.config,{prefix:"present"});if(Object.keys(Cr).length>0&&!(0,I.isONNXProxy)()){const xn={};for(const ps in Cr)xn[ps]="gpu-buffer";Pr.preferredOutputLocation=xn}}return{buffer:await Jr,session_options:Pr,session_config:Mr}}(w,P[Pe],Q);return[Pe,await(0,I.createInferenceSession)(Xe,Ye,st)]})))}async function dt(w,P,Q){return Object.fromEntries(await Promise.all(Object.keys(P).map(async Pe=>[Pe,await(0,$.getModelJSON)(w,P[Pe],!1,Q)])))}async function oe(w,P){const Q=function(Pe,Xe){const Ye=Object.create(null),st=[];for(const bt of Pe.inputNames){const Pt=Xe[bt];Pt instanceof b.Tensor?Ye[bt]=(0,I.isONNXProxy)()?Pt.clone():Pt:st.push(bt)}if(st.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${st.join(", ")}.`);const xt=Object.keys(Xe).length,Tt=Pe.inputNames.length;if(xt>Tt){let bt=Object.keys(Xe).filter(Pt=>!Pe.inputNames.includes(Pt));console.warn(`WARNING: Too many inputs were provided (${xt} > ${Tt}). The following inputs will be ignored: "${bt.join(", ")}".`)}return Ye}(w,P);try{const Pe=Object.fromEntries(Object.entries(Q).map(([Ye,st])=>[Ye,st.ort_tensor]));let Xe=await w.run(Pe);return Xe=Z(Xe),Xe}catch(Pe){const Xe=Object.fromEntries(Object.entries(Q).map(([Ye,{type:st,dims:xt,data:Tt}])=>[Ye,{type:st,dims:xt,data:Tt}]));throw console.error(`An error occurred during model execution: "${Pe}".`),console.error("Inputs given to model:",Xe),Pe}}function Z(w){for(let P in w)(0,I.isONNXTensor)(w[P])?w[P]=new b.Tensor(w[P]):typeof w[P]=="object"&&Z(w[P]);return w}function pe(w){if(w instanceof b.Tensor)return w;if(w.length===0)throw Error("items must be non-empty");if(Array.isArray(w[0])){if(w.some(P=>P.length!==w[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new b.Tensor("int64",BigInt64Array.from(w.flat().map(P=>BigInt(P))),[w.length,w[0].length])}return new b.Tensor("int64",BigInt64Array.from(w.map(P=>BigInt(P))),[1,w.length])}function Ee(w){return new b.Tensor("bool",[w],[1])}async function qe(w,P){let{encoder_outputs:Q,input_ids:Pe,decoder_input_ids:Xe,...Ye}=P;if(!Q){const st=(0,z.pick)(P,w.sessions.model.inputNames);Q=(await xe(w,st)).last_hidden_state}return Ye.input_ids=Xe,Ye.encoder_hidden_states=Q,w.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(Ye.encoder_attention_mask=P.attention_mask),await je(w,Ye,!0)}async function xe(w,P){const Q=w.sessions.model,Pe=(0,z.pick)(P,Q.inputNames);if(Q.inputNames.includes("inputs_embeds")&&!Pe.inputs_embeds){if(!P.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");Pe.inputs_embeds=await w.encode_text({input_ids:P.input_ids})}if(Q.inputNames.includes("token_type_ids")&&!Pe.token_type_ids){if(!Pe.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");Pe.token_type_ids=(0,b.zeros_like)(Pe.input_ids)}if(Q.inputNames.includes("pixel_mask")&&!Pe.pixel_mask){if(!Pe.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const Xe=Pe.pixel_values.dims;Pe.pixel_mask=(0,b.ones)([Xe[0],Xe[2],Xe[3]])}return await oe(Q,Pe)}async function je(w,P,Q=!1){const Pe=w.sessions[Q?"decoder_model_merged":"model"],{past_key_values:Xe,...Ye}=P;if(Pe.inputNames.includes("use_cache_branch")&&(Ye.use_cache_branch=Ee(!!Xe)),Pe.inputNames.includes("position_ids")&&Ye.attention_mask&&!Ye.position_ids){const xt=w.config.model_type==="paligemma"?1:0;Ye.position_ids=function(Tt,bt=null,Pt=0){const{input_ids:Vt,inputs_embeds:Zt,attention_mask:kr}=Tt,{data:sr,dims:ur}=Je(kr,Pt);let cr=new b.Tensor("int64",sr,ur);if(bt){const Mr=-(Vt??Zt).dims.at(1);cr=cr.slice(null,[Mr,null])}return cr}(Ye,Xe,xt)}w.addPastKeyValues(Ye,Xe);const st=(0,z.pick)(Ye,Pe.inputNames);return await oe(Pe,st)}function He({image_token_id:w,inputs_embeds:P,image_features:Q,input_ids:Pe,attention_mask:Xe}){const Ye=Pe.tolist().map(bt=>bt.reduce((Pt,Vt,Zt)=>(Vt==w&&Pt.push(Zt),Pt),[])),st=Ye.reduce((bt,Pt)=>bt+Pt.length,0),xt=Q.dims[0];if(st!==xt)throw new Error(`Image features and image tokens do not match: tokens: ${st}, features ${xt}`);let Tt=0;for(let bt=0;bt<Ye.length;++bt){const Pt=Ye[bt],Vt=P[bt];for(let Zt=0;Zt<Pt.length;++Zt)Vt[Pt[Zt]].data.set(Q[Tt++].data)}return{inputs_embeds:P,attention_mask:Xe}}async function at(w,{input_ids:P=null,attention_mask:Q=null,pixel_values:Pe=null,position_ids:Xe=null,inputs_embeds:Ye=null,past_key_values:st=null,generation_config:xt=null,logits_processor:Tt=null,...bt}){if(!Ye){if(Ye=await w.encode_text({input_ids:P,...bt}),Pe&&P.dims[1]!==1){const Pt=await w.encode_image({pixel_values:Pe,...bt});({inputs_embeds:Ye,attention_mask:Q}=w._merge_input_ids_with_image_features({image_features:Pt,inputs_embeds:Ye,input_ids:P,attention_mask:Q}))}else if(st&&Pe&&P.dims[1]===1){const Pt=P.dims[1],Vt=Object.values(st)[0].dims.at(-2);Q=(0,b.cat)([(0,b.ones)([P.dims[0],Vt]),Q.slice(null,[Q.dims[1]-Pt,Q.dims[1]])],1)}}if(!Xe&&w.config.model_type==="qwen2_vl"){const{image_grid_thw:Pt,video_grid_thw:Vt}=bt;[Xe]=w.get_rope_index(P,Pt,Vt,Q)}return await je(w,{inputs_embeds:Ye,past_key_values:st,attention_mask:Q,position_ids:Xe,generation_config:xt,logits_processor:Tt},!0)}function Je(w,P=0){const[Q,Pe]=w.dims,Xe=w.data,Ye=new BigInt64Array(Xe.length);for(let st=0;st<Q;++st){const xt=st*Pe;let Tt=BigInt(P);for(let bt=0;bt<Pe;++bt){const Pt=xt+bt;Xe[Pt]===0n?Ye[Pt]=BigInt(1):(Ye[Pt]=Tt,Tt+=Xe[Pt])}}return{data:Ye,dims:w.dims}}function be(w,P,Q,Pe){if(Q.past_key_values){const Xe=Object.values(Q.past_key_values)[0].dims.at(-2),{input_ids:Ye,attention_mask:st}=Q;if(!(st&&st.dims[1]>Ye.dims[1])){if(Xe<Ye.dims[1])Q.input_ids=Ye.slice(null,[Xe,null]);else if(w.config.image_token_index!=null&&Ye.data.some(xt=>xt==w.config.image_token_index)){const xt=w.config.num_image_tokens;if(!xt)throw new Error("`num_image_tokens` is missing in the model configuration.");const Tt=Ye.dims[1]-(Xe-xt);Q.input_ids=Ye.slice(null,[-Tt,null]),Q.attention_mask=(0,b.ones)([1,Xe+Tt])}}}return Q}function Ce(w,P,Q,Pe){return Q.past_key_values&&(P=P.map(Xe=>[Xe.at(-1)])),{...Q,decoder_input_ids:pe(P)}}function We(w,...P){return w.config.is_encoder_decoder?Ce(w,...P):be(w,...P)}function et(w,P,Q,Pe){const Xe=!!Q.past_key_values;return Pe.guidance_scale!==null&&Pe.guidance_scale>1&&(Xe?Q.input_ids=(0,b.cat)([Q.input_ids,Q.input_ids],0):(Q.input_ids=(0,b.cat)([Q.input_ids,(0,b.full_like)(Q.input_ids,BigInt(Pe.pad_token_id))],0),Q.attention_mask=(0,b.cat)([Q.attention_mask,(0,b.full_like)(Q.attention_mask,0n)],0))),!Xe&&Q.pixel_values||(Q.pixel_values=(0,b.full)([0,0,3,384,384],1)),Xe&&(Q.images_seq_mask=new b.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),Q.images_emb_mask=new b.Tensor("bool",new Array(0).fill(!1),[1,1,0])),Q}class ue extends Y.Callable{constructor(Q,Pe,Xe){super();Me(this,"main_input_name","input_ids");Me(this,"forward_params",["input_ids","attention_mask"]);this.config=Q,this.sessions=Pe,this.configs=Xe;const Ye=Re.get(this.constructor),st=we.get(Ye);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,st){case R:this.can_generate=!0,this._forward=je,this._prepare_inputs_for_generation=be;break;case O:case x:case de:this.can_generate=!0,this._forward=qe,this._prepare_inputs_for_generation=Ce;break;case v:this._forward=qe;break;case fe:this.can_generate=!0,this._forward=at,this._prepare_inputs_for_generation=We;break;case Ae:this.can_generate=!0,this._prepare_inputs_for_generation=We;break;case ge:this.can_generate=!0,this._prepare_inputs_for_generation=et;break;default:this._forward=xe}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var Pe;const Q=[];for(const Xe of Object.values(this.sessions))(Pe=Xe==null?void 0:Xe.handler)!=null&&Pe.dispose&&Q.push(Xe.handler.dispose());return await Promise.all(Q)}static async from_pretrained(Q,{progress_callback:Pe=null,config:Xe=null,cache_dir:Ye=null,local_files_only:st=!1,revision:xt="main",model_file_name:Tt=null,subfolder:bt="onnx",device:Pt=null,dtype:Vt=null,use_external_data_format:Zt=null,session_options:kr={}}={}){let sr={progress_callback:Pe,config:Xe,cache_dir:Ye,local_files_only:st,revision:xt,model_file_name:Tt,subfolder:bt,device:Pt,dtype:Vt,use_external_data_format:Zt,session_options:kr};const ur=Re.get(this),cr=we.get(ur);let Mr;if(Xe=sr.config=await p.AutoConfig.from_pretrained(Q,sr),cr===R)Mr=await Promise.all([Ue(Q,{model:sr.model_file_name??"model"},sr),dt(Q,{generation_config:"generation_config.json"},sr)]);else if(cr===O||cr===x)Mr=await Promise.all([Ue(Q,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},sr),dt(Q,{generation_config:"generation_config.json"},sr)]);else if(cr===K)Mr=await Promise.all([Ue(Q,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},sr)]);else if(cr===v)Mr=await Promise.all([Ue(Q,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},sr)]);else if(cr===fe){const Br={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Xe.is_encoder_decoder&&(Br.model="encoder_model"),Mr=await Promise.all([Ue(Q,Br,sr),dt(Q,{generation_config:"generation_config.json"},sr)])}else if(cr===de)Mr=await Promise.all([Ue(Q,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},sr),dt(Q,{generation_config:"generation_config.json"},sr)]);else if(cr===ge)Mr=await Promise.all([Ue(Q,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},sr),dt(Q,{generation_config:"generation_config.json"},sr)]);else if(cr===Ae)Mr=await Promise.all([Ue(Q,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},sr),dt(Q,{generation_config:"generation_config.json"},sr)]);else{if(cr!==N){const Br=ur??(Xe==null?void 0:Xe.model_type);Br!=="custom"&&console.warn(`Model type for '${Br}' not found, assuming encoder-only architecture. Please report this at ${y.GITHUB_ISSUE_URL}.`)}Mr=await Promise.all([Ue(Q,{model:sr.model_file_name??"model"},sr)])}return new this(Xe,...Mr)}async _call(Q){return await this.forward(Q)}async forward(Q){return await this._forward(this,Q)}get generation_config(){var Q;return((Q=this.configs)==null?void 0:Q.generation_config)??null}_get_logits_warper(Q){const Pe=new _.LogitsProcessorList;return Q.temperature!==null&&Q.temperature!==1&&Pe.push(new _.TemperatureLogitsWarper(Q.temperature)),Q.top_k!==null&&Q.top_k!==0&&Pe.push(new _.TopKLogitsWarper(Q.top_k)),Q.top_p!==null&&Q.top_p<1&&Pe.push(new _.TopPLogitsWarper(Q.top_p)),Pe}_get_logits_processor(Q,Pe,Xe=null){const Ye=new _.LogitsProcessorList;if(Q.repetition_penalty!==null&&Q.repetition_penalty!==1&&Ye.push(new _.RepetitionPenaltyLogitsProcessor(Q.repetition_penalty)),Q.no_repeat_ngram_size!==null&&Q.no_repeat_ngram_size>0&&Ye.push(new _.NoRepeatNGramLogitsProcessor(Q.no_repeat_ngram_size)),Q.bad_words_ids!==null&&Ye.push(new _.NoBadWordsLogitsProcessor(Q.bad_words_ids,Q.eos_token_id)),Q.min_length!==null&&Q.eos_token_id!==null&&Q.min_length>0&&Ye.push(new _.MinLengthLogitsProcessor(Q.min_length,Q.eos_token_id)),Q.min_new_tokens!==null&&Q.eos_token_id!==null&&Q.min_new_tokens>0&&Ye.push(new _.MinNewTokensLengthLogitsProcessor(Pe,Q.min_new_tokens,Q.eos_token_id)),Q.forced_bos_token_id!==null&&Ye.push(new _.ForcedBOSTokenLogitsProcessor(Q.forced_bos_token_id)),Q.forced_eos_token_id!==null&&Ye.push(new _.ForcedEOSTokenLogitsProcessor(Q.max_length,Q.forced_eos_token_id)),Q.begin_suppress_tokens!==null){const st=Pe>1||Q.forced_bos_token_id===null?Pe:Pe+1;Ye.push(new _.SuppressTokensAtBeginLogitsProcessor(Q.begin_suppress_tokens,st))}return Q.guidance_scale!==null&&Q.guidance_scale>1&&Ye.push(new _.ClassifierFreeGuidanceLogitsProcessor(Q.guidance_scale)),Xe!==null&&Ye.extend(Xe),Ye}_prepare_generation_config(Q,Pe,Xe=A.GenerationConfig){const Ye={...this.config};for(const xt of["decoder","generator","text_config"])xt in Ye&&Object.assign(Ye,Ye[xt]);const st=new Xe(Ye);return Object.assign(st,this.generation_config??{}),Q&&Object.assign(st,Q),Pe&&Object.assign(st,(0,z.pick)(Pe,Object.getOwnPropertyNames(st))),st}_get_stopping_criteria(Q,Pe=null){const Xe=new se.StoppingCriteriaList;return Q.max_length!==null&&Xe.push(new se.MaxLengthCriteria(Q.max_length,this.config.max_position_embeddings??null)),Q.eos_token_id!==null&&Xe.push(new se.EosTokenCriteria(Q.eos_token_id)),Pe&&Xe.extend(Pe),Xe}_validate_model_class(){if(!this.can_generate){const Q=[zo,Oo,Fo,Ao],Pe=Re.get(this.constructor),Xe=new Set,Ye=this.config.model_type;for(const xt of Q){const Tt=xt.get(Ye);Tt&&Xe.add(Tt[0])}let st=`The current model class (${Pe}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw Xe.size>0&&(st+=` Please use the following class instead: ${[...Xe].join(", ")}`),Error(st)}}prepare_inputs_for_generation(...Q){return this._prepare_inputs_for_generation(this,...Q)}_update_model_kwargs_for_generation({generated_input_ids:Q,outputs:Pe,model_inputs:Xe,is_encoder_decoder:Ye}){return Xe.past_key_values=this.getPastKeyValues(Pe,Xe.past_key_values),Xe.input_ids=new b.Tensor("int64",Q.flat(),[Q.length,1]),Ye||(Xe.attention_mask=(0,b.cat)([Xe.attention_mask,(0,b.ones)([Xe.attention_mask.dims[0],1])],1)),Xe.position_ids=null,Xe}_prepare_model_inputs({inputs:Q,bos_token_id:Pe,model_kwargs:Xe}){const Ye=(0,z.pick)(Xe,this.forward_params),st=this.main_input_name;if(st in Ye){if(Q)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else Ye[st]=Q;return{inputs_tensor:Ye[st],model_inputs:Ye,model_input_name:st}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Q,model_inputs:Pe,model_input_name:Xe,generation_config:Ye}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!Pe.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:xt,pixel_values:Tt,attention_mask:bt,...Pt}=Pe,Vt=await this._prepare_inputs_embeds(Pe);Pe={...Pt,...(0,z.pick)(Vt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:st}=await xe(this,Pe);if(Ye.guidance_scale!==null&&Ye.guidance_scale>1)st=(0,b.cat)([st,(0,b.full_like)(st,0)],0),"attention_mask"in Pe&&(Pe.attention_mask=(0,b.cat)([Pe.attention_mask,(0,b.zeros_like)(Pe.attention_mask)],0));else if(Pe.decoder_input_ids){const xt=pe(Pe.decoder_input_ids).dims[0];if(xt!==st.dims[0]){if(st.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${st.dims[0]}) than the decoder inputs (${xt}).`);st=(0,b.cat)(Array.from({length:xt},()=>st),0)}}return Pe.encoder_outputs=st,Pe}_prepare_decoder_input_ids_for_generation({batch_size:Q,model_input_name:Pe,model_kwargs:Xe,decoder_start_token_id:Ye,bos_token_id:st,generation_config:xt}){let{decoder_input_ids:Tt,...bt}=Xe;if(!(Tt instanceof b.Tensor)){if(Tt)Array.isArray(Tt[0])||(Tt=Array.from({length:Q},()=>Tt));else if(Ye??(Ye=st),this.config.model_type==="musicgen")Tt=Array.from({length:Q*this.config.decoder.num_codebooks},()=>[Ye]);else if(Array.isArray(Ye)){if(Ye.length!==Q)throw new Error(`\`decoder_start_token_id\` expcted to have length ${Q} but got ${Ye.length}`);Tt=Ye}else Tt=Array.from({length:Q},()=>[Ye]);Tt=pe(Tt)}return Xe.decoder_attention_mask=(0,b.ones_like)(Tt),{input_ids:Tt,model_inputs:bt}}async generate({inputs:Q=null,generation_config:Pe=null,logits_processor:Xe=null,stopping_criteria:Ye=null,streamer:st=null,...xt}){this._validate_model_class(),Pe=this._prepare_generation_config(Pe,xt);let{inputs_tensor:Tt,model_inputs:bt,model_input_name:Pt}=this._prepare_model_inputs({inputs:Q,model_kwargs:xt});const Vt=this.config.is_encoder_decoder;let Zt;Vt&&("encoder_outputs"in bt||(bt=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Tt,model_inputs:bt,model_input_name:Pt,generation_config:Pe}))),Vt?{input_ids:Zt,model_inputs:bt}=this._prepare_decoder_input_ids_for_generation({batch_size:bt[Pt].dims.at(0),model_input_name:Pt,model_kwargs:bt,decoder_start_token_id:Pe.decoder_start_token_id,bos_token_id:Pe.bos_token_id,generation_config:Pe}):Zt=bt[Pt];let kr=Zt.dims.at(-1);Pe.max_new_tokens!==null&&(Pe.max_length=kr+Pe.max_new_tokens);const sr=this._get_logits_processor(Pe,kr,Xe),ur=this._get_stopping_criteria(Pe,Ye),cr=bt[Pt].dims.at(0),Mr=le.LogitsSampler.getSampler(Pe),Br=new Array(cr).fill(0),Vr=Zt.tolist();let Pr;st&&st.put(Vr);let dn={};for(;;){if(bt=this.prepare_inputs_for_generation(Vr,bt,Pe),Pr=await this.forward(bt),Pe.output_attentions&&Pe.return_dict_in_generate){const Cr=this.getAttentions(Pr);for(const xn in Cr)xn in dn||(dn[xn]=[]),dn[xn].push(Cr[xn])}const cn=sr(Vr,Pr.logits.slice(null,-1,null)),Xn=[];for(let Cr=0;Cr<cn.dims.at(0);++Cr){const xn=cn[Cr],ps=await Mr(xn);for(const[Qo,Vs]of ps){const $s=BigInt(Qo);Br[Cr]+=Vs,Vr[Cr].push($s),Xn.push([$s]);break}}if(st&&st.put(Xn),ur(Vr).every(Cr=>Cr))break;bt=this._update_model_kwargs_for_generation({generated_input_ids:Xn,outputs:Pr,model_inputs:bt,is_encoder_decoder:Vt})}st&&st.end();const Jr=this.getPastKeyValues(Pr,bt.past_key_values,!0),Ar=new b.Tensor("int64",Vr.flat(),[Vr.length,Vr[0].length]);if(Pe.return_dict_in_generate)return{sequences:Ar,past_key_values:Jr,...dn};for(const cn of Object.values(Pr))cn.location==="gpu-buffer"&&cn.dispose();return Ar}getPastKeyValues(Q,Pe,Xe=!1){const Ye=Object.create(null);for(const st in Q)if(st.startsWith("present")){const xt=st.replace("present","past_key_values"),Tt=st.includes("encoder");if(Ye[xt]=Tt&&Pe?Pe[xt]:Q[st],Pe&&(!Tt||Xe)){const bt=Pe[xt];bt.location==="gpu-buffer"&&bt.dispose()}}return Ye}getAttentions(Q){const Pe={};for(const Xe of["cross_attentions","encoder_attentions","decoder_attentions"])for(const Ye in Q)Ye.startsWith(Xe)&&(Xe in Pe||(Pe[Xe]=[]),Pe[Xe].push(Q[Ye]));return Pe}addPastKeyValues(Q,Pe){var Xe,Ye,st;if(Pe)Object.assign(Q,Pe);else{const xt=this.sessions.decoder_model_merged??this.sessions.model,Tt=((Xe=xt==null?void 0:xt.config)==null?void 0:Xe.kv_cache_dtype)??"float32",bt=Tt==="float16"?new Uint16Array:[],Pt=((st=(Ye=Q[this.main_input_name]??Q.attention_mask)==null?void 0:Ye.dims)==null?void 0:st[0])??1,Vt=(0,p.getKeyValueShapes)(this.config,{batch_size:Pt});for(const Zt in Vt)Q[Zt]=new b.Tensor(Tt,bt,Vt[Zt])}}async encode_image({pixel_values:Q}){const Pe=(await oe(this.sessions.vision_encoder,{pixel_values:Q})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${Pe.dims[1]}).`),this.config.num_image_tokens=Pe.dims[1]),Pe}async encode_text({input_ids:Q}){return(await oe(this.sessions.embed_tokens,{input_ids:Q})).inputs_embeds}}class Be{}class nt extends Be{constructor({last_hidden_state:P,hidden_states:Q=null,attentions:Pe=null}){super(),this.last_hidden_state=P,this.hidden_states=Q,this.attentions=Pe}}class ft extends ue{}class ht extends ft{}class gt extends ft{async _call(P){return new mn(await super._call(P))}}class yt extends ft{async _call(P){return new lr(await super._call(P))}}class U extends ft{async _call(P){return new un(await super._call(P))}}class ae extends ft{async _call(P){return new vn(await super._call(P))}}class H extends ue{}class me extends H{}class Oe extends H{async _call(P){return new mn(await super._call(P))}}class tt extends H{async _call(P){return new lr(await super._call(P))}}class Ze extends H{async _call(P){return new un(await super._call(P))}}class ct extends ue{}class $t extends ct{}class mt extends ue{}class It extends mt{}class Ft extends mt{async _call(P){return new mn(await super._call(P))}}class Rt extends mt{async _call(P){return new lr(await super._call(P))}}class _r extends mt{async _call(P){return new un(await super._call(P))}}class yr extends mt{async _call(P){return new vn(await super._call(P))}}class Dr extends ue{}class Gr extends Dr{}class hn extends Dr{async _call(P){return new mn(await super._call(P))}}class Gt extends Dr{async _call(P){return new lr(await super._call(P))}}class Dn extends Dr{async _call(P){return new un(await super._call(P))}}class sn extends Dr{async _call(P){return new vn(await super._call(P))}}class an extends ue{}class it extends an{}class St extends an{async _call(P){return new mn(await super._call(P))}}class Bt extends an{async _call(P){return new lr(await super._call(P))}}class Ir extends an{async _call(P){return new un(await super._call(P))}}class Mn extends an{async _call(P){return new vn(await super._call(P))}}class gn extends ue{}class F extends gn{}class ar extends gn{async _call(P){return new mn(await super._call(P))}}class Cn extends gn{async _call(P){return new lr(await super._call(P))}}class wn extends gn{async _call(P){return new un(await super._call(P))}}class yn extends gn{async _call(P){return new vn(await super._call(P))}}class In extends ue{}class ws extends In{}class Hn extends In{async _call(P){return new mn(await super._call(P))}}class Nr extends In{async _call(P){return new lr(await super._call(P))}}class Wr extends In{async _call(P){return new un(await super._call(P))}}class fn extends In{async _call(P){return new vn(await super._call(P))}}class pr extends ue{}class as extends pr{}class ys extends pr{async _call(P){return new mn(await super._call(P))}}class os extends pr{async _call(P){return new lr(await super._call(P))}}class Jn extends pr{async _call(P){return new un(await super._call(P))}}class ls extends pr{async _call(P){return new vn(await super._call(P))}}class Fn extends ue{}class Kn extends Fn{}class zn extends Fn{async _call(P){return new lr(await super._call(P))}}class On extends Fn{async _call(P){return new un(await super._call(P))}}class Zn extends Fn{async _call(P){return new vn(await super._call(P))}}class u extends Fn{async _call(P){return new mn(await super._call(P))}}class m extends ue{}class T extends m{}class q extends m{async _call(P){return new mn(await super._call(P))}}class _e extends m{async _call(P){return new lr(await super._call(P))}}class Ie extends m{async _call(P){return new un(await super._call(P))}}class De extends ue{}class Ke extends De{}class kt extends De{async _call(P){return new mn(await super._call(P))}}class Dt extends De{async _call(P){return new lr(await super._call(P))}}class tr extends De{async _call(P){return new vn(await super._call(P))}}class wt extends ue{}class Qt extends wt{}class Xt extends wt{async _call(P){return new mn(await super._call(P))}}class qr extends wt{async _call(P){return new lr(await super._call(P))}}class jr extends wt{async _call(P){return new un(await super._call(P))}}class $r extends wt{async _call(P){return new vn(await super._call(P))}}class Ne extends ue{}class M extends Ne{}class ee extends Ne{async _call(P){return new mn(await super._call(P))}}class ce extends Ne{async _call(P){return new lr(await super._call(P))}}class ve extends Ne{async _call(P){return new vn(await super._call(P))}}class Ge extends ue{}class Le extends Ge{}class _t extends Ge{async _call(P){return new lr(await super._call(P))}}class Mt extends Ge{async _call(P){return new vn(await super._call(P))}}class ye extends Ge{async _call(P){return new mn(await super._call(P))}}class Ot extends ue{constructor(){super(...arguments);Me(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class nr extends Ot{}class Or extends Ot{}class br extends ue{}class fr extends br{}class Ur extends br{}class vr extends ue{}class Lr extends vr{}class Lt extends vr{}class gr extends ue{}class Tn extends gr{}class Fr extends gr{}class Hr extends gr{async _call(P){return new lr(await super._call(P))}}class jt extends ue{}class $n extends jt{}class rt extends jt{}class Et extends jt{async _call(P){return new lr(await super._call(P))}}class Ln extends jt{}class rn extends ue{}class Yr extends rn{}class Kr extends rn{}class ln extends ue{}class En extends ln{}class zs extends ln{}class us extends ue{}class rl extends us{}class nl extends us{async _call(P){return new mn(await super._call(P))}}class Pn extends us{async _call(P){return new lr(await super._call(P))}}class sl extends us{async _call(P){return new un(await super._call(P))}}class il extends us{async _call(P){return new vn(await super._call(P))}}class Os extends ue{}class al extends Os{}class ol extends Os{async _call(P){return new mn(await super._call(P))}}class ll extends Os{async _call(P){return new lr(await super._call(P))}}class ul extends Os{async _call(P){return new un(await super._call(P))}}class dl extends Os{async _call(P){return new vn(await super._call(P))}}class Ls extends ue{}class cl extends Ls{}class pl extends Ls{async _call(P){return new mn(await super._call(P))}}class hl extends Ls{async _call(P){return new lr(await super._call(P))}}class jn extends Ls{async _call(P){return new un(await super._call(P))}}class ml extends Ls{async _call(P){return new vn(await super._call(P))}}class qi extends ue{}class fl extends qi{}class _l extends qi{}class Wi extends ue{constructor(){super(...arguments);Me(this,"requires_attention_mask",!1);Me(this,"main_input_name","input_features");Me(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class gl extends Wi{}class wl extends Wi{_prepare_generation_config(P,Q){return super._prepare_generation_config(P,Q,G.WhisperGenerationConfig)}_retrieve_init_tokens(P){const Q=[P.decoder_start_token_id];let Pe=P.language;const Xe=P.task;if(P.is_multilingual){Pe||(console.warn("No language specified - defaulting to English (en)."),Pe="en");const Ye=`<|${(0,ie.whisper_language_to_code)(Pe)}|>`;Q.push(P.lang_to_id[Ye]),Q.push(P.task_to_id[Xe??"transcribe"])}else if(Pe||Xe)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!P.return_timestamps&&P.no_timestamps_token_id&&Q.at(-1)!==P.no_timestamps_token_id?Q.push(P.no_timestamps_token_id):P.return_timestamps&&Q.at(-1)===P.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),Q.pop()),Q.filter(Ye=>Ye!=null)}async generate({inputs:P=null,generation_config:Q=null,logits_processor:Pe=null,stopping_criteria:Xe=null,...Ye}){Q=this._prepare_generation_config(Q,Ye);const st=Ye.decoder_input_ids??this._retrieve_init_tokens(Q);if(Q.return_timestamps&&(Pe??(Pe=new _.LogitsProcessorList),Pe.push(new _.WhisperTimeStampLogitsProcessor(Q,st))),Q.begin_suppress_tokens&&(Pe??(Pe=new _.LogitsProcessorList),Pe.push(new _.SuppressTokensAtBeginLogitsProcessor(Q.begin_suppress_tokens,st.length))),Q.return_token_timestamps){if(!Q.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");Q.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),Q.output_attentions=!0,Q.return_dict_in_generate=!0}const xt=await super.generate({inputs:P,generation_config:Q,logits_processor:Pe,decoder_input_ids:st,...Ye});return Q.return_token_timestamps&&(xt.token_timestamps=this._extract_token_timestamps(xt,Q.alignment_heads,Q.num_frames)),xt}_extract_token_timestamps(P,Q,Pe=null,Xe=.02){if(!P.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");Pe==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let Ye=this.config.median_filter_width;Ye===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),Ye=7);const st=P.cross_attentions,xt=Array.from({length:this.config.decoder_layers},(ur,cr)=>(0,b.cat)(st.map(Mr=>Mr[cr]),2)),Tt=(0,b.stack)(Q.map(([ur,cr])=>{if(ur>=xt.length)throw new Error(`Layer index ${ur} is out of bounds for cross attentions (length ${xt.length}).`);return Pe?xt[ur].slice(null,cr,null,[0,Pe]):xt[ur].slice(null,cr)})).transpose(1,0,2,3),[bt,Pt]=(0,b.std_mean)(Tt,-2,0,!0),Vt=Tt.clone();for(let ur=0;ur<Vt.dims[0];++ur){const cr=Vt[ur];for(let Mr=0;Mr<cr.dims[0];++Mr){const Br=cr[Mr],Vr=bt[ur][Mr][0].data,Pr=Pt[ur][Mr][0].data;for(let dn=0;dn<Br.dims[0];++dn){let Jr=Br[dn].data;for(let Ar=0;Ar<Jr.length;++Ar)Jr[Ar]=(Jr[Ar]-Pr[Ar])/Vr[Ar];Jr.set((0,re.medianFilter)(Jr,Ye))}}}const Zt=[(0,b.mean)(Vt,1)],kr=P.sequences.dims,sr=new b.Tensor("float32",new Float32Array(kr[0]*kr[1]),kr);for(let ur=0;ur<kr[0];++ur){const cr=Zt[ur].neg().squeeze_(0),[Mr,Br]=(0,re.dynamic_time_warping)(cr.tolist()),Vr=Array.from({length:Mr.length-1},(Jr,Ar)=>Mr[Ar+1]-Mr[Ar]),Pr=(0,z.mergeArrays)([1],Vr).map(Jr=>!!Jr),dn=[];for(let Jr=0;Jr<Pr.length;++Jr)Pr[Jr]&&dn.push(Br[Jr]*Xe);sr[ur].data.set(dn,1)}return sr}}class Hi extends ue{constructor(){super(...arguments);Me(this,"requires_attention_mask",!1);Me(this,"main_input_name","input_values");Me(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class sp extends Hi{}class yl extends Hi{}class Nn extends ue{constructor(){super(...arguments);Me(this,"main_input_name","pixel_values");Me(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class bl extends ue{constructor(){super(...arguments);Me(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class Ns extends bl{_merge_input_ids_with_image_features({inputs_embeds:P,image_features:Q,input_ids:Pe,attention_mask:Xe}){const Ye=this.config.image_token_index,st=Pe.tolist().map(Vt=>Vt.findIndex(Zt=>Zt==Ye)),xt=st.every(Vt=>Vt===-1),Tt=st.every(Vt=>Vt!==-1);if(!xt&&!Tt)throw new Error("Every input should contain either 0 or 1 image token.");if(xt)return{inputs_embeds:P,attention_mask:Xe};const bt=[],Pt=[];for(let Vt=0;Vt<st.length;++Vt){const Zt=st[Vt],kr=P[Vt],sr=Q[Vt],ur=Xe[Vt];bt.push((0,b.cat)([kr.slice([0,Zt]),sr,kr.slice([Zt+1,kr.dims[0]])],0)),Pt.push((0,b.cat)([ur.slice([0,Zt]),(0,b.ones)([sr.dims[0]]),ur.slice([Zt+1,ur.dims[0]])],0))}return{inputs_embeds:(0,b.stack)(bt,0),attention_mask:(0,b.stack)(Pt,0)}}}class Ki extends Ns{}class Un extends Ns{}class vl extends ue{constructor(){super(...arguments);Me(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);Me(this,"main_input_name","inputs_embeds")}}class xl extends vl{_merge_input_ids_with_image_features({inputs_embeds:P,image_features:Q,input_ids:Pe,attention_mask:Xe}){return{inputs_embeds:(0,b.cat)([Q,P],1),attention_mask:(0,b.cat)([(0,b.ones)(Q.dims.slice(0,2)),Xe],1)}}async _prepare_inputs_embeds({input_ids:P,pixel_values:Q,inputs_embeds:Pe,attention_mask:Xe}){if(!P&&!Q)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let Ye,st;return P&&(Ye=await this.encode_text({input_ids:P})),Q&&(st=await this.encode_image({pixel_values:Q})),Ye&&st?{inputs_embeds:Pe,attention_mask:Xe}=this._merge_input_ids_with_image_features({inputs_embeds:Ye,image_features:st,input_ids:P,attention_mask:Xe}):Pe=Ye||st,{inputs_embeds:Pe,attention_mask:Xe}}async forward({input_ids:P,pixel_values:Q,attention_mask:Pe,decoder_input_ids:Xe,decoder_attention_mask:Ye,encoder_outputs:st,past_key_values:xt,inputs_embeds:Tt,decoder_inputs_embeds:bt}){if(Tt||({inputs_embeds:Tt,attention_mask:Pe}=await this._prepare_inputs_embeds({input_ids:P,pixel_values:Q,inputs_embeds:Tt,attention_mask:Pe})),!st){let{last_hidden_state:Vt}=await xe(this,{inputs_embeds:Tt,attention_mask:Pe});st=Vt}if(!bt){if(!Xe)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");bt=await this.encode_text({input_ids:Xe})}return await je(this,{inputs_embeds:bt,attention_mask:Ye,encoder_attention_mask:Pe,encoder_hidden_states:st,past_key_values:xt},!0)}}class kl extends ue{constructor(){super(...arguments);Me(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class Ml extends kl{_merge_input_ids_with_image_features(P){const Q=P.image_features.dims.at(-1),Pe=P.image_features.view(-1,Q);return He({image_token_id:this.config.image_token_index,...P,image_features:Pe})}}class Tl extends ue{constructor(){super(...arguments);Me(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class Qi extends Tl{async encode_image({pixel_values:P,pixel_attention_mask:Q}){return(await oe(this.sessions.vision_encoder,{pixel_values:P,pixel_attention_mask:Q})).image_features}_merge_input_ids_with_image_features(P){const Q=P.image_features.dims.at(-1),Pe=P.image_features.view(-1,Q);return He({image_token_id:this.config.image_token_id,...P,image_features:Pe})}}class $l extends ue{constructor(){super(...arguments);Me(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class Xi extends $l{async forward({input_ids:P=null,attention_mask:Q=null,pixel_values:Pe=null,image_sizes:Xe=null,position_ids:Ye=null,inputs_embeds:st=null,past_key_values:xt=null,generation_config:Tt=null,logits_processor:bt=null,...Pt}){if(!st){let Vt;if(Pe&&P.dims[1]!==1){if(!Xe)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:Vt}=await oe(this.sessions.vision_encoder,{pixel_values:Pe,image_sizes:Xe}))}else{const Zt=this.config.normalized_config.hidden_size;Vt=new b.Tensor("float32",[],[0,Zt])}({inputs_embeds:st}=await oe(this.sessions.prepare_inputs_embeds,{input_ids:P,image_features:Vt}))}return await je(this,{inputs_embeds:st,past_key_values:xt,attention_mask:Q,position_ids:Ye,generation_config:Tt,logits_processor:bt},!1)}}class bs extends ue{}class El extends bs{}class Qn extends bs{static async from_pretrained(P,Q={}){return super.from_pretrained(P,{...Q,model_file_name:Q.model_file_name??"text_model"})}}class Sl extends bs{static async from_pretrained(P,Q={}){return super.from_pretrained(P,{...Q,model_file_name:Q.model_file_name??"text_model"})}}class ip extends bs{static async from_pretrained(P,Q={}){return super.from_pretrained(P,{...Q,model_file_name:Q.model_file_name??"vision_model"})}}class Cl extends bs{static async from_pretrained(P,Q={}){return super.from_pretrained(P,{...Q,model_file_name:Q.model_file_name??"vision_model"})}}class Yi extends ue{}class Pl extends Yi{}class Al extends Yi{static async from_pretrained(P,Q={}){return super.from_pretrained(P,{...Q,model_file_name:Q.model_file_name??"text_model"})}}class Il extends bs{static async from_pretrained(P,Q={}){return super.from_pretrained(P,{...Q,model_file_name:Q.model_file_name??"vision_model"})}}class Fl extends ue{}class zl extends Fl{}class oi extends ue{}class Ji extends oi{async forward(P){const Q=!P.input_ids,Pe=!P.pixel_values;if(Q&&Pe)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(Q&&(P.input_ids=(0,b.ones)([P.pixel_values.dims[0],1])),Pe){const{image_size:bt}=this.config.vision_config;P.pixel_values=(0,b.full)([0,3,bt,bt],0)}const{text_embeddings:Xe,image_embeddings:Ye,l2norm_text_embeddings:st,l2norm_image_embeddings:xt}=await super.forward(P),Tt={};return Q||(Tt.text_embeddings=Xe,Tt.l2norm_text_embeddings=st),Pe||(Tt.image_embeddings=Ye,Tt.l2norm_image_embeddings=xt),Tt}}class Ol extends oi{static async from_pretrained(P,Q={}){return super.from_pretrained(P,{...Q,model_file_name:Q.model_file_name??"text_model"})}}class Ll extends oi{static async from_pretrained(P,Q={}){return super.from_pretrained(P,{...Q,model_file_name:Q.model_file_name??"vision_model"})}}class li extends ue{}class Nl extends li{}class ui extends li{}class Zi extends ue{}class Bl extends Zi{}class Rl extends Zi{}class Bs extends ue{}class Dl extends Bs{}class jl extends Bs{}class ea extends ue{}class Ul extends ea{}class Vl extends ea{}class ta extends ue{}class Gl extends ta{}class ql extends ta{}class ra extends ue{}class Wl extends ra{}class xr extends ra{}class na extends ue{}class Hl extends na{}class Kl extends na{}class sa extends ue{}class Ql extends sa{}class Xl extends sa{}class ia extends ue{}class Yl extends ia{}class Jl extends ia{}class aa extends ue{}class Zl extends aa{}class eu extends aa{}class oa extends ue{}class tu extends oa{}class Qs extends oa{}class la extends ue{}class di extends la{}class ru extends la{}class ua extends ue{}class nu extends ua{}class su extends ua{}class da extends ue{}class iu extends da{}class au extends da{}class ca extends ue{}class ou extends ca{}class lu extends ca{}class pa extends ue{}class uu extends pa{}class du extends pa{}class ha extends ue{}class cu extends ha{}class pu extends ha{}class ci extends ue{}class hu extends ci{}class ma extends ci{}class pi extends ue{}class mu extends pi{}class fu extends pi{}class fa extends ue{}class _u extends fa{}class gu extends fa{}class _a extends ue{}class wu extends _a{}class yu extends _a{}class bu extends ue{constructor(){super(...arguments);Me(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class vu extends bu{get_rope_index(P,Q,Pe,Xe){const{vision_config:Ye,image_token_id:st,video_token_id:xt,vision_start_token_id:Tt}=this.config,bt=Ye.spatial_merge_size??2,Pt=[];if(Q||Pe){let Vt=P.tolist();Xe||(Xe=(0,b.ones_like)(P));const Zt=Xe.tolist(),kr=Array.from({length:3},Br=>Array.from({length:P.dims[0]},Vr=>Array.from({length:P.dims[1]},Pr=>1))),sr=Q?Q.tolist():[],ur=Pe?Pe.tolist():[];let cr=0,Mr=0;for(let Br=0;Br<Vt.length;++Br){const Vr=Vt[Br].filter((Rr,nn)=>Zt[Br][nn]==1),Pr=Vr.reduce((Rr,nn,rs)=>(nn==Tt&&Rr.push(rs),Rr),[]).map(Rr=>Vr[Rr+1]),dn=Pr.filter(Rr=>Rr==st).length,Jr=Pr.filter(Rr=>Rr==xt).length;let Ar=[],cn=0,Xn=dn,Cr=Jr;for(let Rr=0;Rr<Pr.length;++Rr){const nn=Vr.findIndex((_s,An)=>An>cn&&_s==st),rs=Vr.findIndex((_s,An)=>An>cn&&_s==xt),hs=Xn>0&&nn!==-1?nn:Vr.length+1,Bn=Cr>0&&rs!==-1?rs:Vr.length+1;let Ci,ei,Pi,Ai;hs<Bn?([ei,Pi,Ai]=sr[cr],++cr,--Xn,Ci=hs):([ei,Pi,Ai]=ur[Mr],++Mr,--Cr,Ci=Bn);const[ep,Ii,ti]=[Number(ei),Math.floor(Number(Pi)/bt),Math.floor(Number(Ai)/bt)],Fi=Ci-cn,ms=Ar.length>0?(0,re.max)(Ar.at(-1))[0]+1:0;Ar.push(Array.from({length:3*Fi},(_s,An)=>ms+An%Fi));const Sn=Fi+ms,fs=ep*Ii*ti,zi=Array.from({length:fs},(_s,An)=>Sn+Math.floor(An/(Ii*ti))),Oi=Array.from({length:fs},(_s,An)=>Sn+Math.floor(An/ti)%Ii),Xo=Array.from({length:fs},(_s,An)=>Sn+An%ti);Ar.push([zi,Oi,Xo].flat()),cn=Ci+fs}if(cn<Vr.length){const Rr=Ar.length>0?(0,re.max)(Ar.at(-1))[0]+1:0,nn=Vr.length-cn;Ar.push(Array.from({length:3*nn},(rs,hs)=>Rr+hs%nn))}const xn=Ar.reduce((Rr,nn)=>Rr+nn.length,0),ps=new Array(xn);let Qo=0;for(let Rr=0;Rr<3;++Rr)for(let nn=0;nn<Ar.length;++nn){const rs=Ar[nn],hs=rs.length/3;for(let Bn=Rr*hs;Bn<(Rr+1)*hs;++Bn)ps[Qo++]=rs[Bn]}let Vs=0;const $s=Zt[Br];for(let Rr=0;Rr<$s.length;++Rr)if($s[Rr]==1){for(let nn=0;nn<3;++nn)kr[nn][Br][Rr]=ps[nn*xn/3+Vs];++Vs}const Ip=(0,re.max)(ps)[0];Pt.push(Ip+1-Vt[Br].length)}return[new b.Tensor("int64",kr.flat(1/0),[3,P.dims[0],P.dims[1]]),new b.Tensor("int64",Pt,[Pt.length,1])]}if(Xe){const{data:Vt,dims:Zt}=Je(Xe),kr=BigInt64Array.from({length:3*Vt.length},(ur,cr)=>Vt[cr%Vt.length]),sr=Array.from({length:Zt[0]},(ur,cr)=>(0,re.max)(Vt.subarray(Zt[1]*cr,Zt[1]*(cr+1)))[0]+1n+BigInt(Zt[1]));return[new b.Tensor("int64",kr,[3,...Zt]),new b.Tensor("int64",sr,[sr.length,1])]}{const[Vt,Zt]=P.dims,kr=BigInt64Array.from({length:3*Vt*Zt},(sr,ur)=>BigInt(Math.floor(ur%Zt/Vt)));return[new b.Tensor("int64",kr,[3,...P.dims]),(0,b.zeros)([Vt,1])]}}async encode_image({pixel_values:P,image_grid_thw:Q}){return(await oe(this.sessions.vision_encoder,{pixel_values:P,grid_thw:Q})).image_features}_merge_input_ids_with_image_features(P){return He({image_token_id:this.config.image_token_id,...P})}prepare_inputs_for_generation(P,Q,Pe){if(Q.attention_mask&&!Q.position_ids)if(Q.past_key_values){Q.pixel_values=null;const Xe=BigInt(Object.values(Q.past_key_values)[0].dims.at(-2)),Ye=Q.rope_deltas.map(st=>Xe+st);Q.position_ids=(0,b.stack)([Ye,Ye,Ye],0)}else[Q.position_ids,Q.rope_deltas]=this.get_rope_index(Q.input_ids,Q.image_grid_thw,Q.video_grid_thw,Q.attention_mask);return Q}}class ga extends ue{}class Vn extends ga{}class xu extends ga{}class wa extends ue{}class ku extends wa{}class Mu extends wa{}class ya extends ue{}class Tu extends ya{}class $u extends ya{}class ba extends ue{}class Eu extends ba{}class Su extends ba{}class va extends ue{}class Cu extends va{}class Pu extends va{}class xa extends ue{}class Au extends xa{}class Iu extends xa{async _call(P){return new lr(await super._call(P))}}class ds extends ue{}class vs extends ds{}class xs extends ds{async _call(P){return new lr(await super._call(P))}}class ka extends ue{}class _n extends ka{}class Ma extends ue{}class Fu extends Ma{}class Xs extends Ma{async _call(P){return new lr(await super._call(P))}}class Ta extends ue{}class zu extends Ta{}class $a extends ue{}class Ea extends $a{}class Sa extends $a{async _call(P){return new lr(await super._call(P))}}class Ou extends ue{}class Ca extends Ou{}class Pa extends ue{}class hi extends Pa{}class Lu extends Pa{async _call(P){return new lr(await super._call(P))}}class Nu extends ue{}class Bu extends Nu{async _call(P){return new Pp(await super._call(P))}}class mi extends ue{}class Ys extends mi{}class Ru extends mi{async _call(P){return new lr(await super._call(P))}}class fi extends ue{}class Du extends fi{}class ju extends fi{async _call(P){return new lr(await super._call(P))}}class Aa extends ue{}class Uu extends Aa{}class Vu extends Aa{}class Ia extends ue{}class _i extends Ia{}class Gu extends Ia{}class Js extends ue{}class Fa extends Js{}class za extends Js{async _call(P){return new lr(await super._call(P))}}class gi extends ue{}class qu extends gi{}class Oa extends gi{async _call(P){return new Na(await super._call(P))}}class La extends gi{async _call(P){return new Wu(await super._call(P))}}class Na extends Be{constructor({logits:P,pred_boxes:Q}){super(),this.logits=P,this.pred_boxes=Q}}class Wu extends Be{constructor({logits:P,pred_boxes:Q,pred_masks:Pe}){super(),this.logits=P,this.pred_boxes=Q,this.pred_masks=Pe}}class Ba extends ue{}class Ra extends Ba{}class Hu extends Ba{async _call(P){return new Ku(await super._call(P))}}class Ku extends Be{constructor({logits:P,pred_boxes:Q}){super(),this.logits=P,this.pred_boxes=Q}}class wi extends ue{}class Qu extends wi{}class Xu extends wi{async _call(P){return new Yu(await super._call(P))}}class Yu extends Na{}class Da extends ue{}class Ju extends Da{}class Zu extends Da{async _call(P){return new lr(await super._call(P))}}class ja extends ue{}class ed extends ja{}class td extends ja{async _call(P){return new lr(await super._call(P))}}class Ua extends ue{}class Va extends Ua{}class yi extends Ua{async _call(P){return new lr(await super._call(P))}}class bi extends ue{}class rd extends bi{}class nd extends bi{async _call(P){return new lr(await super._call(P))}}class Ga extends ue{}class qa extends Ga{}class sd extends Ga{}class Wa extends ue{}class id extends Wa{}class ad extends Wa{}class Ha extends ue{}class od extends Ha{}class vi extends ue{}class ld extends vi{}class ud extends vi{}class dd extends vi{}class cd extends ue{}class pd extends cd{}class Ka extends ue{}class hd extends Ka{}class md extends Ka{}class Qa extends ue{}class fd extends Qa{}class _d extends Qa{}class gd extends ue{}class wd extends gd{}class Xa extends ue{}class yd extends Xa{}class bd extends Xa{async _call(P){return new lr(await super._call(P))}}class Ya extends ue{}class vd extends Ya{}class xd extends Ya{async _call(P){return new lr(await super._call(P))}}class Ja extends ue{}class kd extends Ja{}class Md extends Ja{async _call(P){return new lr(await super._call(P))}}class Gn extends ue{}class es extends Gn{}class ks extends Gn{async _call(P){return new lr(await super._call(P))}}class Ms extends ue{}class Td extends Ms{}class Za extends ue{}class $d extends Za{}class Ed extends Za{async _call(P){return new Sd(await super._call(P))}}class Sd extends Be{constructor({logits:P,pred_boxes:Q}){super(),this.logits=P,this.pred_boxes=Q}}class Cd extends ue{}class Pd extends Cd{async get_image_embeddings({pixel_values:P}){return await xe(this,{pixel_values:P})}async forward(P){if(P.image_embeddings&&P.image_positional_embeddings||(P={...P,...await this.get_image_embeddings(P)}),!P.input_labels&&P.input_points){const Pe=P.input_points.dims.slice(0,-1),Xe=Pe.reduce((Ye,st)=>Ye*st,1);P.input_labels=new b.Tensor("int64",new BigInt64Array(Xe).fill(1n),Pe)}const Q={image_embeddings:P.image_embeddings,image_positional_embeddings:P.image_positional_embeddings};return P.input_points&&(Q.input_points=P.input_points),P.input_labels&&(Q.input_labels=P.input_labels),P.input_boxes&&(Q.input_boxes=P.input_boxes),await oe(this.sessions.prompt_encoder_mask_decoder,Q)}async _call(P){return new Ad(await super._call(P))}}class Ad extends Be{constructor({iou_scores:P,pred_masks:Q}){super(),this.iou_scores=P,this.pred_masks=Q}}class eo extends ue{}class bn extends eo{}class Id extends eo{}class to extends ue{}class ro extends to{}class Fd extends to{}class qn extends ue{}class zd extends qn{}class Od extends qn{async _call(P){return new Us(await super._call(P))}}class Ld extends qn{async _call(P){return new lr(await super._call(P))}}class Nd extends qn{async _call(P){return new un(await super._call(P))}}class no extends ue{}class so extends no{}class Bd extends no{async _call(P){return new un(await super._call(P))}}class Rd extends ue{}class Dd extends Rd{}class xi extends ue{}class io extends xi{}class jd extends xi{async _call(P){return new Us(await super._call(P))}}class ao extends xi{async _call(P){return new lr(await super._call(P))}}class Zs extends ue{}class Ud extends Zs{}class Vd extends Zs{async _call(P){return new Us(await super._call(P))}}class Gd extends Zs{async _call(P){return new lr(await super._call(P))}}class qd extends Zs{async _call(P){return new un(await super._call(P))}}class ki extends ue{}class Wd extends ki{}class Hd extends ki{async _call(P){return new Us(await super._call(P))}}class Kd extends ki{async _call(P){return new lr(await super._call(P))}}class ap extends ue{}class Qd extends qn{}class Xd extends qn{async _call(P){return new Us(await super._call(P))}}class Yd extends qn{async _call(P){return new lr(await super._call(P))}}class Rs extends ue{}class Jd extends Rs{}class Zd extends Rs{async _call(P){return new Us(await super._call(P))}}class ec extends Rs{async _call(P){return new lr(await super._call(P))}}class tc extends Rs{async _call(P){return new Cp(await super._call(P))}}class rc extends Rs{async _call(P){return new un(await super._call(P))}}class nc extends ue{}class sc extends nc{}class Mi extends ue{}class Ti extends Mi{}class oo extends Mi{}class lo extends Mi{async generate_speech(P,Q,{threshold:Pe=.5,minlenratio:Xe=0,maxlenratio:Ye=20,vocoder:st=null}={}){const xt={input_ids:P},{encoder_outputs:Tt,encoder_attention_mask:bt}=await xe(this,xt),Pt=Tt.dims[1]/this.config.reduction_factor,Vt=Math.floor(Pt*Ye),Zt=Math.floor(Pt*Xe),kr=this.config.num_mel_bins;let sr=[],ur=null,cr=null,Mr=0;for(;;){++Mr;const Pr=Ee(!!cr);let dn;dn=cr?cr.output_sequence_out:new b.Tensor("float32",new Float32Array(kr),[1,1,kr]);let Jr={use_cache_branch:Pr,output_sequence:dn,encoder_attention_mask:bt,speaker_embeddings:Q,encoder_hidden_states:Tt};this.addPastKeyValues(Jr,ur),cr=await oe(this.sessions.decoder_model_merged,Jr),ur=this.getPastKeyValues(cr,ur);const{prob:Ar,spectrum:cn}=cr;if(sr.push(cn),Mr>=Zt&&(Array.from(Ar.data).filter(Xn=>Xn>=Pe).length>0||Mr>=Vt))break}const Br=(0,b.cat)(sr),{waveform:Vr}=await oe(st.sessions.model,{spectrogram:Br});return{spectrogram:Br,waveform:Vr}}}class uo extends ue{constructor(){super(...arguments);Me(this,"main_input_name","spectrogram")}}class co extends ue{}class ic extends co{}class po extends ue{}class ho extends po{}class mo extends po{}class fo extends ue{}class ac extends fo{}class _o extends fo{}class go extends ue{}class oc extends go{}class wo extends go{}class $i extends ue{}class lc extends $i{}class uc extends $i{static async from_pretrained(P,Q={}){return super.from_pretrained(P,{...Q,model_file_name:Q.model_file_name??"text_model"})}}class dc extends $i{static async from_pretrained(P,Q={}){return super.from_pretrained(P,{...Q,model_file_name:Q.model_file_name??"audio_model"})}}class cc extends ue{}class yo extends cc{async _call(P){return new Ap(await super._call(P))}}class Ei extends ue{}class op extends Ei{}class pc extends Ei{}class hc extends Ei{}class bo extends ue{}class mc extends bo{}class fc extends bo{}class vo extends ue{}class _c extends vo{}class gc extends vo{async _call(P){return new lr(await super._call(P))}}class xo extends ue{}class lp extends xo{}class wc extends xo{}class ko extends ue{constructor(){super(...arguments);Me(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(Q){const[Pe,Xe]=Q.dims,Ye=this.config.decoder.num_codebooks,st=Xe-Ye;let xt=0;for(let Pt=0;Pt<Q.size;++Pt){if(Q.data[Pt]===this.config.decoder.pad_token_id)continue;const Vt=Pt%Xe-Math.floor(Pt/Xe)%Ye;Vt>0&&Vt<=st&&(Q.data[xt++]=Q.data[Pt])}const Tt=Math.floor(Pe/Ye),bt=xt/(Tt*Ye);return new b.Tensor(Q.type,Q.data.slice(0,xt),[Tt,Ye,bt])}prepare_inputs_for_generation(Q,Pe,Xe){let Ye=structuredClone(Q);for(let st=0;st<Ye.length;++st)for(let xt=0;xt<Ye[st].length;++xt)st%this.config.decoder.num_codebooks>=xt&&(Ye[st][xt]=BigInt(this.config.decoder.pad_token_id));return Xe.guidance_scale!==null&&Xe.guidance_scale>1&&(Ye=Ye.concat(Ye)),super.prepare_inputs_for_generation(Ye,Pe,Xe)}async generate(Q){const Pe=await super.generate(Q),Xe=this._apply_and_filter_by_delay_pattern_mask(Pe).unsqueeze_(0),{audio_values:Ye}=await oe(this.sessions.encodec_decode,{audio_codes:Xe});return Ye}}class Mo extends ue{}class yc extends Mo{}class bc extends Mo{async _call(P){return new lr(await super._call(P))}}class To extends ue{}class vc extends To{}class xc extends To{async _call(P){return new lr(await super._call(P))}}class $o extends ue{}class Eo extends $o{}class kc extends $o{async _call(P){return new lr(await super._call(P))}}class So extends ue{}class Mc extends So{}class Tc extends So{async _call(P){return new lr(await super._call(P))}}class $c extends ue{}class Ec extends $c{}class Sc extends ue{}class Cc extends Sc{constructor(...Q){super(...Q);Me(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(Q){const Pe=this._generation_mode??"text";let Xe;if(Pe!=="text"&&Q.past_key_values){const bt=this.sessions.gen_img_embeds,Pt=(0,z.pick)({image_ids:Q.input_ids},bt.inputNames);Xe=await oe(bt,Pt)}else{const bt=this.sessions.prepare_inputs_embeds,Pt=(0,z.pick)(Q,bt.inputNames);Xe=await oe(bt,Pt)}const Ye={...Q,...Xe},st=await je(this,Ye),xt=this.sessions[Pe==="text"?"lm_head":"gen_head"];if(!xt)throw new Error(`Unable to find "${xt}" generation head`);const Tt=await oe(xt,(0,z.pick)(st,xt.inputNames));return{...Xe,...st,...Tt}}async generate(Q){return this._generation_mode="text",super.generate(Q)}async generate_images(Q){this._generation_mode="image";const Pe=(Q.inputs??Q[this.main_input_name]).dims[1],Xe=(await super.generate(Q)).slice(null,[Pe,null]),Ye=this.sessions.image_decode,{decoded_image:st}=await oe(Ye,{generated_tokens:Xe}),xt=st.add_(1).mul_(127.5).clamp_(0,255).to("uint8"),Tt=[];for(const bt of xt){const Pt=j.RawImage.fromTensor(bt);Tt.push(Pt)}return Tt}}class Pc extends Be{constructor({char_logits:P,bpe_logits:Q,wp_logits:Pe}){super(),this.char_logits=P,this.bpe_logits=Q,this.wp_logits=Pe}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class Ac extends ue{}class Ic extends Ac{async _call(P){return new Pc(await super._call(P))}}class Co extends ue{}class Fc extends Co{}class zc extends Co{}class Ds extends ue{}class Oc extends Ds{}class Po extends Ds{}class Sr{static async from_pretrained(P,{progress_callback:Q=null,config:Pe=null,cache_dir:Xe=null,local_files_only:Ye=!1,revision:st="main",model_file_name:xt=null,subfolder:Tt="onnx",device:bt=null,dtype:Pt=null,use_external_data_format:Vt=null,session_options:Zt={}}={}){const kr={progress_callback:Q,config:Pe,cache_dir:Xe,local_files_only:Ye,revision:st,model_file_name:xt,subfolder:Tt,device:bt,dtype:Pt,use_external_data_format:Vt,session_options:Zt};if(kr.config=await p.AutoConfig.from_pretrained(P,kr),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const sr of this.MODEL_CLASS_MAPPINGS){const ur=sr.get(kr.config.model_type);if(ur)return await ur[1].from_pretrained(P,kr)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${kr.config.model_type}", attempting to construct from base class.`),await ue.from_pretrained(P,kr);throw Error(`Unsupported model type: ${kr.config.model_type}`)}}Me(Sr,"MODEL_CLASS_MAPPINGS",null),Me(Sr,"BASE_IF_FAIL",!1);const up=new Map([["bert",["BertModel",ht]],["modernbert",["ModernBertModel",me]],["nomic_bert",["NomicBertModel",$t]],["roformer",["RoFormerModel",It]],["electra",["ElectraModel",it]],["esm",["EsmModel",T]],["convbert",["ConvBertModel",Gr]],["camembert",["CamembertModel",F]],["deberta",["DebertaModel",ws]],["deberta-v2",["DebertaV2Model",as]],["mpnet",["MPNetModel",Qt]],["albert",["AlbertModel",Le]],["distilbert",["DistilBertModel",Kn]],["roberta",["RobertaModel",rl]],["xlm",["XLMModel",al]],["xlm-roberta",["XLMRobertaModel",cl]],["clap",["ClapModel",lc]],["clip",["CLIPModel",El]],["clipseg",["CLIPSegModel",Nl]],["chinese_clip",["ChineseCLIPModel",zl]],["siglip",["SiglipModel",Pl]],["jina_clip",["JinaCLIPModel",Ji]],["mobilebert",["MobileBertModel",Ke]],["squeezebert",["SqueezeBertModel",M]],["wav2vec2",["Wav2Vec2Model",zd]],["wav2vec2-bert",["Wav2Vec2BertModel",Wd]],["unispeech",["UniSpeechModel",io]],["unispeech-sat",["UniSpeechSatModel",Ud]],["hubert",["HubertModel",Qd]],["wavlm",["WavLMModel",Jd]],["audio-spectrogram-transformer",["ASTModel",fl]],["vits",["VitsModel",yo]],["pyannote",["PyAnnoteModel",so]],["wespeaker-resnet",["WeSpeakerResNetModel",Dd]],["detr",["DetrModel",qu]],["rt_detr",["RTDetrModel",Ra]],["table-transformer",["TableTransformerModel",Qu]],["vit",["ViTModel",Au]],["ijepa",["IJepaModel",vs]],["pvt",["PvtModel",Fu]],["vit_msn",["ViTMSNModel",Ea]],["vit_mae",["ViTMAEModel",zu]],["groupvit",["GroupViTModel",Ca]],["fastvit",["FastViTModel",hi]],["mobilevit",["MobileViTModel",Ys]],["mobilevitv2",["MobileViTV2Model",Du]],["owlvit",["OwlViTModel",Uu]],["owlv2",["Owlv2Model",_i]],["beit",["BeitModel",Fa]],["deit",["DeiTModel",Ju]],["hiera",["HieraModel",ed]],["convnext",["ConvNextModel",yd]],["convnextv2",["ConvNextV2Model",vd]],["dinov2",["Dinov2Model",kd]],["dinov2_with_registers",["Dinov2WithRegistersModel",es]],["resnet",["ResNetModel",Va]],["swin",["SwinModel",rd]],["swin2sr",["Swin2SRModel",qa]],["donut-swin",["DonutSwinModel",wd]],["yolos",["YolosModel",$d]],["dpt",["DPTModel",id]],["glpn",["GLPNModel",fd]],["hifigan",["SpeechT5HifiGan",uo]],["efficientnet",["EfficientNetModel",_c]],["decision_transformer",["DecisionTransformerModel",Ec]],["patchtst",["PatchTSTForPrediction",Fc]],["patchtsmixer",["PatchTSMixerForPrediction",Oc]],["mobilenet_v1",["MobileNetV1Model",yc]],["mobilenet_v2",["MobileNetV2Model",vc]],["mobilenet_v3",["MobileNetV3Model",Eo]],["mobilenet_v4",["MobileNetV4Model",Mc]],["maskformer",["MaskFormerModel",hd]],["mgp-str",["MgpstrForSceneTextRecognition",Ic]],["style_text_to_speech_2",["StyleTextToSpeech2Model",sc]]]),dp=new Map([["t5",["T5Model",nr]],["longt5",["LongT5Model",fr]],["mt5",["MT5Model",Lr]],["bart",["BartModel",Tn]],["mbart",["MBartModel",$n]],["marian",["MarianModel",bn]],["whisper",["WhisperModel",gl]],["m2m_100",["M2M100Model",ro]],["blenderbot",["BlenderbotModel",Yr]],["blenderbot-small",["BlenderbotSmallModel",En]]]),cp=new Map([["bloom",["BloomModel",Tu]],["jais",["JAISModel",Dl]],["gpt2",["GPT2Model",Bl]],["gptj",["GPTJModel",Wl]],["gpt_bigcode",["GPTBigCodeModel",Hl]],["gpt_neo",["GPTNeoModel",Ul]],["gpt_neox",["GPTNeoXModel",Gl]],["codegen",["CodeGenModel",Ql]],["llama",["LlamaModel",Yl]],["exaone",["ExaoneModel",di]],["olmo",["OlmoModel",iu]],["olmo2",["Olmo2Model",ou]],["mobilellm",["MobileLLMModel",nu]],["granite",["GraniteModel",uu]],["cohere",["CohereModel",cu]],["gemma",["GemmaModel",hu]],["gemma2",["Gemma2Model",mu]],["helium",["HeliumModel",Zl]],["glm",["GlmModel",tu]],["openelm",["OpenELMModel",_u]],["qwen2",["Qwen2Model",wu]],["phi",["PhiModel",Vn]],["phi3",["Phi3Model",ku]],["mpt",["MptModel",Eu]],["opt",["OPTModel",Cu]],["mistral",["MistralModel",ho]],["starcoder2",["Starcoder2Model",ac]],["falcon",["FalconModel",oc]],["stablelm",["StableLmModel",mc]]]),Ao=new Map([["speecht5",["SpeechT5ForSpeechToText",oo]],["whisper",["WhisperForConditionalGeneration",wl]],["moonshine",["MoonshineForConditionalGeneration",yl]]]),Lc=new Map([["speecht5",["SpeechT5ForTextToSpeech",lo]]]),Nc=new Map([["vits",["VitsModel",yo]],["musicgen",["MusicgenForConditionalGeneration",ko]]]),Bc=new Map([["bert",["BertForSequenceClassification",yt]],["modernbert",["ModernBertForSequenceClassification",tt]],["roformer",["RoFormerForSequenceClassification",Rt]],["electra",["ElectraForSequenceClassification",Bt]],["esm",["EsmForSequenceClassification",_e]],["convbert",["ConvBertForSequenceClassification",Gt]],["camembert",["CamembertForSequenceClassification",Cn]],["deberta",["DebertaForSequenceClassification",Nr]],["deberta-v2",["DebertaV2ForSequenceClassification",os]],["mpnet",["MPNetForSequenceClassification",qr]],["albert",["AlbertForSequenceClassification",_t]],["distilbert",["DistilBertForSequenceClassification",zn]],["roberta",["RobertaForSequenceClassification",Pn]],["xlm",["XLMForSequenceClassification",ll]],["xlm-roberta",["XLMRobertaForSequenceClassification",hl]],["bart",["BartForSequenceClassification",Hr]],["mbart",["MBartForSequenceClassification",Et]],["mobilebert",["MobileBertForSequenceClassification",Dt]],["squeezebert",["SqueezeBertForSequenceClassification",ce]]]),Io=new Map([["bert",["BertForTokenClassification",U]],["modernbert",["ModernBertForTokenClassification",Ze]],["roformer",["RoFormerForTokenClassification",_r]],["electra",["ElectraForTokenClassification",Ir]],["esm",["EsmForTokenClassification",Ie]],["convbert",["ConvBertForTokenClassification",Dn]],["camembert",["CamembertForTokenClassification",wn]],["deberta",["DebertaForTokenClassification",Wr]],["deberta-v2",["DebertaV2ForTokenClassification",Jn]],["mpnet",["MPNetForTokenClassification",jr]],["distilbert",["DistilBertForTokenClassification",On]],["roberta",["RobertaForTokenClassification",sl]],["xlm",["XLMForTokenClassification",ul]],["xlm-roberta",["XLMRobertaForTokenClassification",jn]]]),Fo=new Map([["t5",["T5ForConditionalGeneration",Or]],["longt5",["LongT5ForConditionalGeneration",Ur]],["mt5",["MT5ForConditionalGeneration",Lt]],["bart",["BartForConditionalGeneration",Fr]],["mbart",["MBartForConditionalGeneration",rt]],["marian",["MarianMTModel",Id]],["m2m_100",["M2M100ForConditionalGeneration",Fd]],["blenderbot",["BlenderbotForConditionalGeneration",Kr]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",zs]]]),zo=new Map([["bloom",["BloomForCausalLM",$u]],["gpt2",["GPT2LMHeadModel",Rl]],["jais",["JAISLMHeadModel",jl]],["gptj",["GPTJForCausalLM",xr]],["gpt_bigcode",["GPTBigCodeForCausalLM",Kl]],["gpt_neo",["GPTNeoForCausalLM",Vl]],["gpt_neox",["GPTNeoXForCausalLM",ql]],["codegen",["CodeGenForCausalLM",Xl]],["llama",["LlamaForCausalLM",Jl]],["exaone",["ExaoneForCausalLM",ru]],["olmo",["OlmoForCausalLM",au]],["olmo2",["Olmo2ForCausalLM",lu]],["mobilellm",["MobileLLMForCausalLM",su]],["granite",["GraniteForCausalLM",du]],["cohere",["CohereForCausalLM",pu]],["gemma",["GemmaForCausalLM",ma]],["gemma2",["Gemma2ForCausalLM",fu]],["helium",["HeliumForCausalLM",eu]],["glm",["GlmForCausalLM",Qs]],["openelm",["OpenELMForCausalLM",gu]],["qwen2",["Qwen2ForCausalLM",yu]],["phi",["PhiForCausalLM",xu]],["phi3",["Phi3ForCausalLM",Mu]],["mpt",["MptForCausalLM",Su]],["opt",["OPTForCausalLM",Pu]],["mbart",["MBartForCausalLM",Ln]],["mistral",["MistralForCausalLM",mo]],["starcoder2",["Starcoder2ForCausalLM",_o]],["falcon",["FalconForCausalLM",wo]],["trocr",["TrOCRForCausalLM",ic]],["stablelm",["StableLmForCausalLM",fc]],["phi3_v",["Phi3VForCausalLM",Xi]]]),pp=new Map([["multi_modality",["MultiModalityCausalLM",Cc]]]),Rc=new Map([["bert",["BertForMaskedLM",gt]],["modernbert",["ModernBertForMaskedLM",Oe]],["roformer",["RoFormerForMaskedLM",Ft]],["electra",["ElectraForMaskedLM",St]],["esm",["EsmForMaskedLM",q]],["convbert",["ConvBertForMaskedLM",hn]],["camembert",["CamembertForMaskedLM",ar]],["deberta",["DebertaForMaskedLM",Hn]],["deberta-v2",["DebertaV2ForMaskedLM",ys]],["mpnet",["MPNetForMaskedLM",Xt]],["albert",["AlbertForMaskedLM",ye]],["distilbert",["DistilBertForMaskedLM",u]],["roberta",["RobertaForMaskedLM",nl]],["xlm",["XLMWithLMHeadModel",ol]],["xlm-roberta",["XLMRobertaForMaskedLM",pl]],["mobilebert",["MobileBertForMaskedLM",kt]],["squeezebert",["SqueezeBertForMaskedLM",ee]]]),Dc=new Map([["bert",["BertForQuestionAnswering",ae]],["roformer",["RoFormerForQuestionAnswering",yr]],["electra",["ElectraForQuestionAnswering",Mn]],["convbert",["ConvBertForQuestionAnswering",sn]],["camembert",["CamembertForQuestionAnswering",yn]],["deberta",["DebertaForQuestionAnswering",fn]],["deberta-v2",["DebertaV2ForQuestionAnswering",ls]],["mpnet",["MPNetForQuestionAnswering",$r]],["albert",["AlbertForQuestionAnswering",Mt]],["distilbert",["DistilBertForQuestionAnswering",Zn]],["roberta",["RobertaForQuestionAnswering",il]],["xlm",["XLMForQuestionAnswering",dl]],["xlm-roberta",["XLMRobertaForQuestionAnswering",ml]],["mobilebert",["MobileBertForQuestionAnswering",tr]],["squeezebert",["SqueezeBertForQuestionAnswering",ve]]]),Oo=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Nn]],["idefics3",["Idefics3ForConditionalGeneration",Qi]]]),hp=new Map([["llava",["LlavaForConditionalGeneration",Ns]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Ki]],["moondream1",["Moondream1ForConditionalGeneration",Un]],["florence2",["Florence2ForConditionalGeneration",xl]],["qwen2-vl",["Qwen2VLForConditionalGeneration",vu]],["idefics3",["Idefics3ForConditionalGeneration",Qi]],["paligemma",["PaliGemmaForConditionalGeneration",Ml]]]),mp=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Nn]]]),jc=new Map([["vit",["ViTForImageClassification",Iu]],["ijepa",["IJepaForImageClassification",xs]],["pvt",["PvtForImageClassification",Xs]],["vit_msn",["ViTMSNForImageClassification",Sa]],["fastvit",["FastViTForImageClassification",Lu]],["mobilevit",["MobileViTForImageClassification",Ru]],["mobilevitv2",["MobileViTV2ForImageClassification",ju]],["beit",["BeitForImageClassification",za]],["deit",["DeiTForImageClassification",Zu]],["hiera",["HieraForImageClassification",td]],["convnext",["ConvNextForImageClassification",bd]],["convnextv2",["ConvNextV2ForImageClassification",xd]],["dinov2",["Dinov2ForImageClassification",Md]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",ks]],["resnet",["ResNetForImageClassification",yi]],["swin",["SwinForImageClassification",nd]],["segformer",["SegformerForImageClassification",pc]],["efficientnet",["EfficientNetForImageClassification",gc]],["mobilenet_v1",["MobileNetV1ForImageClassification",bc]],["mobilenet_v2",["MobileNetV2ForImageClassification",xc]],["mobilenet_v3",["MobileNetV3ForImageClassification",kc]],["mobilenet_v4",["MobileNetV4ForImageClassification",Tc]]]),Uc=new Map([["detr",["DetrForObjectDetection",Oa]],["rt_detr",["RTDetrForObjectDetection",Hu]],["table-transformer",["TableTransformerForObjectDetection",Xu]],["yolos",["YolosForObjectDetection",Ed]]]),Vc=new Map([["owlvit",["OwlViTForObjectDetection",Vu]],["owlv2",["Owlv2ForObjectDetection",Gu]],["grounding-dino",["GroundingDinoForObjectDetection",Td]]]),Gc=new Map([["detr",["DetrForSegmentation",La]],["clipseg",["CLIPSegForImageSegmentation",ui]]]),qc=new Map([["segformer",["SegformerForSemanticSegmentation",hc]],["sapiens",["SapiensForSemanticSegmentation",ld]]]),Wc=new Map([["detr",["DetrForSegmentation",La]],["maskformer",["MaskFormerForInstanceSegmentation",md]]]),Hc=new Map([["sam",["SamModel",Pd]]]),Lo=new Map([["wav2vec2",["Wav2Vec2ForCTC",Od]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Hd]],["unispeech",["UniSpeechForCTC",jd]],["unispeech-sat",["UniSpeechSatForCTC",Vd]],["wavlm",["WavLMForCTC",Zd]],["hubert",["HubertForCTC",Xd]]]),Kc=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",Ld]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Kd]],["unispeech",["UniSpeechForSequenceClassification",ao]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Gd]],["wavlm",["WavLMForSequenceClassification",ec]],["hubert",["HubertForSequenceClassification",Yd]],["audio-spectrogram-transformer",["ASTForAudioClassification",_l]]]),No=new Map([["wavlm",["WavLMForXVector",tc]]]),Bo=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",qd]],["wavlm",["WavLMForAudioFrameClassification",rc]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",Nd]],["pyannote",["PyAnnoteForAudioFrameClassification",Bd]]]),Ro=new Map([["vitmatte",["VitMatteForImageMatting",Bu]]]),fp=new Map([["patchtst",["PatchTSTForPrediction",zc]],["patchtsmixer",["PatchTSMixerForPrediction",Po]]]),Qc=new Map([["swin2sr",["Swin2SRForImageSuperResolution",sd]]]),Do=new Map([["dpt",["DPTForDepthEstimation",ad]],["depth_anything",["DepthAnythingForDepthEstimation",od]],["glpn",["GLPNForDepthEstimation",_d]],["sapiens",["SapiensForDepthEstimation",ud]],["depth_pro",["DepthProForDepthEstimation",pd]]]),Xc=new Map([["sapiens",["SapiensForNormalEstimation",dd]]]),Yc=new Map([["vitpose",["VitPoseForPoseEstimation",_n]]]),_p=new Map([["clip",["CLIPVisionModelWithProjection",Cl]],["siglip",["SiglipVisionModel",Il]],["jina_clip",["JinaCLIPVisionModel",Ll]]]),jo=[[up,N],[dp,v],[cp,R],[Bc,N],[Io,N],[Fo,O],[Ao,O],[zo,R],[pp,ge],[Rc,N],[Dc,N],[Oo,x],[hp,fe],[jc,N],[Gc,N],[Wc,N],[qc,N],[Ro,N],[fp,N],[Qc,N],[Do,N],[Xc,N],[Yc,N],[Uc,N],[Vc,N],[Hc,K],[Lo,N],[Kc,N],[Lc,O],[Nc,N],[No,N],[Bo,N],[_p,N]];for(const[w,P]of jo)for(const[Q,Pe]of w.values())we.set(Q,P),Re.set(Pe,Q),Se.set(Q,Pe);const js=[["MusicgenForConditionalGeneration",ko,de],["Phi3VForCausalLM",Xi,Ae],["CLIPTextModelWithProjection",Sl,N],["SiglipTextModel",Al,N],["JinaCLIPTextModel",Ol,N],["ClapTextModelWithProjection",uc,N],["ClapAudioModelWithProjection",dc,N]];for(const[w,P,Q]of js)we.set(w,Q),Re.set(P,w),Se.set(w,P);class Si extends Sr{}Me(Si,"MODEL_CLASS_MAPPINGS",jo.map(P=>P[0])),Me(Si,"BASE_IF_FAIL",!0);class gp extends Sr{}Me(gp,"MODEL_CLASS_MAPPINGS",[Bc]);class wp extends Sr{}Me(wp,"MODEL_CLASS_MAPPINGS",[Io]);class Jt extends Sr{}Me(Jt,"MODEL_CLASS_MAPPINGS",[Fo]);class Jc extends Sr{}Me(Jc,"MODEL_CLASS_MAPPINGS",[Ao]);class ts extends Sr{}Me(ts,"MODEL_CLASS_MAPPINGS",[Lc]);class Zc extends Sr{}Me(Zc,"MODEL_CLASS_MAPPINGS",[Nc]);class Uo extends Sr{}Me(Uo,"MODEL_CLASS_MAPPINGS",[zo]);class yp extends Sr{}Me(yp,"MODEL_CLASS_MAPPINGS",[Rc]);class Qr extends Sr{}Me(Qr,"MODEL_CLASS_MAPPINGS",[Dc]);class or extends Sr{}Me(or,"MODEL_CLASS_MAPPINGS",[Oo]);class dr extends Sr{}Me(dr,"MODEL_CLASS_MAPPINGS",[jc]);class cs extends Sr{}Me(cs,"MODEL_CLASS_MAPPINGS",[Gc]);class bp extends Sr{}Me(bp,"MODEL_CLASS_MAPPINGS",[qc]);class Vo extends Sr{}Me(Vo,"MODEL_CLASS_MAPPINGS",[Wc]);class vp extends Sr{}Me(vp,"MODEL_CLASS_MAPPINGS",[Uc]);class Go extends Sr{}Me(Go,"MODEL_CLASS_MAPPINGS",[Vc]);class xp extends Sr{}Me(xp,"MODEL_CLASS_MAPPINGS",[Hc]);class kp extends Sr{}Me(kp,"MODEL_CLASS_MAPPINGS",[Lo]);class qo extends Sr{}Me(qo,"MODEL_CLASS_MAPPINGS",[Kc]);class Mp extends Sr{}Me(Mp,"MODEL_CLASS_MAPPINGS",[No]);class Tp extends Sr{}Me(Tp,"MODEL_CLASS_MAPPINGS",[Bo]);class $p extends Sr{}Me($p,"MODEL_CLASS_MAPPINGS",[mp]);class Ts extends Sr{}Me(Ts,"MODEL_CLASS_MAPPINGS",[Ro]);class Wo extends Sr{}Me(Wo,"MODEL_CLASS_MAPPINGS",[Qc]);class Ep extends Sr{}Me(Ep,"MODEL_CLASS_MAPPINGS",[Do]);class Ho extends Sr{}Me(Ho,"MODEL_CLASS_MAPPINGS",[Xc]);class Ko extends Sr{}Me(Ko,"MODEL_CLASS_MAPPINGS",[Yc]);class Sp extends Sr{}Me(Sp,"MODEL_CLASS_MAPPINGS",[_p]);class Jp extends Be{constructor({logits:P,past_key_values:Q,encoder_outputs:Pe,decoder_attentions:Xe=null,cross_attentions:Ye=null}){super(),this.logits=P,this.past_key_values=Q,this.encoder_outputs=Pe,this.decoder_attentions=Xe,this.cross_attentions=Ye}}class lr extends Be{constructor({logits:P,...Q}){super(),this.logits=P;const Pe=Object.values(Q);Pe.length>0&&(this.attentions=Pe)}}class Cp extends Be{constructor({logits:P,embeddings:Q}){super(),this.logits=P,this.embeddings=Q}}class un extends Be{constructor({logits:P}){super(),this.logits=P}}class mn extends Be{constructor({logits:P}){super(),this.logits=P}}class vn extends Be{constructor({start_logits:P,end_logits:Q}){super(),this.start_logits=P,this.end_logits=Q}}class Us extends Be{constructor({logits:P}){super(),this.logits=P}}class Zp extends Be{constructor({logits:P,past_key_values:Q}){super(),this.logits=P,this.past_key_values=Q}}class Pp extends Be{constructor({alphas:P}){super(),this.alphas=P}}class Ap extends Be{constructor({waveform:P,spectrogram:Q}){super(),this.waveform=P,this.spectrogram=Q}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(Te,k,n)=>{n.r(k),n.d(k,{ASTFeatureExtractor:()=>V});var p=n("./src/base/feature_extraction_utils.js");n("./src/utils/tensor.js");var I=n("./src/utils/audio.js");class V extends p.FeatureExtractor{constructor(z){super(z);const $=this.config.sampling_rate,y=(0,I.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor($/2),$,null,"kaldi",!0);for(let _=0;_<y.length;++_)y[_].push(0);this.mel_filters=y,this.window=(0,I.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(z,$){return(0,I.spectrogram)(z,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:$,transpose:!0})}async _call(z){(0,p.validate_audio_inputs)(z,"ASTFeatureExtractor");const $=await this._extract_fbank_features(z,this.config.max_length);if(this.config.do_normalize){const y=2*this.std,_=$.data;for(let A=0;A<_.length;++A)_[A]=(_[A]-this.mean)/y}return{input_values:$.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(Te,k,n)=>{n.r(k),n.d(k,{AutoFeatureExtractor:()=>Y});var p=n("./src/utils/constants.js"),I=n("./src/utils/hub.js");n("./src/base/feature_extraction_utils.js");var V=n("./src/models/feature_extractors.js");class Y{static async from_pretrained($,y={}){const _=await(0,I.getModelJSON)($,p.FEATURE_EXTRACTOR_NAME,!0,y),A=_.feature_extractor_type,b=V[A];if(!b)throw new Error(`Unknown feature_extractor_type: '${A}'. Please report this at ${p.GITHUB_ISSUE_URL}.`);return new b(_)}}},"./src/models/auto/image_processing_auto.js":(Te,k,n)=>{n.r(k),n.d(k,{AutoImageProcessor:()=>z});var p=n("./src/utils/constants.js"),I=n("./src/utils/hub.js"),V=n("./src/base/image_processors_utils.js"),Y=n("./src/models/image_processors.js");class z{static async from_pretrained(y,_={}){const A=await(0,I.getModelJSON)(y,p.IMAGE_PROCESSOR_NAME,!0,_),b=A.image_processor_type??A.feature_extractor_type;let j=Y[b];return j||(b!==void 0&&console.warn(`Image processor type '${b}' not found, assuming base ImageProcessor. Please report this at ${p.GITHUB_ISSUE_URL}.`),j=V.ImageProcessor),new j(A)}}},"./src/models/auto/processing_auto.js":(Te,k,n)=>{n.r(k),n.d(k,{AutoProcessor:()=>y});var p=n("./src/utils/constants.js"),I=n("./src/utils/hub.js"),V=n("./src/base/processing_utils.js"),Y=n("./src/models/processors.js"),z=n("./src/models/image_processors.js"),$=n("./src/models/feature_extractors.js");class y{static async from_pretrained(A,b={}){const j=await(0,I.getModelJSON)(A,p.IMAGE_PROCESSOR_NAME,!0,b),{image_processor_type:re,feature_extractor_type:se,processor_class:le}=j;if(le&&Y[le])return Y[le].from_pretrained(A,b);if(!re&&!se)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const L={};if(re){const G=z[re];if(!G)throw new Error(`Unknown image_processor_type: '${re}'.`);L.image_processor=new G(j)}if(se){const G=z[se];if(G)L.image_processor=new G(j);else{const ie=$[se];if(!ie)throw new Error(`Unknown feature_extractor_type: '${se}'.`);L.feature_extractor=new ie(j)}}return new V.Processor({},L)}}},"./src/models/beit/image_processing_beit.js":(Te,k,n)=>{n.r(k),n.d(k,{BeitFeatureExtractor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(Te,k,n)=>{n.r(k),n.d(k,{BitImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(Te,k,n)=>{n.r(k),n.d(k,{ChineseCLIPFeatureExtractor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(Te,k,n)=>{n.r(k),n.d(k,{ClapFeatureExtractor:()=>V});var p=n("./src/base/feature_extraction_utils.js");n("./src/utils/tensor.js");var I=n("./src/utils/audio.js");class V extends p.FeatureExtractor{constructor(z){super(z),this.mel_filters=(0,I.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,I.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,I.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(z,$,y,_){let A;const b=z.length-$;if(b>0){if(y!=="rand_trunc")throw new Error(`Truncation strategy "${y}" not implemented`);{const j=Math.floor(Math.random()*(b+1));z=z.subarray(j,j+$),A=await this._extract_fbank_features(z,this.mel_filters_slaney,this.config.nb_max_samples)}}else{if(b<0){let j=new Float64Array($);if(j.set(z),_==="repeat")for(let re=z.length;re<$;re+=z.length)j.set(z.subarray(0,Math.min(z.length,$-re)),re);else if(_==="repeatpad")for(let re=z.length;re<-b;re+=z.length)j.set(z,re);z=j}if(y==="fusion")throw new Error(`Truncation strategy "${y}" not implemented`);A=await this._extract_fbank_features(z,this.mel_filters_slaney,this.config.nb_max_samples)}return A.unsqueeze_(0)}async _extract_fbank_features(z,$,y=null){return(0,I.spectrogram)(z,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:$,log_mel:"dB",max_num_frames:y,do_pad:!1,transpose:!0})}async _call(z,{max_length:$=null}={}){return(0,p.validate_audio_inputs)(z,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(z,$??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(Te,k,n)=>{n.r(k),n.d(k,{CLIPFeatureExtractor:()=>V,CLIPImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}class V extends I{}},"./src/models/convnext/image_processing_convnext.js":(Te,k,n)=>{n.r(k),n.d(k,{ConvNextFeatureExtractor:()=>V,ConvNextImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{constructor(z){super(z),this.crop_pct=this.config.crop_pct??.875}async resize(z){var y;const $=(y=this.size)==null?void 0:y.shortest_edge;if($===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if($<384){const _=Math.floor($/this.crop_pct),[A,b]=this.get_resize_output_image_size(z,{shortest_edge:_});z=await z.resize(A,b,{resample:this.resample}),z=await z.center_crop($,$)}else z=await z.resize($,$,{resample:this.resample});return z}}class V extends I{}},"./src/models/deit/image_processing_deit.js":(Te,k,n)=>{n.r(k),n.d(k,{DeiTFeatureExtractor:()=>V,DeiTImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}class V extends I{}},"./src/models/detr/image_processing_detr.js":(Te,k,n)=>{n.r(k),n.d(k,{DetrFeatureExtractor:()=>Y,DetrImageProcessor:()=>V});var p=n("./src/base/image_processors_utils.js"),I=n("./src/utils/tensor.js");class V extends p.ImageProcessor{async _call($){const y=await super._call($),_=[y.pixel_values.dims[0],64,64],A=(0,I.full)(_,1n);return{...y,pixel_mask:A}}post_process_object_detection(...$){return(0,p.post_process_object_detection)(...$)}post_process_panoptic_segmentation(...$){return(0,p.post_process_panoptic_segmentation)(...$)}post_process_instance_segmentation(...$){return(0,p.post_process_instance_segmentation)(...$)}}class Y extends V{}},"./src/models/donut/image_processing_donut.js":(Te,k,n)=>{n.r(k),n.d(k,{DonutFeatureExtractor:()=>V,DonutImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{pad_image(z,$,y,_={}){const[A,b,j]=$;let re=this.image_mean;Array.isArray(this.image_mean)||(re=new Array(j).fill(re));let se=this.image_std;Array.isArray(se)||(se=new Array(j).fill(re));const le=re.map((L,G)=>-L/se[G]);return super.pad_image(z,$,y,{center:!0,constant_values:le,..._})}}class V extends I{}},"./src/models/dpt/image_processing_dpt.js":(Te,k,n)=>{n.r(k),n.d(k,{DPTFeatureExtractor:()=>V,DPTImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}class V extends I{}},"./src/models/efficientnet/image_processing_efficientnet.js":(Te,k,n)=>{n.r(k),n.d(k,{EfficientNetImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{constructor(Y){super(Y),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(z=>z*z))}}},"./src/models/feature_extractors.js":(Te,k,n)=>{n.r(k),n.d(k,{ASTFeatureExtractor:()=>p.ASTFeatureExtractor,ClapFeatureExtractor:()=>I.ClapFeatureExtractor,ImageFeatureExtractor:()=>b.ImageProcessor,MoonshineFeatureExtractor:()=>V.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>Y.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>z.SeamlessM4TFeatureExtractor,SpeechT5FeatureExtractor:()=>$.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>y.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>_.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>A.WhisperFeatureExtractor});var p=n("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),I=n("./src/models/clap/feature_extraction_clap.js"),V=n("./src/models/moonshine/feature_extraction_moonshine.js"),Y=n("./src/models/pyannote/feature_extraction_pyannote.js"),z=n("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),$=n("./src/models/speecht5/feature_extraction_speecht5.js"),y=n("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),_=n("./src/models/wespeaker/feature_extraction_wespeaker.js"),A=n("./src/models/whisper/feature_extraction_whisper.js"),b=n("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(Te,k,n)=>{n.r(k),n.d(k,{Florence2Processor:()=>Y});var p=n("./src/base/processing_utils.js"),I=n("./src/models/auto/image_processing_auto.js"),V=n("./src/tokenizers.js");class Y extends p.Processor{constructor($,y){super($,y);const{tasks_answer_post_processing_type:_,task_prompts_without_inputs:A,task_prompts_with_input:b}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(_??{})),this.task_prompts_without_inputs=new Map(Object.entries(A??{})),this.task_prompts_with_input=new Map(Object.entries(b??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts($){typeof $=="string"&&($=[$]);const y=[];for(const _ of $)if(this.task_prompts_without_inputs.has(_))y.push(this.task_prompts_without_inputs.get(_));else{for(const[A,b]of this.task_prompts_with_input)if(_.includes(A)){y.push(b.replaceAll("{input}",_).replaceAll(A,""));break}y.length!==$.length&&y.push(_)}return y}post_process_generation($,y,_){const A=this.tasks_answer_post_processing_type.get(y)??"pure_text";let b;switch($=$.replaceAll("<s>","").replaceAll("</s>",""),A){case"pure_text":b=$;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const j=A==="ocr"?"quad_boxes":"bboxes",re=$.matchAll(this.regexes[j]),se=[],le=[];for(const[L,G,...ie]of re)se.push(G?G.trim():se.at(-1)??""),le.push(ie.map((N,v)=>(Number(N)+.5)/this.size_per_bin*_[v%2]));b={labels:se,[j]:le};break;default:throw new Error(`Task "${y}" (of type "${A}") not yet implemented.`)}return{[y]:b}}async _call($,y=null,_={}){if(!$&&!y)throw new Error("Either text or images must be provided");return{...await this.image_processor($,_),...y?this.tokenizer(y,_):{}}}}Me(Y,"tokenizer_class",V.AutoTokenizer),Me(Y,"image_processor_class",I.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(Te,k,n)=>{n.r(k),n.d(k,{GLPNFeatureExtractor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(Te,k,n)=>{n.r(k),n.d(k,{GroundingDinoImageProcessor:()=>V});var p=n("./src/base/image_processors_utils.js"),I=n("./src/utils/tensor.js");class V extends p.ImageProcessor{async _call(z){const $=await super._call(z),y=$.pixel_values.dims,_=(0,I.ones)([y[0],y[2],y[3]]);return{...$,pixel_mask:_}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(Te,k,n)=>{n.r(k),n.d(k,{GroundingDinoProcessor:()=>$});var p=n("./src/base/processing_utils.js"),I=n("./src/models/auto/image_processing_auto.js"),V=n("./src/tokenizers.js"),Y=n("./src/base/image_processors_utils.js");function z(y,_){const A=y.dims.at(-1)-1,b=y.tolist();b.fill(!1,0,1),b.fill(!1,A);const j=_.tolist();return b.map((re,se)=>re?se:null).filter(re=>re!==null).map(re=>j[re])}class $ extends p.Processor{async _call(_,A,b={}){const j=_?await this.image_processor(_,b):{};return{...A?this.tokenizer(A,b):{},...j}}post_process_grounded_object_detection(_,A,{box_threshold:b=.25,text_threshold:j=.25,target_sizes:re=null}={}){const{logits:se,pred_boxes:le}=_,L=se.dims[0];if(re!==null&&re.length!==L)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const G=se.dims.at(1),ie=se.sigmoid(),N=ie.max(-1).tolist(),v=le.tolist().map(x=>x.map(R=>(0,Y.center_to_corners_format)(R))),O=[];for(let x=0;x<L;++x){const R=re!==null?re[x]:null;R!==null&&(v[x]=v[x].map(Ae=>Ae.map((we,Se)=>we*R[(Se+1)%2])));const K=N[x],fe=[],de=[],ge=[];for(let Ae=0;Ae<G;++Ae){const we=K[Ae];if(we<=b)continue;const Se=v[x][Ae],Re=ie[x][Ae];fe.push(we),ge.push(Se);const Ue=z(Re.gt(j),A[x]);de.push(Ue)}O.push({scores:fe,boxes:ge,labels:this.batch_decode(de)})}return O}}Me($,"tokenizer_class",V.AutoTokenizer),Me($,"image_processor_class",I.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(Te,k,n)=>{n.r(k),n.d(k,{Idefics3ImageProcessor:()=>V});var p=n("./src/base/image_processors_utils.js"),I=n("./src/utils/tensor.js");class V extends p.ImageProcessor{constructor(z){super(z),this.do_image_splitting=z.do_image_splitting??!0,this.max_image_size=z.max_image_size}get_resize_for_vision_encoder(z,$){let[y,_]=z.dims.slice(-2);const A=_/y;return _>=y?(_=Math.ceil(_/$)*$,y=Math.floor(_/A),y=Math.ceil(y/$)*$):(y=Math.ceil(y/$)*$,_=Math.floor(y*A),_=Math.ceil(_/$)*$),{height:y,width:_}}async _call(z,{do_image_splitting:$=null,return_row_col_info:y=!1}={}){let _;if(Array.isArray(z)){if(z.length===0||!z[0])throw new Error("No images provided.");_=Array.isArray(z[0])?z:[z]}else _=[[z]];let A=[],b=[],j=[];const re=[],se=[];for(const x of _){let R=await Promise.all(x.map(de=>this.preprocess(de)));re.push(...R.map(de=>de.original_size)),se.push(...R.map(de=>de.reshaped_input_size)),R.forEach(de=>de.pixel_values.unsqueeze_(0));const{longest_edge:K}=this.max_image_size;let fe;if($??this.do_image_splitting){let de=new Array(R.length),ge=new Array(R.length);fe=await Promise.all(R.map(async(Ae,we)=>{const Se=this.get_resize_for_vision_encoder(Ae.pixel_values,K),Re=await(0,I.interpolate_4d)(Ae.pixel_values,{size:[Se.height,Se.width]}),{frames:Ue,num_splits_h:dt,num_splits_w:oe}=await this.split_image(Re,this.max_image_size);return de[we]=dt,ge[we]=oe,(0,I.cat)(Ue,0)})),b.push(de),j.push(ge)}else{const de=[K,K];fe=await Promise.all(R.map(ge=>(0,I.interpolate_4d)(ge.pixel_values,{size:de}))),b.push(new Array(R.length).fill(0)),j.push(new Array(R.length).fill(0))}A.push((0,I.cat)(fe,0))}const le=A.length,[L,G,ie,N]=A[0].dims;let v,O;if(le===1)v=A[0].unsqueeze_(0),O=(0,I.full)([le,L,ie,N],!0);else{const x=Math.max(...A.map(fe=>fe.dims.at(0)));O=(0,I.full)([le,x,ie,N],!0);const R=O.data,K=x*ie*N;for(let fe=0;fe<le;++fe){const de=A[fe].dims[0];if(de<x){A[fe]=(0,I.cat)([A[fe],(0,I.full)([x-de,G,ie,N],0)],0);const ge=fe*K+de*ie*N,Ae=(fe+1)*K;R.fill(!1,ge,Ae)}}v=(0,I.stack)(A,0)}return{pixel_values:v,pixel_attention_mask:O,original_sizes:re,reshaped_input_sizes:se,...y?{rows:b,cols:j}:{}}}async split_image(z,{longest_edge:$}){const y=$,_=$,A=[],[b,j]=z.dims.slice(-2);let re=0,se=0;if(b>y||j>_){re=Math.ceil(b/y),se=Math.ceil(j/_);const le=Math.ceil(b/re),L=Math.ceil(j/se);for(let N=0;N<re;++N)for(let v=0;v<se;++v){let O,x,R,K;N===re-1?(x=b-le,K=b):(x=N*le,K=(N+1)*le),v===se-1?(O=j-L,R=j):(O=v*L,R=(v+1)*L);const fe=[x,O],de=[K,R],ge=await(0,I.slice)(z,fe,de,[2,3]);A.push(ge)}const G=y,ie=_;b===G&&j===ie||(z=await(0,I.interpolate_4d)(z,{size:[G,ie]}))}return A.push(z),{frames:A,num_splits_h:re,num_splits_w:se}}}},"./src/models/idefics3/processing_idefics3.js":(Te,k,n)=>{n.r(k),n.d(k,{Idefics3Processor:()=>$});var p=n("./src/base/processing_utils.js"),I=n("./src/models/auto/image_processing_auto.js"),V=n("./src/tokenizers.js");n("./src/utils/image.js");var Y=n("./src/utils/core.js");function z(y,_,A,b,j,re){return y===0&&_===0?function(se,le,L,G){return`${le}${G}`+L.repeat(se)+`${le}`}(A,b,j,re):function(se,le,L,G,ie,N){let v="";for(let O=0;O<le;++O){for(let x=0;x<L;++x)v+=G+`<row_${O+1}_col_${x+1}>`+ie.repeat(se);v+=`
`}return v+=`
${G}${N}`+ie.repeat(se)+`${G}`,v}(A,y,_,b,j,re)}class $ extends p.Processor{constructor(){super(...arguments);Me(this,"fake_image_token","<fake_token_around_image>");Me(this,"image_token","<image>");Me(this,"global_img_token","<global-img>")}async _call(A,b=null,j={}){let re;j.return_row_col_info??(j.return_row_col_info=!0),b&&(re=await this.image_processor(b,j)),Array.isArray(A)||(A=[A]);const se=re.rows??[new Array(A.length).fill(0)],le=re.cols??[new Array(A.length).fill(0)],L=this.config.image_seq_len,G=[],ie=[];for(let N=0;N<A.length;++N){const v=A[N],O=se[N],x=le[N];G.push((0,Y.count)(v,this.image_token));const R=O.map((de,ge)=>z(de,x[ge],L,this.fake_image_token,this.image_token,this.global_img_token)),K=v.split(this.image_token);if(K.length===0)throw new Error("The image token should be present in the text.");let fe=K[0];for(let de=0;de<R.length;++de)fe+=R[de]+K[de+1];ie.push(fe)}return{...this.tokenizer(ie),...re}}}Me($,"image_processor_class",I.AutoImageProcessor),Me($,"tokenizer_class",V.AutoTokenizer),Me($,"uses_processor_config",!0)},"./src/models/image_processors.js":(Te,k,n)=>{n.r(k),n.d(k,{BeitFeatureExtractor:()=>p.BeitFeatureExtractor,BitImageProcessor:()=>I.BitImageProcessor,CLIPFeatureExtractor:()=>Y.CLIPFeatureExtractor,CLIPImageProcessor:()=>Y.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>V.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>z.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>z.ConvNextImageProcessor,DPTFeatureExtractor:()=>A.DPTFeatureExtractor,DPTImageProcessor:()=>A.DPTImageProcessor,DeiTFeatureExtractor:()=>$.DeiTFeatureExtractor,DeiTImageProcessor:()=>$.DeiTImageProcessor,DetrFeatureExtractor:()=>y.DetrFeatureExtractor,DetrImageProcessor:()=>y.DetrImageProcessor,DonutFeatureExtractor:()=>_.DonutFeatureExtractor,DonutImageProcessor:()=>_.DonutImageProcessor,EfficientNetImageProcessor:()=>b.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>j.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>re.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>se.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>L.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>G.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>ie.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>N.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>N.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>v.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>v.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>O.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>O.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>x.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>x.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>R.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>R.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>K.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>K.MobileViTImageProcessor,NougatImageProcessor:()=>fe.NougatImageProcessor,OwlViTFeatureExtractor:()=>ge.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>ge.OwlViTImageProcessor,Owlv2ImageProcessor:()=>de.Owlv2ImageProcessor,Phi3VImageProcessor:()=>Ae.Phi3VImageProcessor,PvtImageProcessor:()=>we.PvtImageProcessor,Qwen2VLImageProcessor:()=>Se.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>Re.RTDetrImageProcessor,SamImageProcessor:()=>Ue.SamImageProcessor,SegformerFeatureExtractor:()=>dt.SegformerFeatureExtractor,SegformerImageProcessor:()=>dt.SegformerImageProcessor,SiglipImageProcessor:()=>oe.SiglipImageProcessor,Swin2SRImageProcessor:()=>Z.Swin2SRImageProcessor,VLMImageProcessor:()=>le.VLMImageProcessor,ViTFeatureExtractor:()=>pe.ViTFeatureExtractor,ViTImageProcessor:()=>pe.ViTImageProcessor,VitMatteImageProcessor:()=>Ee.VitMatteImageProcessor,VitPoseImageProcessor:()=>qe.VitPoseImageProcessor,YolosFeatureExtractor:()=>xe.YolosFeatureExtractor,YolosImageProcessor:()=>xe.YolosImageProcessor});var p=n("./src/models/beit/image_processing_beit.js"),I=n("./src/models/bit/image_processing_bit.js"),V=n("./src/models/chinese_clip/image_processing_chinese_clip.js"),Y=n("./src/models/clip/image_processing_clip.js"),z=n("./src/models/convnext/image_processing_convnext.js"),$=n("./src/models/deit/image_processing_deit.js"),y=n("./src/models/detr/image_processing_detr.js"),_=n("./src/models/donut/image_processing_donut.js"),A=n("./src/models/dpt/image_processing_dpt.js"),b=n("./src/models/efficientnet/image_processing_efficientnet.js"),j=n("./src/models/glpn/image_processing_glpn.js"),re=n("./src/models/grounding_dino/image_processing_grounding_dino.js"),se=n("./src/models/idefics3/image_processing_idefics3.js"),le=n("./src/models/janus/image_processing_janus.js"),L=n("./src/models/jina_clip/image_processing_jina_clip.js"),G=n("./src/models/llava_onevision/image_processing_llava_onevision.js"),ie=n("./src/models/mask2former/image_processing_mask2former.js"),N=n("./src/models/maskformer/image_processing_maskformer.js"),v=n("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),O=n("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),x=n("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),R=n("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),K=n("./src/models/mobilevit/image_processing_mobilevit.js"),fe=n("./src/models/nougat/image_processing_nougat.js"),de=n("./src/models/owlv2/image_processing_owlv2.js"),ge=n("./src/models/owlvit/image_processing_owlvit.js"),Ae=n("./src/models/phi3_v/image_processing_phi3_v.js"),we=n("./src/models/pvt/image_processing_pvt.js"),Se=n("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),Re=n("./src/models/rt_detr/image_processing_rt_detr.js"),Ue=n("./src/models/sam/image_processing_sam.js"),dt=n("./src/models/segformer/image_processing_segformer.js"),oe=n("./src/models/siglip/image_processing_siglip.js"),Z=n("./src/models/swin2sr/image_processing_swin2sr.js"),pe=n("./src/models/vit/image_processing_vit.js"),Ee=n("./src/models/vitmatte/image_processing_vitmatte.js"),qe=n("./src/models/vitpose/image_processing_vitpose.js"),xe=n("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(Te,k,n)=>{n.r(k),n.d(k,{VLMImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{constructor(Y){super({do_pad:!0,pad_size:{width:Y.image_size,height:Y.image_size},...Y}),this.constant_values=this.config.background_color.map(z=>z*this.rescale_factor)}pad_image(Y,z,$,y){return super.pad_image(Y,z,$,{constant_values:this.constant_values,center:!0,...y})}}},"./src/models/janus/processing_janus.js":(Te,k,n)=>{n.r(k),n.d(k,{VLChatProcessor:()=>y});var p=n("./src/base/processing_utils.js"),I=n("./src/models/auto/image_processing_auto.js"),V=n("./src/tokenizers.js"),Y=n("./src/utils/core.js"),z=n("./src/utils/tensor.js"),$=n("./src/utils/image.js");class y extends p.Processor{constructor(A,b){super(A,b),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(A,{images:b=null,chat_template:j="default"}={}){b?Array.isArray(b)||(b=[b]):b=await Promise.all(A.filter(K=>K.images).flatMap(K=>K.images).map(K=>$.RawImage.read(K)));const re=this.tokenizer,se=K=>re.encode(K,{add_special_tokens:!1}),le=re.apply_chat_template(A,{tokenize:!1,add_generation_prompt:!0,chat_template:j}).split(this.image_tag),L=le.length-1;if(b.length!==L)throw new Error(`Number of images provided (${b.length}) does not match number of "${this.image_tag}" image tags (${L})`);const[G,ie,N]=re.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let v=se(le[0]),O=new Array(v.length).fill(!1);for(let K=1;K<le.length;++K){const fe=new Array(this.num_image_tokens).fill(G),de=se(le[K]);v=(0,Y.mergeArrays)(v,[ie],fe,[N],de);const ge=new Array(this.num_image_tokens).fill(!0);O=(0,Y.mergeArrays)(O,[!1],ge,[!1],new Array(de.length).fill(!1))}const x=[1,v.length],R={input_ids:new z.Tensor("int64",v,x),attention_mask:new z.Tensor("int64",new Array(v.length).fill(1),x),images_seq_mask:new z.Tensor("bool",O,x),images_emb_mask:new z.Tensor("bool",new Array(L*this.num_image_tokens).fill(!0),[1,L,this.num_image_tokens])};if(b&&b.length>0){const K=await this.image_processor(b);return K.pixel_values.unsqueeze_(0),{...R,...K}}return R}}Me(y,"image_processor_class",I.AutoImageProcessor),Me(y,"tokenizer_class",V.AutoTokenizer),Me(y,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(Te,k,n)=>{n.r(k),n.d(k,{JinaCLIPImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{constructor(Y){const{resize_mode:z,fill_color:$,interpolation:y,size:_,...A}=Y;super({...A,size:z==="squash"?{width:_,height:_}:z==="shortest"?{shortest_edge:_}:{longest_edge:_},resample:y==="bicubic"?3:2,do_center_crop:!0,crop_size:_,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(Te,k,n)=>{n.r(k),n.d(k,{JinaCLIPProcessor:()=>Y});var p=n("./src/base/processing_utils.js"),I=n("./src/models/auto/image_processing_auto.js"),V=n("./src/tokenizers.js");class Y extends p.Processor{async _call($=null,y=null,_={}){if(!$&&!y)throw new Error("Either text or images must be provided");return{...$?this.tokenizer($,_):{},...y?await this.image_processor(y,_):{}}}}Me(Y,"tokenizer_class",V.AutoTokenizer),Me(Y,"image_processor_class",I.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(Te,k,n)=>{n.r(k),n.d(k,{LlavaOnevisionImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(Te,k,n)=>{n.r(k),n.d(k,{Mask2FormerImageProcessor:()=>I});var p=n("./src/models/maskformer/image_processing_maskformer.js");class I extends p.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(Te,k,n)=>{n.r(k),n.d(k,{MaskFormerFeatureExtractor:()=>V,MaskFormerImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{post_process_panoptic_segmentation(...z){return(0,p.post_process_panoptic_segmentation)(...z)}post_process_instance_segmentation(...z){return(0,p.post_process_instance_segmentation)(...z)}}class V extends I{}},"./src/models/mgp_str/processing_mgp_str.js":(Te,k,n)=>{n.r(k),n.d(k,{MgpstrProcessor:()=>$});var p=n("./src/base/processing_utils.js"),I=n("./src/models/auto/image_processing_auto.js"),V=n("./src/tokenizers.js"),Y=n("./src/utils/maths.js");const z={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class $ extends p.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(_,A){if(!z.hasOwnProperty(A))throw new Error(`Format ${A} is not supported.`);const[b,j]=z[A],re=this[b].bind(this),[se,le]=_.dims,L=[],G=[],ie=_.tolist();for(let N=0;N<se;++N){const v=ie[N],O=[],x=[];for(let K=1;K<le;++K){const[fe,de]=(0,Y.max)((0,Y.softmax)(v[K]));if(x.push(fe),de==j)break;O.push(de)}const R=x.length>0?x.reduce((K,fe)=>K*fe,1):0;G.push(O),L.push(R)}return[re(G),L]}char_decode(_){return this.char_tokenizer.batch_decode(_).map(A=>A.replaceAll(" ",""))}bpe_decode(_){return this.bpe_tokenizer.batch_decode(_)}wp_decode(_){return this.wp_tokenizer.batch_decode(_).map(A=>A.replaceAll(" ",""))}batch_decode([_,A,b]){const[j,re]=this._decode_helper(_,"char"),[se,le]=this._decode_helper(A,"bpe"),[L,G]=this._decode_helper(b,"wp"),ie=[],N=[];for(let v=0;v<j.length;++v){const[O,x]=(0,Y.max)([re[v],le[v],G[v]]);ie.push([j[v],se[v],L[v]][x]),N.push(O)}return{generated_text:ie,scores:N,char_preds:j,bpe_preds:se,wp_preds:L}}static async from_pretrained(..._){const A=await super.from_pretrained(..._),b=await V.AutoTokenizer.from_pretrained("Xenova/gpt2"),j=await V.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return A.components={image_processor:A.image_processor,char_tokenizer:A.tokenizer,bpe_tokenizer:b,wp_tokenizer:j},A}async _call(_,A=null){const b=await this.image_processor(_);return A&&(b.labels=this.tokenizer(A).input_ids),b}}Me($,"tokenizer_class",V.AutoTokenizer),Me($,"image_processor_class",I.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(Te,k,n)=>{n.r(k),n.d(k,{MobileNetV1FeatureExtractor:()=>V,MobileNetV1ImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}class V extends I{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(Te,k,n)=>{n.r(k),n.d(k,{MobileNetV2FeatureExtractor:()=>V,MobileNetV2ImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}class V extends I{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(Te,k,n)=>{n.r(k),n.d(k,{MobileNetV3FeatureExtractor:()=>V,MobileNetV3ImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}class V extends I{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(Te,k,n)=>{n.r(k),n.d(k,{MobileNetV4FeatureExtractor:()=>V,MobileNetV4ImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}class V extends I{}},"./src/models/mobilevit/image_processing_mobilevit.js":(Te,k,n)=>{n.r(k),n.d(k,{MobileViTFeatureExtractor:()=>V,MobileViTImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}class V extends I{}},"./src/models/moonshine/feature_extraction_moonshine.js":(Te,k,n)=>{n.r(k),n.d(k,{MoonshineFeatureExtractor:()=>V});var p=n("./src/base/feature_extraction_utils.js"),I=n("./src/utils/tensor.js");class V extends p.FeatureExtractor{async _call(z){(0,p.validate_audio_inputs)(z,"MoonshineFeatureExtractor"),z instanceof Float64Array&&(z=new Float32Array(z));const $=[1,z.length];return{input_values:new I.Tensor("float32",z,$)}}}},"./src/models/moonshine/processing_moonshine.js":(Te,k,n)=>{n.r(k),n.d(k,{MoonshineProcessor:()=>Y});var p=n("./src/models/auto/feature_extraction_auto.js"),I=n("./src/tokenizers.js"),V=n("./src/base/processing_utils.js");class Y extends V.Processor{async _call($){return await this.feature_extractor($)}}Me(Y,"tokenizer_class",I.AutoTokenizer),Me(Y,"feature_extractor_class",p.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(Te,k,n)=>{n.r(k),n.d(k,{NougatImageProcessor:()=>I});var p=n("./src/models/donut/image_processing_donut.js");class I extends p.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(Te,k,n)=>{n.r(k),n.d(k,{Owlv2ImageProcessor:()=>I});var p=n("./src/models/owlvit/image_processing_owlvit.js");class I extends p.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(Te,k,n)=>{n.r(k),n.d(k,{OwlViTFeatureExtractor:()=>V,OwlViTImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{post_process_object_detection(...z){return(0,p.post_process_object_detection)(...z)}}class V extends I{}},"./src/models/owlvit/processing_owlvit.js":(Te,k,n)=>{n.r(k),n.d(k,{OwlViTProcessor:()=>Y});var p=n("./src/base/processing_utils.js"),I=n("./src/models/auto/image_processing_auto.js"),V=n("./src/tokenizers.js");class Y extends p.Processor{}Me(Y,"tokenizer_class",V.AutoTokenizer),Me(Y,"image_processor_class",I.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(Te,k,n)=>{n.r(k),n.d(k,{PaliGemmaProcessor:()=>z});var p=n("./src/base/processing_utils.js"),I=n("./src/models/auto/image_processing_auto.js"),V=n("./src/tokenizers.js");const Y="<image>";class z extends p.Processor{async _call(y,_=null,A={}){_||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),_=""),Array.isArray(y)||(y=[y]),Array.isArray(_)||(_=[_]);const b=this.tokenizer.bos_token,j=this.image_processor.config.image_seq_length;let re;_.some(le=>le.includes(Y))?re=_.map(le=>{const L=le.replaceAll(Y,Y.repeat(j)),G=L.lastIndexOf(Y),ie=G===-1?0:G+7;return L.slice(0,ie)+b+L.slice(ie)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),re=_.map(le=>function(L,G,ie,N,v){return`${N.repeat(ie*v)}${G}${L}
`}(le,b,j,Y,y.length)));const se=this.tokenizer(re,A);return{...await this.image_processor(y,A),...se}}}Me(z,"tokenizer_class",V.AutoTokenizer),Me(z,"image_processor_class",I.AutoImageProcessor),Me(z,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(Te,k,n)=>{n.r(k),n.d(k,{Phi3VImageProcessor:()=>_});var p=n("./src/base/image_processors_utils.js"),I=n("./src/utils/tensor.js");const V=336,Y=[2,3],{ceil:z,floor:$,sqrt:y}=Math;class _ extends p.ImageProcessor{constructor(b){super({...b,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=b.num_crops}calc_num_image_tokens_from_image_size(b,j){const{num_img_tokens:re}=this.config;return $(($(j/V)*$(b/V)+1)*re+1+($(j/V)+1)*y(re))}get_resize_output_image_size(b,j){const re=this._num_crops,[se,le]=b.size;let L=se/le,G=1;for(;G*Math.ceil(G/L)<=re;)G+=1;G-=1;const ie=Math.floor(336*G);return[ie,Math.floor(ie/L)]}pad_image(b,j,re,se={}){const[le,L]=j,G=V*z(le/V),ie=V*z(L/V),N=[1,1,1].map((v,O)=>(v-this.image_mean[O])/this.image_std[O]);return super.pad_image(b,j,{width:ie,height:G},{center:!0,constant_values:N,...se})}async _call(b,{num_crops:j=null}={}){if(this._num_crops=j??(j=this.config.num_crops),j<4||y(j)%1!=0)throw new Error("num_crops must be a square number >= 4");Array.isArray(b)||(b=[b]);const re=b.length,se=await Promise.all(b.map(v=>this.preprocess(v))),le=se.map(v=>v.original_size),L=se.map(v=>v.reshaped_input_size),G=[];for(const{pixel_values:v}of se){v.unsqueeze_(0);const[O,x]=v.dims.slice(-2),R=await(0,I.interpolate_4d)(v,{size:[V,V],mode:"bicubic"});if(j>0){const K=[],fe=y(j),de=$(x/fe),ge=$(O/fe);for(let we=0;we<fe;++we)for(let Se=0;Se<fe;++Se){let Re,Ue,dt,oe;we===fe-1?(Ue=O-ge,oe=O):(Ue=we*ge,oe=(we+1)*ge),Se===fe-1?(Re=x-de,dt=x):(Re=Se*de,dt=(Se+1)*de);const Z=[Ue,Re],pe=[oe,dt],Ee=await(0,I.slice)(v,Z,pe,Y);K.push(Ee)}const Ae=await(0,I.interpolate_4d)((0,I.cat)(K,0),{size:[V,V],mode:"bicubic"});G.push((0,I.cat)([R,Ae],0))}else G.push(R)}const ie=(0,I.stack)(G,0),N=L.map(v=>v.map(O=>V*z(O/V)));return{pixel_values:ie,original_sizes:le,reshaped_input_sizes:L,image_sizes:new I.Tensor("int64",N.flat(),[re,2]),num_img_tokens:N.map(([v,O])=>this.calc_num_image_tokens_from_image_size(O,v))}}}},"./src/models/phi3_v/processing_phi3_v.js":(Te,k,n)=>{n.r(k),n.d(k,{Phi3VProcessor:()=>$});var p=n("./src/base/processing_utils.js"),I=n("./src/models/auto/image_processing_auto.js"),V=n("./src/tokenizers.js");n("./src/utils/image.js");const Y="<|image|>",z=/<\|image_\d+\|>/g;class $ extends p.Processor{async _call(_,A=null,{padding:b=!0,truncation:j=!0,num_crops:re=null}={}){let se,le;if(Array.isArray(_)||(_=[_]),A){le=await this.image_processor(A,{num_crops:re});const{num_img_tokens:L}=le,G=_.map((N,v)=>N.split(z).join(Y.repeat(L[v])));se=this.tokenizer(G,{padding:b,truncation:j});const ie=this.tokenizer.model.convert_tokens_to_ids([Y])[0];se.input_ids.map_(N=>N==ie?-N:N)}else se=this.tokenizer(_);return{...se,...le}}}Me($,"image_processor_class",I.AutoImageProcessor),Me($,"tokenizer_class",V.AutoTokenizer)},"./src/models/processors.js":(Te,k,n)=>{n.r(k),n.d(k,{Florence2Processor:()=>p.Florence2Processor,GroundingDinoProcessor:()=>I.GroundingDinoProcessor,Idefics3Processor:()=>V.Idefics3Processor,JinaCLIPProcessor:()=>z.JinaCLIPProcessor,MgpstrProcessor:()=>$.MgpstrProcessor,MoonshineProcessor:()=>y.MoonshineProcessor,OwlViTProcessor:()=>_.OwlViTProcessor,PaliGemmaProcessor:()=>b.PaliGemmaProcessor,Phi3VProcessor:()=>A.Phi3VProcessor,PyAnnoteProcessor:()=>j.PyAnnoteProcessor,Qwen2VLProcessor:()=>re.Qwen2VLProcessor,SamProcessor:()=>se.SamProcessor,SpeechT5Processor:()=>le.SpeechT5Processor,VLChatProcessor:()=>Y.VLChatProcessor,Wav2Vec2Processor:()=>L.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>G.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>ie.WhisperProcessor});var p=n("./src/models/florence2/processing_florence2.js"),I=n("./src/models/grounding_dino/processing_grounding_dino.js"),V=n("./src/models/idefics3/processing_idefics3.js"),Y=n("./src/models/janus/processing_janus.js"),z=n("./src/models/jina_clip/processing_jina_clip.js"),$=n("./src/models/mgp_str/processing_mgp_str.js"),y=n("./src/models/moonshine/processing_moonshine.js"),_=n("./src/models/owlvit/processing_owlvit.js"),A=n("./src/models/phi3_v/processing_phi3_v.js"),b=n("./src/models/paligemma/processing_paligemma.js"),j=n("./src/models/pyannote/processing_pyannote.js"),re=n("./src/models/qwen2_vl/processing_qwen2_vl.js"),se=n("./src/models/sam/processing_sam.js"),le=n("./src/models/speecht5/processing_speecht5.js"),L=n("./src/models/wav2vec2/processing_wav2vec2.js"),G=n("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),ie=n("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(Te,k,n)=>{n.r(k),n.d(k,{PvtImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(Te,k,n)=>{n.r(k),n.d(k,{PyAnnoteFeatureExtractor:()=>Y});var p=n("./src/base/feature_extraction_utils.js"),I=n("./src/utils/tensor.js"),V=n("./src/utils/maths.js");class Y extends p.FeatureExtractor{async _call($){(0,p.validate_audio_inputs)($,"PyAnnoteFeatureExtractor"),$ instanceof Float64Array&&($=new Float32Array($));const y=[1,1,$.length];return{input_values:new I.Tensor("float32",$,y)}}samples_to_frames($){return($-this.config.offset)/this.config.step}post_process_speaker_diarization($,y){const _=y/this.samples_to_frames(y)/this.config.sampling_rate,A=[];for(const b of $.tolist()){const j=[];let re=-1;for(let se=0;se<b.length;++se){const le=(0,V.softmax)(b[se]),[L,G]=(0,V.max)(le),[ie,N]=[se,se+1];G!==re?(re=G,j.push({id:G,start:ie,end:N,score:L})):(j.at(-1).end=N,j.at(-1).score+=L)}A.push(j.map(({id:se,start:le,end:L,score:G})=>({id:se,start:le*_,end:L*_,confidence:G/(L-le)})))}return A}}},"./src/models/pyannote/processing_pyannote.js":(Te,k,n)=>{n.r(k),n.d(k,{PyAnnoteProcessor:()=>V});var p=n("./src/base/processing_utils.js"),I=n("./src/models/pyannote/feature_extraction_pyannote.js");class V extends p.Processor{async _call(z){return await this.feature_extractor(z)}post_process_speaker_diarization(...z){return this.feature_extractor.post_process_speaker_diarization(...z)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}Me(V,"feature_extractor_class",I.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(Te,k,n)=>{n.r(k),n.d(k,{Qwen2VLImageProcessor:()=>V});var p=n("./src/base/image_processors_utils.js"),I=n("./src/utils/tensor.js");class V extends p.ImageProcessor{async _call(z,...$){const{pixel_values:y,original_sizes:_,reshaped_input_sizes:A}=await super._call(z,...$);let b=y;const{temporal_patch_size:j,merge_size:re,patch_size:se}=this.config;b.dims[0]===1&&(b=(0,I.cat)(Array.from({length:j},()=>b),0));const le=b.dims[0]/j,L=b.dims[1],G=Math.floor(b.dims[2]/se),ie=Math.floor(b.dims[3]/se);return{pixel_values:b.view(le,j,L,Math.floor(G/re),re,se,Math.floor(ie/re),re,se).permute(0,3,6,4,7,2,1,5,8).view(le*G*ie,L*j*se*se),image_grid_thw:new I.Tensor("int64",[le,G,ie],[1,3]),original_sizes:_,reshaped_input_sizes:A}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(Te,k,n)=>{n.r(k),n.d(k,{Qwen2VLProcessor:()=>Y});var p=n("./src/base/processing_utils.js"),I=n("./src/models/auto/image_processing_auto.js"),V=n("./src/tokenizers.js");n("./src/utils/image.js");class Y extends p.Processor{async _call($,y=null,..._){let A,b;if(Array.isArray($)||($=[$]),y&&(A=await this.image_processor(y),b=A.image_grid_thw),b){let j=this.image_processor.config.merge_size**2,re=0;const se=b.tolist();$=$.map(le=>{for(;le.includes("<|image_pad|>");){const L=Number(se[re++].reduce((G,ie)=>G*ie,1n));le=le.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(L/j)))}return le.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer($),...A}}}Me(Y,"image_processor_class",I.AutoImageProcessor),Me(Y,"tokenizer_class",V.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(Te,k,n)=>{n.r(k),n.d(k,{RTDetrImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{post_process_object_detection(...Y){return(0,p.post_process_object_detection)(...Y)}}},"./src/models/sam/image_processing_sam.js":(Te,k,n)=>{n.r(k),n.d(k,{SamImageProcessor:()=>Y});var p=n("./src/base/image_processors_utils.js"),I=n("./src/utils/core.js"),V=n("./src/utils/tensor.js");class Y extends p.ImageProcessor{reshape_input_points($,y,_,A=!1){$=structuredClone($);let b=(0,I.calculateDimensions)($);if(b.length===3)A||(b=[1,...b]),$=[$];else if(b.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let j=0;j<$.length;++j){let re=y[j],se=_[j],le=[se[0]/re[0],se[1]/re[1]];for(let L=0;L<$[j].length;++L)for(let G=0;G<$[j][L].length;++G)for(let ie=0;ie<$[j][L][G].length;++ie)$[j][L][G][ie]*=le[ie%2]}return new V.Tensor("float32",Float32Array.from($.flat(1/0)),b)}add_input_labels($,y){let _=(0,I.calculateDimensions)($);if(_.length===2)_=[1,..._],$=[$];else if(_.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(_.some((A,b)=>A!==y.dims[b]))throw Error(`The first ${_.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new V.Tensor("int64",$.flat(1/0).map(BigInt),_)}async _call($,{input_points:y=null,input_labels:_=null,input_boxes:A=null}={}){const b=await super._call($);if(y&&(b.input_points=this.reshape_input_points(y,b.original_sizes,b.reshaped_input_sizes)),_){if(!b.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");b.input_labels=this.add_input_labels(_,b.input_points)}return A&&(b.input_boxes=this.reshape_input_points(A,b.original_sizes,b.reshaped_input_sizes,!0)),b}async post_process_masks($,y,_,{mask_threshold:A=0,binarize:b=!0,pad_size:j=null}={}){const re=[],se=[(j=j??this.pad_size).height,j.width];for(let le=0;le<y.length;++le){const L=y[le],G=_[le];let ie=await(0,V.interpolate_4d)($[le],{mode:"bilinear",size:se});if(ie=ie.slice(null,null,[0,G[0]],[0,G[1]]),ie=await(0,V.interpolate_4d)(ie,{mode:"bilinear",size:L}),b){const N=ie.data,v=new Uint8Array(N.length);for(let O=0;O<N.length;++O)N[O]>A&&(v[O]=1);ie=new V.Tensor("bool",v,ie.dims)}re.push(ie)}return re}generate_crop_boxes($,y,{crop_n_layers:_=0,overlap_ratio:A=512/1500,points_per_crop:b=32,crop_n_points_downscale_factor:j=1}={}){}}},"./src/models/sam/processing_sam.js":(Te,k,n)=>{n.r(k),n.d(k,{SamProcessor:()=>V});var p=n("./src/base/processing_utils.js"),I=n("./src/models/auto/image_processing_auto.js");class V extends p.Processor{async _call(...z){return await this.image_processor(...z)}post_process_masks(...z){return this.image_processor.post_process_masks(...z)}reshape_input_points(...z){return this.image_processor.reshape_input_points(...z)}}Me(V,"image_processor_class",I.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(Te,k,n)=>{n.r(k),n.d(k,{SeamlessM4TFeatureExtractor:()=>Y});var p=n("./src/base/feature_extraction_utils.js"),I=n("./src/utils/tensor.js"),V=n("./src/utils/audio.js");class Y extends p.FeatureExtractor{constructor($){super($);const y=this.config.sampling_rate,_=(0,V.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(y/2),y,null,"kaldi",!0);for(let A=0;A<_.length;++A)_[A].push(0);this.mel_filters=_,this.window=(0,V.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features($,y){return $=$.map(_=>32768*_),(0,V.spectrogram)($,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:y,transpose:!0})}async _call($,{padding:y=!0,pad_to_multiple_of:_=2,do_normalize_per_mel_bins:A=!0,return_attention_mask:b=!0}={}){(0,p.validate_audio_inputs)($,"SeamlessM4TFeatureExtractor");let j,re=await this._extract_fbank_features($,this.config.max_length);if(A){const[N,v]=re.dims,O=re.data;for(let x=0;x<v;++x){let R=0;for(let ge=0;ge<N;++ge)R+=O[ge*v+x];const K=R/N;let fe=0;for(let ge=0;ge<N;++ge)fe+=(O[ge*v+x]-K)**2;fe/=N-1;const de=Math.sqrt(fe+1e-7);for(let ge=0;ge<N;++ge){const Ae=ge*v+x;O[Ae]=(O[Ae]-K)/de}}}if(y){const[N,v]=re.dims,O=re.data,x=N%_;if(x>0){const R=new Float32Array(v*(N+x));R.set(O),R.fill(this.config.padding_value,O.length);const K=N+x;re=new I.Tensor(re.type,R,[K,v]),b&&(j=new I.Tensor("int64",new BigInt64Array(K),[1,K]),j.data.fill(1n,0,N))}}const[se,le]=re.dims,L=this.config.stride;if(se%L!==0)throw new Error(`The number of frames (${se}) must be a multiple of the stride (${L}).`);const G=re.view(1,Math.floor(se/L),le*L),ie={input_features:G};if(b){const N=G.dims[1],v=new BigInt64Array(N);if(j){const O=j.data;for(let x=1,R=0;x<se;x+=L,++R)v[R]=O[x]}else v.fill(1n);ie.attention_mask=new I.Tensor("int64",v,[1,N])}return ie}}},"./src/models/segformer/image_processing_segformer.js":(Te,k,n)=>{n.r(k),n.d(k,{SegformerFeatureExtractor:()=>V,SegformerImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{post_process_semantic_segmentation(...z){return(0,p.post_process_semantic_segmentation)(...z)}}class V extends I{}},"./src/models/siglip/image_processing_siglip.js":(Te,k,n)=>{n.r(k),n.d(k,{SiglipImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(Te,k,n)=>{n.r(k),n.d(k,{SpeechT5FeatureExtractor:()=>I});var p=n("./src/base/feature_extraction_utils.js");class I extends p.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(Te,k,n)=>{n.r(k),n.d(k,{SpeechT5Processor:()=>Y});var p=n("./src/base/processing_utils.js"),I=n("./src/tokenizers.js"),V=n("./src/models/auto/feature_extraction_auto.js");class Y extends p.Processor{async _call($){return await this.feature_extractor($)}}Me(Y,"tokenizer_class",I.AutoTokenizer),Me(Y,"feature_extractor_class",V.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(Te,k,n)=>{n.r(k),n.d(k,{Swin2SRImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{pad_image(Y,z,$,y={}){const[_,A,b]=z;return super.pad_image(Y,z,{width:A+($-A%$)%$,height:_+($-_%$)%$},{mode:"symmetric",center:!1,constant_values:-1,...y})}}},"./src/models/vit/image_processing_vit.js":(Te,k,n)=>{n.r(k),n.d(k,{ViTFeatureExtractor:()=>V,ViTImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{}class V extends I{}},"./src/models/vitmatte/image_processing_vitmatte.js":(Te,k,n)=>{n.r(k),n.d(k,{VitMatteImageProcessor:()=>V});var p=n("./src/base/image_processors_utils.js"),I=n("./src/utils/tensor.js");class V extends p.ImageProcessor{async _call(z,$){Array.isArray(z)||(z=[z]),Array.isArray($)||($=[$]);const y=await Promise.all(z.map(A=>this.preprocess(A))),_=await Promise.all($.map(A=>this.preprocess(A,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,I.stack)(y.map((A,b)=>(0,I.cat)([A.pixel_values,_[b].pixel_values],0)),0),original_sizes:y.map(A=>A.original_size),reshaped_input_sizes:y.map(A=>A.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(Te,k,n)=>{n.r(k),n.d(k,{VitPoseImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{post_process_pose_estimation(Y,z,{threshold:$=null}={}){const y=Y.tolist(),[_,A,b,j]=Y.dims,re=[];for(let se=0;se<_;++se){const le=y[se],L=z[se],G=[];for(let ie=0;ie<L.length;++ie){const N=L[ie],v=[],O=[],x=[],R=N.at(-2)/j,K=N.at(-1)/b;for(let fe=0;fe<le.length;++fe){let[de,ge]=[0,0],Ae=0,we=-1/0;const Se=le[fe];for(let Ue=0;Ue<Se.length;++Ue){const dt=Se[Ue];for(let oe=0;oe<dt.length;++oe){const Z=dt[oe];Ae+=Z,we=Math.max(we,Z),de+=(oe+.5)*Z,ge+=Ue*Z}}if($!=null&&we<$)continue;const Re=[R*de/Ae,K*ge/Ae];v.push(Re),x.push(fe),O.push(we)}G.push({bbox:N,scores:O,labels:x,keypoints:v})}re.push(G)}return re}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(Te,k,n)=>{n.r(k),n.d(k,{Wav2Vec2FeatureExtractor:()=>V});var p=n("./src/base/feature_extraction_utils.js"),I=n("./src/utils/tensor.js");class V extends p.FeatureExtractor{_zero_mean_unit_var_norm(z){const $=z.reduce((_,A)=>_+A,0)/z.length,y=z.reduce((_,A)=>_+(A-$)**2,0)/z.length;return z.map(_=>(_-$)/Math.sqrt(y+1e-7))}async _call(z){(0,p.validate_audio_inputs)(z,"Wav2Vec2FeatureExtractor"),z instanceof Float64Array&&(z=new Float32Array(z));let $=z;this.config.do_normalize&&($=this._zero_mean_unit_var_norm($));const y=[1,$.length];return{input_values:new I.Tensor("float32",$,y),attention_mask:new I.Tensor("int64",new BigInt64Array($.length).fill(1n),y)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(Te,k,n)=>{n.r(k),n.d(k,{Wav2Vec2Processor:()=>Y});var p=n("./src/tokenizers.js"),I=n("./src/models/auto/feature_extraction_auto.js"),V=n("./src/base/processing_utils.js");class Y extends V.Processor{async _call($){return await this.feature_extractor($)}}Me(Y,"tokenizer_class",p.AutoTokenizer),Me(Y,"feature_extractor_class",I.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(Te,k,n)=>{n.r(k),n.d(k,{Wav2Vec2ProcessorWithLM:()=>Y});var p=n("./src/tokenizers.js"),I=n("./src/models/auto/feature_extraction_auto.js"),V=n("./src/base/processing_utils.js");class Y extends V.Processor{async _call($){return await this.feature_extractor($)}}Me(Y,"tokenizer_class",p.AutoTokenizer),Me(Y,"feature_extractor_class",I.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(Te,k,n)=>{n.r(k),n.d(k,{WeSpeakerFeatureExtractor:()=>V});var p=n("./src/base/feature_extraction_utils.js");n("./src/utils/tensor.js");var I=n("./src/utils/audio.js");class V extends p.FeatureExtractor{constructor(z){super(z);const $=this.config.sampling_rate,y=(0,I.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor($/2),$,null,"kaldi",!0);for(let _=0;_<y.length;++_)y[_].push(0);this.mel_filters=y,this.window=(0,I.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(z){return z=z.map($=>32768*$),(0,I.spectrogram)(z,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(z){(0,p.validate_audio_inputs)(z,"WeSpeakerFeatureExtractor");const $=(await this._extract_fbank_features(z)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const y=$.mean(1).data,_=$.data,[A,b,j]=$.dims;for(let re=0;re<A;++re){const se=re*b*j,le=re*j;for(let L=0;L<b;++L){const G=se+L*j;for(let ie=0;ie<j;++ie)_[G+ie]-=y[le+ie]}}}return{input_features:$}}}},"./src/models/whisper/common_whisper.js":(Te,k,n)=>{n.r(k),n.d(k,{WHISPER_LANGUAGE_MAPPING:()=>I,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>V,whisper_language_to_code:()=>Y});const p=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],I=new Map(p),V=new Map([...p.map(([z,$])=>[$,z]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function Y(z){z=z.toLowerCase();let $=V.get(z);if($===void 0){if(!I.has(z)){const y=z.length===2?I.keys():I.values();throw new Error(`Language "${z}" is not supported. Must be one of: ${JSON.stringify(y)}`)}$=z}return $}},"./src/models/whisper/feature_extraction_whisper.js":(Te,k,n)=>{n.r(k),n.d(k,{WhisperFeatureExtractor:()=>Y});var p=n("./src/base/feature_extraction_utils.js");n("./src/utils/tensor.js");var I=n("./src/utils/audio.js"),V=n("./src/utils/maths.js");class Y extends p.FeatureExtractor{constructor($){var y;super($),(y=this.config).mel_filters??(y.mel_filters=(0,I.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,I.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features($){const y=await(0,I.spectrogram)($,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),_=y.data,A=(0,V.max)(_)[0];for(let b=0;b<_.length;++b)_[b]=(Math.max(_[b],A-8)+4)/4;return y}async _call($){let y;return(0,p.validate_audio_inputs)($,"WhisperFeatureExtractor"),$.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),y=$.slice(0,this.config.n_samples)):(y=new Float32Array(this.config.n_samples),y.set($)),{input_features:(await this._extract_fbank_features(y)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(Te,k,n)=>{n.r(k),n.d(k,{WhisperGenerationConfig:()=>I});var p=n("./src/generation/configuration_utils.js");class I extends p.GenerationConfig{constructor(){super(...arguments);Me(this,"return_timestamps",null);Me(this,"return_token_timestamps",null);Me(this,"num_frames",null);Me(this,"alignment_heads",null);Me(this,"task",null);Me(this,"language",null);Me(this,"no_timestamps_token_id",null);Me(this,"prompt_ids",null);Me(this,"is_multilingual",null);Me(this,"lang_to_id",null);Me(this,"task_to_id",null);Me(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(Te,k,n)=>{n.r(k),n.d(k,{WhisperProcessor:()=>Y});var p=n("./src/models/auto/feature_extraction_auto.js"),I=n("./src/tokenizers.js"),V=n("./src/base/processing_utils.js");class Y extends V.Processor{async _call($){return await this.feature_extractor($)}}Me(Y,"tokenizer_class",I.AutoTokenizer),Me(Y,"feature_extractor_class",p.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(Te,k,n)=>{n.r(k),n.d(k,{YolosFeatureExtractor:()=>V,YolosImageProcessor:()=>I});var p=n("./src/base/image_processors_utils.js");class I extends p.ImageProcessor{post_process_object_detection(...z){return(0,p.post_process_object_detection)(...z)}}class V extends I{}},"./src/ops/registry.js":(Te,k,n)=>{n.r(k),n.d(k,{TensorOpRegistry:()=>$});var p=n("./src/backends/onnx.js"),I=n("./src/utils/tensor.js"),V=n("./src/env.js");const Y=V.apis.IS_BROWSER_ENV||V.apis.IS_WEBWORKER_ENV,z=async(y,_,A)=>{const b=await(0,p.createInferenceSession)(new Uint8Array(y),_);let j=Promise.resolve();return async re=>{const se=(0,p.isONNXProxy)(),le=Object.fromEntries(Object.entries(re).map(([G,ie])=>[G,(se?ie.clone():ie).ort_tensor])),L=await(j=Y?j.then(()=>b.run(le)):b.run(le));return Array.isArray(A)?A.map(G=>new I.Tensor(L[G])):new I.Tensor(L[A])}};class ${static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=z([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=z([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=z([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=z([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=z([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=z([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=z([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=z([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}Me($,"session_options",{})},"./src/pipelines.js":(Te,k,n)=>{n.r(k),n.d(k,{AudioClassificationPipeline:()=>ge,AutomaticSpeechRecognitionPipeline:()=>we,DepthEstimationPipeline:()=>xe,DocumentQuestionAnsweringPipeline:()=>pe,FeatureExtractionPipeline:()=>fe,FillMaskPipeline:()=>ie,ImageClassificationPipeline:()=>Re,ImageFeatureExtractionPipeline:()=>de,ImageSegmentationPipeline:()=>Ue,ImageToImagePipeline:()=>qe,ImageToTextPipeline:()=>Se,ObjectDetectionPipeline:()=>oe,Pipeline:()=>se,QuestionAnsweringPipeline:()=>G,SummarizationPipeline:()=>v,Text2TextGenerationPipeline:()=>N,TextClassificationPipeline:()=>le,TextGenerationPipeline:()=>R,TextToAudioPipeline:()=>Ee,TokenClassificationPipeline:()=>L,TranslationPipeline:()=>O,ZeroShotAudioClassificationPipeline:()=>Ae,ZeroShotClassificationPipeline:()=>K,ZeroShotImageClassificationPipeline:()=>dt,ZeroShotObjectDetectionPipeline:()=>Z,pipeline:()=>at});var p=n("./src/tokenizers.js"),I=n("./src/models.js"),V=n("./src/models/auto/processing_auto.js");n("./src/base/processing_utils.js");var Y=n("./src/utils/generic.js"),z=n("./src/utils/core.js"),$=n("./src/utils/maths.js"),y=n("./src/utils/audio.js"),_=n("./src/utils/tensor.js"),A=n("./src/utils/image.js");async function b(Je){return Array.isArray(Je)||(Je=[Je]),await Promise.all(Je.map(be=>A.RawImage.read(be)))}async function j(Je,be){return Array.isArray(Je)||(Je=[Je]),await Promise.all(Je.map(Ce=>typeof Ce=="string"||Ce instanceof URL?(0,y.read_audio)(Ce,be):Ce instanceof Float64Array?new Float32Array(Ce):Ce))}function re(Je,be){be&&(Je=Je.map(Be=>0|Be));const[Ce,We,et,ue]=Je;return{xmin:Ce,ymin:We,xmax:et,ymax:ue}}class se extends Y.Callable{constructor({task:be,model:Ce,tokenizer:We=null,processor:et=null}){super(),this.task=be,this.model=Ce,this.tokenizer=We,this.processor=et}async dispose(){await this.model.dispose()}}class le extends se{constructor(be){super(be)}async _call(be,{top_k:Ce=1}={}){const We=this.tokenizer(be,{padding:!0,truncation:!0}),et=await this.model(We),ue=this.model.config.problem_type==="multi_label_classification"?ft=>ft.sigmoid():ft=>new _.Tensor("float32",(0,$.softmax)(ft.data),ft.dims),Be=this.model.config.id2label,nt=[];for(const ft of et.logits){const ht=ue(ft),gt=await(0,_.topk)(ht,Ce),yt=gt[0].tolist(),U=gt[1].tolist().map((ae,H)=>({label:Be?Be[ae]:`LABEL_${ae}`,score:yt[H]}));Ce===1?nt.push(...U):nt.push(U)}return Array.isArray(be)||Ce===1?nt:nt[0]}}class L extends se{constructor(be){super(be)}async _call(be,{ignore_labels:Ce=["O"]}={}){const We=Array.isArray(be),et=this.tokenizer(We?be:[be],{padding:!0,truncation:!0}),ue=(await this.model(et)).logits,Be=this.model.config.id2label,nt=[];for(let ft=0;ft<ue.dims[0];++ft){const ht=et.input_ids[ft],gt=ue[ft],yt=[];for(let U=0;U<gt.dims[0];++U){const ae=gt[U],H=(0,$.max)(ae.data)[1],me=Be?Be[H]:`LABEL_${H}`;if(Ce.includes(me))continue;const Oe=this.tokenizer.decode([ht[U].item()],{skip_special_tokens:!0});if(Oe==="")continue;const tt=(0,$.softmax)(ae.data);yt.push({entity:me,score:tt[H],index:U,word:Oe})}nt.push(yt)}return We?nt:nt[0]}}class G extends se{constructor(be){super(be)}async _call(be,Ce,{top_k:We=1}={}){const et=this.tokenizer(be,{text_pair:Ce,padding:!0,truncation:!0}),{start_logits:ue,end_logits:Be}=await this.model(et),nt=et.input_ids.tolist(),ft=et.attention_mask.tolist(),ht=this.tokenizer.all_special_ids,gt=[];for(let yt=0;yt<ue.dims[0];++yt){const U=nt[yt],ae=U.findIndex(ct=>ct==this.tokenizer.sep_token_id);ft[yt].map((ct,$t)=>ct==1&&($t===0||$t>ae&&ht.findIndex(mt=>mt==U[$t])===-1));const H=ue[yt].tolist(),me=Be[yt].tolist();for(let ct=1;ct<H.length;++ct)(ft[yt]==0||ct<=ae||ht.findIndex($t=>$t==U[ct])!==-1)&&(H[ct]=-1/0,me[ct]=-1/0);const Oe=(0,$.softmax)(H).map((ct,$t)=>[ct,$t]),tt=(0,$.softmax)(me).map((ct,$t)=>[ct,$t]);Oe[0][0]=0,tt[0][0]=0;const Ze=(0,z.product)(Oe,tt).filter(ct=>ct[0][1]<=ct[1][1]).map(ct=>[ct[0][1],ct[1][1],ct[0][0]*ct[1][0]]).sort((ct,$t)=>$t[2]-ct[2]);for(let ct=0;ct<Math.min(Ze.length,We);++ct){const[$t,mt,It]=Ze[ct],Ft=U.slice($t,mt+1),Rt=this.tokenizer.decode(Ft,{skip_special_tokens:!0});gt.push({answer:Rt,score:It})}}return We===1?gt[0]:gt}}class ie extends se{constructor(be){super(be)}async _call(be,{top_k:Ce=5}={}){const We=this.tokenizer(be,{padding:!0,truncation:!0}),{logits:et}=await this.model(We),ue=[],Be=We.input_ids.tolist();for(let nt=0;nt<Be.length;++nt){const ft=Be[nt],ht=ft.findIndex(H=>H==this.tokenizer.mask_token_id);if(ht===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const gt=et[nt][ht],yt=await(0,_.topk)(new _.Tensor("float32",(0,$.softmax)(gt.data),gt.dims),Ce),U=yt[0].tolist(),ae=yt[1].tolist();ue.push(ae.map((H,me)=>{const Oe=ft.slice();return Oe[ht]=H,{score:U[me],token:Number(H),token_str:this.tokenizer.decode([H]),sequence:this.tokenizer.decode(Oe,{skip_special_tokens:!0})}}))}return Array.isArray(be)?ue:ue[0]}}class N extends se{constructor(Ce){super(Ce);Me(this,"_key","generated_text")}async _call(Ce,We={}){Array.isArray(Ce)||(Ce=[Ce]),this.model.config.prefix&&(Ce=Ce.map(ht=>this.model.config.prefix+ht));const et=this.model.config.task_specific_params;et&&et[this.task]&&et[this.task].prefix&&(Ce=Ce.map(ht=>et[this.task].prefix+ht));const ue=this.tokenizer,Be={padding:!0,truncation:!0};let nt;nt=this instanceof O&&"_build_translation_inputs"in ue?ue._build_translation_inputs(Ce,Be,We):ue(Ce,Be);const ft=await this.model.generate({...nt,...We});return ue.batch_decode(ft,{skip_special_tokens:!0}).map(ht=>({[this._key]:ht}))}}class v extends N{constructor(Ce){super(Ce);Me(this,"_key","summary_text")}}class O extends N{constructor(Ce){super(Ce);Me(this,"_key","translation_text")}}function x(Je){return Array.isArray(Je)&&Je.every(be=>"role"in be&&"content"in be)}class R extends se{constructor(be){super(be)}async _call(be,Ce={}){let We,et=!1,ue=!1;if(typeof be=="string")We=be=[be];else if(Array.isArray(be)&&be.every(ae=>typeof ae=="string"))et=!0,We=be;else{if(x(be))be=[be];else{if(!Array.isArray(be)||!be.every(x))throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");et=!0}ue=!0,We=be.map(ae=>this.tokenizer.apply_chat_template(ae,{tokenize:!1,add_generation_prompt:!0}))}const Be=Ce.add_special_tokens??!1,nt=!ue&&(Ce.return_full_text??!0);this.tokenizer.padding_side="left";const ft=this.tokenizer(We,{add_special_tokens:Be,padding:!0,truncation:!0}),ht=await this.model.generate({...ft,...Ce}),gt=this.tokenizer.batch_decode(ht,{skip_special_tokens:!0});let yt;!nt&&ft.input_ids.dims.at(-1)>0&&(yt=this.tokenizer.batch_decode(ft.input_ids,{skip_special_tokens:!0}).map(ae=>ae.length));const U=Array.from({length:be.length},ae=>[]);for(let ae=0;ae<gt.length;++ae){const H=Math.floor(ae/ht.dims[0]*be.length);yt&&(gt[ae]=gt[ae].slice(yt[H])),U[H].push({generated_text:ue?[...be[H],{role:"assistant",content:gt[ae]}]:gt[ae]})}return et||U.length!==1?U:U[0]}}class K extends se{constructor(be){super(be),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([Ce,We])=>[Ce.toLowerCase(),We])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(be,Ce,{hypothesis_template:We="This example is {}.",multi_label:et=!1}={}){const ue=Array.isArray(be);ue||(be=[be]),Array.isArray(Ce)||(Ce=[Ce]);const Be=Ce.map(ht=>We.replace("{}",ht)),nt=et||Ce.length===1,ft=[];for(const ht of be){const gt=[];for(const U of Be){const ae=this.tokenizer(ht,{text_pair:U,padding:!0,truncation:!0}),H=await this.model(ae);nt?gt.push([H.logits.data[this.contradiction_id],H.logits.data[this.entailment_id]]):gt.push(H.logits.data[this.entailment_id])}const yt=(nt?gt.map(U=>(0,$.softmax)(U)[1]):(0,$.softmax)(gt)).map((U,ae)=>[U,ae]).sort((U,ae)=>ae[0]-U[0]);ft.push({sequence:ht,labels:yt.map(U=>Ce[U[1]]),scores:yt.map(U=>U[0])})}return ue?ft:ft[0]}}class fe extends se{constructor(be){super(be)}async _call(be,{pooling:Ce="none",normalize:We=!1,quantize:et=!1,precision:ue="binary"}={}){const Be=this.tokenizer(be,{padding:!0,truncation:!0}),nt=await this.model(Be);let ft=nt.last_hidden_state??nt.logits??nt.token_embeddings;if(Ce!=="none")if(Ce==="mean")ft=(0,_.mean_pooling)(ft,Be.attention_mask);else{if(Ce!=="cls")throw Error(`Pooling method '${Ce}' not supported.`);ft=ft.slice(null,0)}return We&&(ft=ft.normalize(2,-1)),et&&(ft=(0,_.quantize_embeddings)(ft,ue)),ft}}class de extends se{constructor(be){super(be)}async _call(be,{pool:Ce=null}={}){const We=await b(be),{pixel_values:et}=await this.processor(We),ue=await this.model({pixel_values:et});let Be;if(Ce){if(!("pooler_output"in ue))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Be=ue.pooler_output}else Be=ue.last_hidden_state??ue.logits??ue.image_embeds;return Be}}class ge extends se{constructor(be){super(be)}async _call(be,{top_k:Ce=5}={}){const We=this.processor.feature_extractor.config.sampling_rate,et=await j(be,We),ue=this.model.config.id2label,Be=[];for(const nt of et){const ft=await this.processor(nt),ht=(await this.model(ft)).logits[0],gt=await(0,_.topk)(new _.Tensor("float32",(0,$.softmax)(ht.data),ht.dims),Ce),yt=gt[0].tolist(),U=gt[1].tolist().map((ae,H)=>({label:ue?ue[ae]:`LABEL_${ae}`,score:yt[H]}));Be.push(U)}return Array.isArray(be)?Be:Be[0]}}class Ae extends se{constructor(be){super(be)}async _call(be,Ce,{hypothesis_template:We="This is a sound of {}."}={}){const et=!Array.isArray(be);et&&(be=[be]);const ue=Ce.map(gt=>We.replace("{}",gt)),Be=this.tokenizer(ue,{padding:!0,truncation:!0}),nt=this.processor.feature_extractor.config.sampling_rate,ft=await j(be,nt),ht=[];for(const gt of ft){const yt=await this.processor(gt),U=await this.model({...Be,...yt}),ae=(0,$.softmax)(U.logits_per_audio.data);ht.push([...ae].map((H,me)=>({score:H,label:Ce[me]})))}return et?ht[0]:ht}}class we extends se{constructor(be){super(be)}async _call(be,Ce={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(be,Ce);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(be,Ce);case"moonshine":return this._call_moonshine(be,Ce);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(be,Ce){Ce.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),Ce.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const We=!Array.isArray(be);We&&(be=[be]);const et=this.processor.feature_extractor.config.sampling_rate,ue=await j(be,et),Be=[];for(const nt of ue){const ft=await this.processor(nt),ht=(await this.model(ft)).logits[0],gt=[];for(const U of ht)gt.push((0,$.max)(U.data)[1]);const yt=this.tokenizer.decode(gt);Be.push({text:yt})}return We?Be[0]:Be}async _call_whisper(be,Ce){const We=Ce.return_timestamps??!1,et=Ce.chunk_length_s??0,ue=Ce.force_full_sequences??!1;let Be=Ce.stride_length_s??null;const nt={...Ce};We==="word"&&(nt.return_token_timestamps=!0,nt.return_timestamps=!1);const ft=!Array.isArray(be);ft&&(be=[be]);const ht=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,gt=this.processor.feature_extractor.config.hop_length,yt=this.processor.feature_extractor.config.sampling_rate,U=await j(be,yt),ae=[];for(const H of U){let me=[];if(et>0){if(Be===null)Be=et/6;else if(et<=Be)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const Ze=yt*et,ct=yt*Be,$t=Ze-2*ct;let mt=0;for(;;){const It=mt+Ze,Ft=H.subarray(mt,It),Rt=await this.processor(Ft),_r=mt===0,yr=It>=H.length;if(me.push({stride:[Ft.length,_r?0:ct,yr?0:ct],input_features:Rt.input_features,is_last:yr}),yr)break;mt+=$t}}else me=[{stride:[H.length,0,0],input_features:(await this.processor(H)).input_features,is_last:!0}];for(const Ze of me){nt.num_frames=Math.floor(Ze.stride[0]/gt);const ct=await this.model.generate({inputs:Ze.input_features,...nt});We==="word"?(Ze.tokens=ct.sequences.tolist()[0],Ze.token_timestamps=ct.token_timestamps.tolist()[0].map($t=>(0,$.round)($t,2))):Ze.tokens=ct[0].tolist(),Ze.stride=Ze.stride.map($t=>$t/yt)}const[Oe,tt]=this.tokenizer._decode_asr(me,{time_precision:ht,return_timestamps:We,force_full_sequences:ue});ae.push({text:Oe,...tt})}return ft?ae[0]:ae}async _call_moonshine(be,Ce){const We=!Array.isArray(be);We&&(be=[be]);const et=this.processor.feature_extractor.config.sampling_rate,ue=await j(be,et),Be=[];for(const nt of ue){const ft=await this.processor(nt),ht=6*Math.floor(nt.length/et),gt=await this.model.generate({max_new_tokens:ht,...Ce,...ft}),yt=this.processor.batch_decode(gt,{skip_special_tokens:!0})[0];Be.push({text:yt})}return We?Be[0]:Be}}class Se extends se{constructor(be){super(be)}async _call(be,Ce={}){const We=Array.isArray(be),et=await b(be),{pixel_values:ue}=await this.processor(et),Be=[];for(const nt of ue){nt.dims=[1,...nt.dims];const ft=await this.model.generate({inputs:nt,...Ce}),ht=this.tokenizer.batch_decode(ft,{skip_special_tokens:!0}).map(gt=>({generated_text:gt.trim()}));Be.push(ht)}return We?Be:Be[0]}}class Re extends se{constructor(be){super(be)}async _call(be,{top_k:Ce=5}={}){const We=await b(be),{pixel_values:et}=await this.processor(We),ue=await this.model({pixel_values:et}),Be=this.model.config.id2label,nt=[];for(const ft of ue.logits){const ht=await(0,_.topk)(new _.Tensor("float32",(0,$.softmax)(ft.data),ft.dims),Ce),gt=ht[0].tolist(),yt=ht[1].tolist().map((U,ae)=>({label:Be?Be[U]:`LABEL_${U}`,score:gt[ae]}));nt.push(yt)}return Array.isArray(be)?nt:nt[0]}}class Ue extends se{constructor(be){super(be),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(be,{threshold:Ce=.5,mask_threshold:We=.5,overlap_mask_area_threshold:et=.8,label_ids_to_fuse:ue=null,target_sizes:Be=null,subtask:nt=null}={}){if(Array.isArray(be)&&be.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const ft=await b(be),ht=ft.map(Oe=>[Oe.height,Oe.width]),{pixel_values:gt,pixel_mask:yt}=await this.processor(ft),U=await this.model({pixel_values:gt,pixel_mask:yt});let ae=null;if(nt!==null)ae=this.subtasks_mapping[nt];else for(let[Oe,tt]of Object.entries(this.subtasks_mapping))if(tt in this.processor.image_processor){ae=this.processor.image_processor[tt].bind(this.processor.image_processor),nt=Oe;break}const H=this.model.config.id2label,me=[];if(nt==="panoptic"||nt==="instance"){const Oe=ae(U,Ce,We,et,ue,Be??ht)[0],tt=Oe.segmentation;for(const Ze of Oe.segments_info){const ct=new Uint8ClampedArray(tt.data.length);for(let mt=0;mt<tt.data.length;++mt)tt.data[mt]===Ze.id&&(ct[mt]=255);const $t=new A.RawImage(ct,tt.dims[1],tt.dims[0],1);me.push({score:Ze.score,label:H[Ze.label_id],mask:$t})}}else{if(nt!=="semantic")throw Error(`Subtask ${nt} not supported.`);{const{segmentation:Oe,labels:tt}=ae(U,Be??ht)[0];for(const Ze of tt){const ct=new Uint8ClampedArray(Oe.data.length);for(let mt=0;mt<Oe.data.length;++mt)Oe.data[mt]===Ze&&(ct[mt]=255);const $t=new A.RawImage(ct,Oe.dims[1],Oe.dims[0],1);me.push({score:null,label:H[Ze],mask:$t})}}}return me}}class dt extends se{constructor(be){super(be)}async _call(be,Ce,{hypothesis_template:We="This is a photo of {}"}={}){const et=Array.isArray(be),ue=await b(be),Be=Ce.map(U=>We.replace("{}",U)),nt=this.tokenizer(Be,{padding:this.model.config.model_type!=="siglip"||"max_length",truncation:!0}),{pixel_values:ft}=await this.processor(ue),ht=await this.model({...nt,pixel_values:ft}),gt=this.model.config.model_type==="siglip"?U=>U.sigmoid().data:U=>(0,$.softmax)(U.data),yt=[];for(const U of ht.logits_per_image){const ae=[...gt(U)].map((H,me)=>({score:H,label:Ce[me]}));ae.sort((H,me)=>me.score-H.score),yt.push(ae)}return et?yt:yt[0]}}class oe extends se{constructor(be){super(be)}async _call(be,{threshold:Ce=.9,percentage:We=!1}={}){const et=Array.isArray(be);if(et&&be.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const ue=await b(be),Be=We?null:ue.map(ae=>[ae.height,ae.width]),{pixel_values:nt,pixel_mask:ft}=await this.processor(ue),ht=await this.model({pixel_values:nt,pixel_mask:ft}),gt=this.processor.image_processor.post_process_object_detection(ht,Ce,Be),yt=this.model.config.id2label,U=gt.map(ae=>ae.boxes.map((H,me)=>({score:ae.scores[me],label:yt[ae.classes[me]],box:re(H,!We)})));return et?U:U[0]}}class Z extends se{constructor(be){super(be)}async _call(be,Ce,{threshold:We=.1,top_k:et=null,percentage:ue=!1}={}){const Be=Array.isArray(be),nt=await b(be),ft=this.tokenizer(Ce,{padding:!0,truncation:!0}),ht=await this.processor(nt),gt=[];for(let yt=0;yt<nt.length;++yt){const U=nt[yt],ae=ue?null:[[U.height,U.width]],H=ht.pixel_values[yt].unsqueeze_(0),me=await this.model({...ft,pixel_values:H});let Oe;if("post_process_grounded_object_detection"in this.processor){const tt=this.processor.post_process_grounded_object_detection(me,ft.input_ids,{box_threshold:We,text_threshold:We,target_sizes:ae})[0];Oe=tt.boxes.map((Ze,ct)=>({score:tt.scores[ct],label:tt.labels[ct],box:re(Ze,!ue)}))}else{const tt=this.processor.image_processor.post_process_object_detection(me,We,ae,!0)[0];Oe=tt.boxes.map((Ze,ct)=>({score:tt.scores[ct],label:Ce[tt.classes[ct]],box:re(Ze,!ue)}))}Oe.sort((tt,Ze)=>Ze.score-tt.score),et!==null&&(Oe=Oe.slice(0,et)),gt.push(Oe)}return Be?gt:gt[0]}}class pe extends se{constructor(be){super(be)}async _call(be,Ce,We={}){const et=(await b(be))[0],{pixel_values:ue}=await this.processor(et),Be=`<s_docvqa><s_question>${Ce}</s_question><s_answer>`,nt=this.tokenizer(Be,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,ft=await this.model.generate({inputs:ue,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:nt,...We}),ht=this.tokenizer.batch_decode(ft)[0].match(/<s_answer>(.*?)<\/s_answer>/);let gt=null;return ht&&ht.length>=2&&(gt=ht[1].trim()),[{answer:gt}]}}class Ee extends se{constructor(Ce){super(Ce);Me(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=Ce.vocoder??null}async _call(Ce,{speaker_embeddings:We=null}={}){return this.processor?this._call_text_to_spectrogram(Ce,{speaker_embeddings:We}):this._call_text_to_waveform(Ce)}async _call_text_to_waveform(Ce){const We=this.tokenizer(Ce,{padding:!0,truncation:!0}),{waveform:et}=await this.model(We),ue=this.model.config.sampling_rate;return new y.RawAudio(et.data,ue)}async _call_text_to_spectrogram(Ce,{speaker_embeddings:We}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await I.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof We=="string"||We instanceof URL)&&(We=new Float32Array(await(await fetch(We)).arrayBuffer())),We instanceof Float32Array)We=new _.Tensor("float32",We,[1,We.length]);else if(!(We instanceof _.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:et}=this.tokenizer(Ce,{padding:!0,truncation:!0}),{waveform:ue}=await this.model.generate_speech(et,We,{vocoder:this.vocoder}),Be=this.processor.feature_extractor.config.sampling_rate;return new y.RawAudio(ue.data,Be)}}class qe extends se{constructor(be){super(be)}async _call(be){const Ce=await b(be),We=await this.processor(Ce),et=await this.model(We),ue=[];for(const Be of et.reconstruction){const nt=Be.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");ue.push(A.RawImage.fromTensor(nt))}return ue.length>1?ue:ue[0]}}class xe extends se{constructor(be){super(be)}async _call(be){const Ce=await b(be),We=await this.processor(Ce),{predicted_depth:et}=await this.model(We),ue=[];for(let Be=0;Be<Ce.length;++Be){const nt=et[Be],[ft,ht]=nt.dims.slice(-2),[gt,yt]=Ce[Be].size,U=(await(0,_.interpolate_4d)(nt.view(1,1,ft,ht),{size:[yt,gt],mode:"bilinear"})).view(yt,gt),ae=U.min().item(),H=U.max().item(),me=U.sub(ae).div_(H-ae).mul_(255).to("uint8").unsqueeze(0),Oe=A.RawImage.fromTensor(me);ue.push({predicted_depth:U,depth:Oe})}return ue.length>1?ue:ue[0]}}const je=Object.freeze({"text-classification":{tokenizer:p.AutoTokenizer,pipeline:le,model:I.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:p.AutoTokenizer,pipeline:L,model:I.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:p.AutoTokenizer,pipeline:G,model:I.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:p.AutoTokenizer,pipeline:ie,model:I.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:p.AutoTokenizer,pipeline:v,model:I.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:p.AutoTokenizer,pipeline:O,model:I.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:p.AutoTokenizer,pipeline:N,model:I.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:p.AutoTokenizer,pipeline:R,model:I.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:p.AutoTokenizer,pipeline:K,model:I.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:ge,model:I.AutoModelForAudioClassification,processor:V.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:p.AutoTokenizer,pipeline:Ae,model:I.AutoModel,processor:V.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:p.AutoTokenizer,pipeline:we,model:[I.AutoModelForSpeechSeq2Seq,I.AutoModelForCTC],processor:V.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:p.AutoTokenizer,pipeline:Ee,model:[I.AutoModelForTextToWaveform,I.AutoModelForTextToSpectrogram],processor:[V.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:p.AutoTokenizer,pipeline:Se,model:I.AutoModelForVision2Seq,processor:V.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:Re,model:I.AutoModelForImageClassification,processor:V.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:Ue,model:[I.AutoModelForImageSegmentation,I.AutoModelForSemanticSegmentation,I.AutoModelForUniversalSegmentation],processor:V.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:p.AutoTokenizer,pipeline:dt,model:I.AutoModel,processor:V.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:oe,model:I.AutoModelForObjectDetection,processor:V.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:p.AutoTokenizer,pipeline:Z,model:I.AutoModelForZeroShotObjectDetection,processor:V.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:p.AutoTokenizer,pipeline:pe,model:I.AutoModelForDocumentQuestionAnswering,processor:V.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:qe,model:I.AutoModelForImageToImage,processor:V.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:xe,model:I.AutoModelForDepthEstimation,processor:V.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:p.AutoTokenizer,pipeline:fe,model:I.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:V.AutoProcessor,pipeline:de,model:[I.AutoModelForImageFeatureExtraction,I.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),He=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function at(Je,be=null,{progress_callback:Ce=null,config:We=null,cache_dir:et=null,local_files_only:ue=!1,revision:Be="main",device:nt=null,dtype:ft=null,model_file_name:ht=null,session_options:gt={}}={}){Je=He[Je]??Je;const yt=je[Je.split("_",1)[0]];if(!yt)throw Error(`Unsupported pipeline: ${Je}. Must be one of [${Object.keys(je)}]`);be||(be=yt.default.model,console.log(`No model specified. Using default model: "${be}".`));const U={progress_callback:Ce,config:We,cache_dir:et,local_files_only:ue,revision:Be,device:nt,dtype:ft,model_file_name:ht,session_options:gt},ae=new Map([["tokenizer",yt.tokenizer],["model",yt.model],["processor",yt.processor]]),H=await async function(me,Oe,tt){const Ze=Object.create(null),ct=[];for(const[$t,mt]of me.entries()){if(!mt)continue;let It;It=Array.isArray(mt)?new Promise(async(Ft,Rt)=>{var yr,Dr;let _r;for(const Gr of mt){if(Gr===null)return void Ft(null);try{return void Ft(await Gr.from_pretrained(Oe,tt))}catch(hn){if((yr=hn.message)!=null&&yr.includes("Unsupported model type"))_r=hn;else{if(!((Dr=hn.message)!=null&&Dr.includes("Could not locate file")))return void Rt(hn);_r=hn}}}Rt(_r)}):mt.from_pretrained(Oe,tt),Ze[$t]=It,ct.push(It)}await Promise.all(ct);for(const[$t,mt]of Object.entries(Ze))Ze[$t]=await mt;return Ze}(ae,be,U);return H.task=Je,(0,z.dispatchCallback)(Ce,{status:"ready",task:Je,model:be}),new yt.pipeline(H)}},"./src/tokenizers.js":(Te,k,n)=>{n.r(k),n.d(k,{AlbertTokenizer:()=>sn,AutoTokenizer:()=>$r,BartTokenizer:()=>ws,BertTokenizer:()=>Dn,BlenderbotSmallTokenizer:()=>tr,BlenderbotTokenizer:()=>Dt,BloomTokenizer:()=>fn,CLIPTokenizer:()=>Ie,CamembertTokenizer:()=>ar,CodeGenTokenizer:()=>_e,CodeLlamaTokenizer:()=>ys,CohereTokenizer:()=>qr,ConvBertTokenizer:()=>Mn,DebertaTokenizer:()=>St,DebertaV2Tokenizer:()=>Bt,DistilBertTokenizer:()=>F,ElectraTokenizer:()=>wn,EsmTokenizer:()=>Kn,FalconTokenizer:()=>ls,GPT2Tokenizer:()=>In,GPTNeoXTokenizer:()=>Fn,GemmaTokenizer:()=>On,Grok1Tokenizer:()=>Zn,HerbertTokenizer:()=>Ir,LlamaTokenizer:()=>as,M2M100Tokenizer:()=>T,MBart50Tokenizer:()=>Nr,MBartTokenizer:()=>Hn,MPNetTokenizer:()=>Jn,MarianTokenizer:()=>Ke,MgpstrTokenizer:()=>jr,MobileBertTokenizer:()=>an,NllbTokenizer:()=>m,NougatTokenizer:()=>Qt,PreTrainedTokenizer:()=>Gt,Qwen2Tokenizer:()=>zn,RoFormerTokenizer:()=>gn,RobertaTokenizer:()=>Wr,SiglipTokenizer:()=>De,SpeechT5Tokenizer:()=>wt,SqueezeBertTokenizer:()=>it,T5Tokenizer:()=>yn,TokenizerModel:()=>x,VitsTokenizer:()=>Xt,Wav2Vec2CTCTokenizer:()=>kt,WhisperTokenizer:()=>q,XLMRobertaTokenizer:()=>os,XLMTokenizer:()=>Cn,is_chinese_char:()=>L});var p=n("./src/utils/generic.js"),I=n("./src/utils/core.js"),V=n("./src/utils/hub.js"),Y=n("./src/utils/maths.js"),z=n("./src/utils/tensor.js"),$=n("./src/utils/data-structures.js"),y=n("./node_modules/@huggingface/jinja/dist/index.js"),_=n("./src/models/whisper/common_whisper.js");async function A(Ne,M){const ee=await Promise.all([(0,V.getModelJSON)(Ne,"tokenizer.json",!0,M),(0,V.getModelJSON)(Ne,"tokenizer_config.json",!0,M)]);return M.legacy!==null&&(ee[1].legacy=M.legacy),ee}function b(Ne,M=!0){if(Ne.Regex!==void 0){let ee=Ne.Regex.replace(/\\([#&~])/g,"$1");for(const[ce,ve]of v)ee=ee.replaceAll(ce,ve);return new RegExp(ee,"gu")}if(Ne.String!==void 0){const ee=(0,I.escapeRegExp)(Ne.String);return new RegExp(M?ee:`(${ee})`,"gu")}return console.warn("Unknown pattern type:",Ne),null}function j(Ne){return new Map(Object.entries(Ne))}function re(Ne){const M=Ne.dims;switch(M.length){case 1:return Ne.tolist();case 2:if(M[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return Ne.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${M.length}.`)}}function se(Ne){return Ne.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function le(Ne){return Ne.replace(new RegExp("\\p{M}","gu"),"")}function L(Ne){return Ne>=19968&&Ne<=40959||Ne>=13312&&Ne<=19903||Ne>=131072&&Ne<=173791||Ne>=173824&&Ne<=177983||Ne>=177984&&Ne<=178207||Ne>=178208&&Ne<=183983||Ne>=63744&&Ne<=64255||Ne>=194560&&Ne<=195103}const G="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",ie=new RegExp(`^[${G}]+$`,"gu"),N=".,!?…。，、।۔،",v=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${N}])]+`,` ?[^\\s${N}]+`]]);class O{constructor(M){this.content=M.content,this.id=M.id,this.single_word=M.single_word??!1,this.lstrip=M.lstrip??!1,this.rstrip=M.rstrip??!1,this.special=M.special??!1,this.normalized=M.normalized??null}}class x extends p.Callable{constructor(M){super(),this.config=M,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(M,...ee){switch(M.type){case"WordPiece":return new R(M);case"Unigram":return new K(M,...ee);case"BPE":return new ge(M);default:if(M.vocab)return Array.isArray(M.vocab)?new K(M,...ee):typeof M.vocab=="object"&&M.continuing_subword_prefix&&M.unk_token?new R(M):new Ae(M,...ee);throw new Error(`Unknown TokenizerModel type: ${M.type}`)}}_call(M){return M=this.encode(M),this.fuse_unk&&(M=function(ee,ce,ve){const Ge=[];let Le=0;for(;Le<ee.length;)if(Ge.push(ee[Le]),(ce.get(ee[Le])??ve)===ve)for(;++Le<ee.length&&(ce.get(ee[Le])??ve)===ve;)ce.get(Ge.at(-1))!==ve&&(Ge[Ge.length-1]+=ee[Le]);else++Le;return Ge}(M,this.tokens_to_ids,this.unk_token_id)),M}encode(M){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(M){return M.map(ee=>this.tokens_to_ids.get(ee)??this.unk_token_id)}convert_ids_to_tokens(M){return M.map(ee=>this.vocab[ee]??this.unk_token)}}class R extends x{constructor(M){super(M),this.tokens_to_ids=j(M.vocab),this.unk_token_id=this.tokens_to_ids.get(M.unk_token),this.unk_token=M.unk_token,this.max_input_chars_per_word=M.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[ee,ce]of this.tokens_to_ids)this.vocab[ce]=ee}encode(M){const ee=[];for(const ce of M){const ve=[...ce];if(ve.length>this.max_input_chars_per_word){ee.push(this.unk_token);continue}let Ge=!1,Le=0;const _t=[];for(;Le<ve.length;){let Mt=ve.length,ye=null;for(;Le<Mt;){let Ot=ve.slice(Le,Mt).join("");if(Le>0&&(Ot=this.config.continuing_subword_prefix+Ot),this.tokens_to_ids.has(Ot)){ye=Ot;break}--Mt}if(ye===null){Ge=!0;break}_t.push(ye),Le=Mt}Ge?ee.push(this.unk_token):ee.push(..._t)}return ee}}class K extends x{constructor(M,ee){super(M);const ce=M.vocab.length;this.vocab=new Array(ce),this.scores=new Array(ce);for(let ve=0;ve<ce;++ve)[this.vocab[ve],this.scores[ve]]=M.vocab[ve];this.unk_token_id=M.unk_id,this.unk_token=this.vocab[M.unk_id],this.tokens_to_ids=new Map(this.vocab.map((ve,Ge)=>[ve,Ge])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=ee.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,Y.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new $.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(M){const ee=M.chars;let ce=0;for(;ce<ee.length;){let ve=!1;const Ge=ee.slice(ce).join(""),Le=this.trie.commonPrefixSearch(Ge);for(const _t of Le){const Mt=this.tokens_to_ids.get(_t),ye=this.scores[Mt],Ot=(0,I.len)(_t);M.insert(ce,Ot,ye,Mt),ve||Ot!==1||(ve=!0)}ve||M.insert(ce,1,this.unk_score,this.unk_token_id),ce+=1}}tokenize(M){const ee=new $.TokenLattice(M,this.bos_token_id,this.eos_token_id);return this.populateNodes(ee),ee.tokens()}encode(M){const ee=[];for(const ce of M){const ve=this.tokenize(ce);ee.push(...ve)}return ee}}const fe=(()=>{const Ne=[...Array.from({length:94},(ve,Ge)=>Ge+33),...Array.from({length:12},(ve,Ge)=>Ge+161),...Array.from({length:82},(ve,Ge)=>Ge+174)],M=Ne.slice();let ee=0;for(let ve=0;ve<256;++ve)Ne.includes(ve)||(Ne.push(ve),M.push(256+ee),ee+=1);const ce=M.map(ve=>String.fromCharCode(ve));return Object.fromEntries(Ne.map((ve,Ge)=>[ve,ce[Ge]]))})(),de=(0,I.reverseDictionary)(fe);class ge extends x{constructor(M){super(M),this.tokens_to_ids=j(M.vocab),this.unk_token_id=this.tokens_to_ids.get(M.unk_token),this.unk_token=M.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[ce,ve]of this.tokens_to_ids)this.vocab[ve]=ce;const ee=Array.isArray(M.merges[0]);this.merges=ee?M.merges:M.merges.map(ce=>ce.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((ce,ve)=>[JSON.stringify(ce),ve])),this.end_of_word_suffix=M.end_of_word_suffix,this.continuing_subword_suffix=M.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(M){if(M.length===0)return[];const ee=this.cache.get(M);if(ee!==void 0)return ee;const ce=Array.from(M);this.end_of_word_suffix&&(ce[ce.length-1]+=this.end_of_word_suffix);let ve=[];if(ce.length>1){const Ge=new $.PriorityQueue((Mt,ye)=>Mt.score<ye.score);let Le={token:ce[0],bias:0,prev:null,next:null},_t=Le;for(let Mt=1;Mt<ce.length;++Mt){const ye={bias:Mt/ce.length,token:ce[Mt],prev:_t,next:null};_t.next=ye,this._add_node(Ge,_t),_t=ye}for(;!Ge.isEmpty();){const Mt=Ge.pop();if(Mt.deleted||!Mt.next||Mt.next.deleted)continue;if(Mt.deleted=!0,Mt.next.deleted=!0,Mt.prev){const Ot={...Mt.prev};Mt.prev.deleted=!0,Mt.prev=Ot,Ot.prev?Ot.prev.next=Ot:Le=Ot}const ye={token:Mt.token+Mt.next.token,bias:Mt.bias,prev:Mt.prev,next:Mt.next.next};ye.prev?(ye.prev.next=ye,this._add_node(Ge,ye.prev)):Le=ye,ye.next&&(ye.next.prev=ye,this._add_node(Ge,ye))}for(let Mt=Le;Mt!==null;Mt=Mt.next)ve.push(Mt.token)}else ve=ce;if(this.continuing_subword_suffix)for(let Ge=0;Ge<ve.length-1;++Ge)ve[Ge]+=this.continuing_subword_suffix;return this.cache.set(M,ve),ve}_add_node(M,ee){const ce=this.bpe_ranks.get(JSON.stringify([ee.token,ee.next.token]));ce!==void 0&&(ee.score=ce+ee.bias,M.push(ee))}encode(M){const ee=[];for(const ce of M){if(this.ignore_merges&&this.tokens_to_ids.has(ce)){ee.push(ce);continue}const ve=this.bpe(ce);for(const Ge of ve)if(this.tokens_to_ids.has(Ge))ee.push(Ge);else if(this.byte_fallback){const Le=Array.from(this.text_encoder.encode(Ge)).map(_t=>`<0x${_t.toString(16).toUpperCase().padStart(2,"0")}>`);Le.every(_t=>this.tokens_to_ids.has(_t))?ee.push(...Le):ee.push(this.unk_token)}else ee.push(this.unk_token)}return ee}}class Ae extends x{constructor(M,ee){super(M),this.tokens_to_ids=j(ee.target_lang?M.vocab[ee.target_lang]:M.vocab),this.bos_token=ee.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=ee.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=ee.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=ee.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[ce,ve]of this.tokens_to_ids)this.vocab[ve]=ce}encode(M){return M}}class we extends p.Callable{constructor(M){super(),this.config=M}static fromConfig(M){if(M===null)return null;switch(M.type){case"BertNormalizer":return new xe(M);case"Precompiled":return new It(M);case"Sequence":return new qe(M);case"Replace":return new Se(M);case"NFC":return new Re(M);case"NFKC":return new Ue(M);case"NFKD":return new dt(M);case"Strip":return new oe(M);case"StripAccents":return new Z(M);case"Lowercase":return new pe(M);case"Prepend":return new Ee(M);default:throw new Error(`Unknown Normalizer type: ${M.type}`)}}normalize(M){throw Error("normalize should be implemented in subclass.")}_call(M){return this.normalize(M)}}class Se extends we{normalize(M){const ee=b(this.config.pattern);return ee===null?M:M.replaceAll(ee,this.config.content)}}class Re extends we{normalize(M){return M=M.normalize("NFC")}}class Ue extends we{normalize(M){return M=M.normalize("NFKC")}}class dt extends we{normalize(M){return M=M.normalize("NFKD")}}class oe extends we{normalize(M){return this.config.strip_left&&this.config.strip_right?M=M.trim():(this.config.strip_left&&(M=M.trimStart()),this.config.strip_right&&(M=M.trimEnd())),M}}class Z extends we{normalize(M){return M=le(M)}}class pe extends we{normalize(M){return M=M.toLowerCase()}}class Ee extends we{normalize(M){return M=this.config.prepend+M}}class qe extends we{constructor(M){super(M),this.normalizers=M.normalizers.map(ee=>we.fromConfig(ee))}normalize(M){return this.normalizers.reduce((ee,ce)=>ce.normalize(ee),M)}}class xe extends we{_tokenize_chinese_chars(M){const ee=[];for(let ce=0;ce<M.length;++ce){const ve=M[ce];L(ve.charCodeAt(0))?(ee.push(" "),ee.push(ve),ee.push(" ")):ee.push(ve)}return ee.join("")}stripAccents(M){return M.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(M){switch(M){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(M)}}_clean_text(M){const ee=[];for(const ce of M){const ve=ce.charCodeAt(0);ve===0||ve===65533||this._is_control(ce)||(/^\s$/.test(ce)?ee.push(" "):ee.push(ce))}return ee.join("")}normalize(M){return this.config.clean_text&&(M=this._clean_text(M)),this.config.handle_chinese_chars&&(M=this._tokenize_chinese_chars(M)),this.config.lowercase?(M=M.toLowerCase(),this.config.strip_accents!==!1&&(M=this.stripAccents(M))):this.config.strip_accents&&(M=this.stripAccents(M)),M}}class je extends p.Callable{static fromConfig(M){if(M===null)return null;switch(M.type){case"BertPreTokenizer":return new He(M);case"Sequence":return new Ft(M);case"Whitespace":return new Rt(M);case"WhitespaceSplit":return new _r(M);case"Metaspace":return new $t(M);case"ByteLevel":return new at(M);case"Split":return new Je(M);case"Punctuation":return new be(M);case"Digits":return new Ce(M);case"Replace":return new yr(M);default:throw new Error(`Unknown PreTokenizer type: ${M.type}`)}}pre_tokenize_text(M,ee){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(M,ee){return(Array.isArray(M)?M.map(ce=>this.pre_tokenize_text(ce,ee)):this.pre_tokenize_text(M,ee)).flat()}_call(M,ee){return this.pre_tokenize(M,ee)}}class He extends je{constructor(M){super(),this.pattern=new RegExp(`[^\\s${G}]+|[${G}]`,"gu")}pre_tokenize_text(M,ee){return M.trim().match(this.pattern)||[]}}class at extends je{constructor(M){super(),this.config=M,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=fe,this.text_encoder=new TextEncoder}pre_tokenize_text(M,ee){return this.add_prefix_space&&!M.startsWith(" ")&&(M=" "+M),(this.use_regex?M.match(this.pattern)||[]:[M]).map(ce=>Array.from(this.text_encoder.encode(ce),ve=>this.byte_encoder[ve]).join(""))}}class Je extends je{constructor(M){super(),this.config=M,this.pattern=b(this.config.pattern,this.config.invert)}pre_tokenize_text(M,ee){var ce;return this.pattern===null?[]:this.config.invert?M.match(this.pattern)||[]:((ce=this.config.behavior)==null?void 0:ce.toLowerCase())==="removed"?M.split(this.pattern).filter(ve=>ve):function(ve,Ge){const Le=[];let _t=0;for(const Mt of ve.matchAll(Ge)){const ye=Mt[0];_t<Mt.index&&Le.push(ve.slice(_t,Mt.index)),ye.length>0&&Le.push(ye),_t=Mt.index+ye.length}return _t<ve.length&&Le.push(ve.slice(_t)),Le}(M,this.pattern)}}class be extends je{constructor(M){super(),this.config=M,this.pattern=new RegExp(`[^${G}]+|[${G}]+`,"gu")}pre_tokenize_text(M,ee){return M.match(this.pattern)||[]}}class Ce extends je{constructor(M){super(),this.config=M;const ee="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(ee,"gu")}pre_tokenize_text(M,ee){return M.match(this.pattern)||[]}}class We extends p.Callable{constructor(M){super(),this.config=M}static fromConfig(M){if(M===null)return null;switch(M.type){case"TemplateProcessing":return new Be(M);case"ByteLevel":return new nt(M);case"RobertaProcessing":return new ue(M);case"BertProcessing":return new et(M);case"Sequence":return new ft(M);default:throw new Error(`Unknown PostProcessor type: ${M.type}`)}}post_process(M,...ee){throw Error("post_process should be implemented in subclass.")}_call(M,...ee){return this.post_process(M,...ee)}}class et extends We{constructor(M){super(M),this.cls=M.cls[0],this.sep=M.sep[0]}post_process(M,ee=null,{add_special_tokens:ce=!0}={}){ce&&(M=(0,I.mergeArrays)([this.cls],M,[this.sep]));let ve=new Array(M.length).fill(0);if(ee!==null){const Ge=ce&&this instanceof ue?[this.sep]:[],Le=ce?[this.sep]:[];M=(0,I.mergeArrays)(M,Ge,ee,Le),ve=(0,I.mergeArrays)(ve,new Array(ee.length+Ge.length+Le.length).fill(1))}return{tokens:M,token_type_ids:ve}}}class ue extends et{}class Be extends We{constructor(M){super(M),this.single=M.single,this.pair=M.pair}post_process(M,ee=null,{add_special_tokens:ce=!0}={}){const ve=ee===null?this.single:this.pair;let Ge=[],Le=[];for(const _t of ve)"SpecialToken"in _t?ce&&(Ge.push(_t.SpecialToken.id),Le.push(_t.SpecialToken.type_id)):"Sequence"in _t&&(_t.Sequence.id==="A"?(Ge=(0,I.mergeArrays)(Ge,M),Le=(0,I.mergeArrays)(Le,new Array(M.length).fill(_t.Sequence.type_id))):_t.Sequence.id==="B"&&(Ge=(0,I.mergeArrays)(Ge,ee),Le=(0,I.mergeArrays)(Le,new Array(ee.length).fill(_t.Sequence.type_id))));return{tokens:Ge,token_type_ids:Le}}}class nt extends We{post_process(M,ee=null){return ee&&(M=(0,I.mergeArrays)(M,ee)),{tokens:M}}}class ft extends We{constructor(M){super(M),this.processors=M.processors.map(ee=>We.fromConfig(ee))}post_process(M,ee=null,ce={}){let ve;for(const Ge of this.processors)if(Ge instanceof nt)M=Ge.post_process(M).tokens,ee&&(ee=Ge.post_process(ee).tokens);else{const Le=Ge.post_process(M,ee,ce);M=Le.tokens,ve=Le.token_type_ids}return{tokens:M,token_type_ids:ve}}}class ht extends p.Callable{constructor(M){super(),this.config=M,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=M.trim_offsets}static fromConfig(M){if(M===null)return null;switch(M.type){case"WordPiece":return new H(M);case"Metaspace":return new mt(M);case"ByteLevel":return new me(M);case"Replace":return new gt(M);case"ByteFallback":return new yt(M);case"Fuse":return new U(M);case"Strip":return new ae(M);case"Sequence":return new tt(M);case"CTC":return new Oe(M);case"BPEDecoder":return new Ze(M);default:throw new Error(`Unknown Decoder type: ${M.type}`)}}_call(M){return this.decode(M)}decode(M){return this.decode_chain(M).join("")}decode_chain(M){throw Error("`decode_chain` should be implemented in subclass.")}}class gt extends ht{decode_chain(M){const ee=b(this.config.pattern);return ee===null?M:M.map(ce=>ce.replaceAll(ee,this.config.content))}}class yt extends ht{constructor(M){super(M),this.text_decoder=new TextDecoder}decode_chain(M){const ee=[];let ce=[];for(const ve of M){let Ge=null;if(ve.length===6&&ve.startsWith("<0x")&&ve.endsWith(">")){const Le=parseInt(ve.slice(3,5),16);isNaN(Le)||(Ge=Le)}if(Ge!==null)ce.push(Ge);else{if(ce.length>0){const Le=this.text_decoder.decode(Uint8Array.from(ce));ee.push(Le),ce=[]}ee.push(ve)}}if(ce.length>0){const ve=this.text_decoder.decode(Uint8Array.from(ce));ee.push(ve),ce=[]}return ee}}class U extends ht{decode_chain(M){return[M.join("")]}}class ae extends ht{constructor(M){super(M),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(M){return M.map(ee=>{let ce=0;for(let Ge=0;Ge<this.start&&ee[Ge]===this.content;++Ge)ce=Ge+1;let ve=ee.length;for(let Ge=0;Ge<this.stop;++Ge){const Le=ee.length-Ge-1;if(ee[Le]!==this.content)break;ve=Le}return ee.slice(ce,ve)})}}class H extends ht{constructor(M){super(M),this.cleanup=M.cleanup}decode_chain(M){return M.map((ee,ce)=>(ce!==0&&(ee=ee.startsWith(this.config.prefix)?ee.replace(this.config.prefix,""):" "+ee),this.cleanup&&(ee=se(ee)),ee))}}class me extends ht{constructor(M){super(M),this.byte_decoder=de,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(M){const ee=M.join(""),ce=new Uint8Array([...ee].map(ve=>this.byte_decoder[ve]));return this.text_decoder.decode(ce)}decode_chain(M){const ee=[];let ce=[];for(const ve of M)this.added_tokens.find(Ge=>Ge.content===ve)!==void 0?(ce.length>0&&(ee.push(this.convert_tokens_to_string(ce)),ce=[]),ee.push(ve)):ce.push(ve);return ce.length>0&&ee.push(this.convert_tokens_to_string(ce)),ee}}class Oe extends ht{constructor(M){super(M),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(M){if(M.length===0)return"";const ee=[M[0]];for(let ve=1;ve<M.length;++ve)M[ve]!==ee.at(-1)&&ee.push(M[ve]);let ce=ee.filter(ve=>ve!==this.pad_token).join("");return this.cleanup&&(ce=se(ce).replaceAll(this.word_delimiter_token," ").trim()),ce}decode_chain(M){return[this.convert_tokens_to_string(M)]}}class tt extends ht{constructor(M){super(M),this.decoders=M.decoders.map(ee=>ht.fromConfig(ee))}decode_chain(M){return this.decoders.reduce((ee,ce)=>ce.decode_chain(ee),M)}}class Ze extends ht{constructor(M){super(M),this.suffix=this.config.suffix}decode_chain(M){return M.map((ee,ce)=>ee.replaceAll(this.suffix,ce===M.length-1?"":" "))}}class ct extends ht{decode_chain(M){let ee="";for(let ce=1;ce<M.length;ce+=2)ee+=M[ce];return[ee]}}class $t extends je{constructor(M){super(),this.addPrefixSpace=M.add_prefix_space,this.replacement=M.replacement,this.strRep=M.str_rep||this.replacement,this.prepend_scheme=M.prepend_scheme??"always"}pre_tokenize_text(M,{section_index:ee}={}){let ce=M.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!ce.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&ee===0)&&(ce=this.strRep+ce),[ce]}}class mt extends ht{constructor(M){super(M),this.addPrefixSpace=M.add_prefix_space,this.replacement=M.replacement}decode_chain(M){const ee=[];for(let ce=0;ce<M.length;++ce){let ve=M[ce].replaceAll(this.replacement," ");this.addPrefixSpace&&ce==0&&ve.startsWith(" ")&&(ve=ve.substring(1)),ee.push(ve)}return ee}}class It extends we{constructor(M){super(M),this.charsmap=M.precompiled_charsmap}normalize(M){return(M=(M=M.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("～")?M=M.split("～").map(ce=>ce.normalize("NFKC")).join("～"):M=M.normalize("NFKC"),M}}class Ft extends je{constructor(M){super(),this.tokenizers=M.pretokenizers.map(ee=>je.fromConfig(ee))}pre_tokenize_text(M,ee){return this.tokenizers.reduce((ce,ve)=>ve.pre_tokenize(ce,ee),[M])}}class Rt extends je{constructor(M){super()}pre_tokenize_text(M,ee){return M.match(/\w+|[^\w\s]+/g)||[]}}class _r extends je{constructor(M){super()}pre_tokenize_text(M,ee){return function(ce){return ce.match(/\S+/g)||[]}(M)}}class yr extends je{constructor(M){super(),this.config=M,this.pattern=b(this.config.pattern),this.content=this.config.content}pre_tokenize_text(M,ee){return this.pattern===null?[M]:[M.replaceAll(this.pattern,this.config.content)]}}const Dr=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Gr(Ne,M,ee,ce){for(const ve of Object.keys(Ne)){const Ge=M-Ne[ve].length,Le=ee(ve),_t=new Array(Ge).fill(Le);Ne[ve]=ce==="right"?(0,I.mergeArrays)(Ne[ve],_t):(0,I.mergeArrays)(_t,Ne[ve])}}function hn(Ne,M){for(const ee of Object.keys(Ne))Ne[ee].length=M}class Gt extends p.Callable{constructor(ee,ce){super();Me(this,"return_token_type_ids",!1);Me(this,"padding_side","right");this._tokenizer_config=ce,this.normalizer=we.fromConfig(ee.normalizer),this.pre_tokenizer=je.fromConfig(ee.pre_tokenizer),this.model=x.fromConfig(ee.model,ce),this.post_processor=We.fromConfig(ee.post_processor),this.decoder=ht.fromConfig(ee.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const ve of ee.added_tokens){const Ge=new O(ve);this.added_tokens.push(Ge),this.model.tokens_to_ids.set(Ge.content,Ge.id),this.model.vocab[Ge.id]=Ge.content,Ge.special&&(this.special_tokens.push(Ge.content),this.all_special_ids.push(Ge.id))}if(this.additional_special_tokens=ce.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((ve,Ge)=>Ge.content.length-ve.content.length).map(ve=>`${ve.lstrip?"\\s*":""}(${(0,I.escapeRegExp)(ve.content)})${ve.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=ce.model_max_length,this.remove_space=ce.remove_space,this.clean_up_tokenization_spaces=ce.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=ce.do_lowercase_and_remove_accent??!1,ce.padding_side&&(this.padding_side=ce.padding_side),this.legacy=!1,this.chat_template=ce.chat_template??null,Array.isArray(this.chat_template)){const ve=Object.create(null);for(const{name:Ge,template:Le}of this.chat_template){if(typeof Ge!="string"||typeof Le!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');ve[Ge]=Le}this.chat_template=ve}this._compiled_template_cache=new Map}getToken(...ee){for(const ce of ee){const ve=this._tokenizer_config[ce];if(ve){if(typeof ve=="object"){if(ve.__type==="AddedToken")return ve.content;throw Error(`Unknown token: ${ve}`)}return ve}}return null}static async from_pretrained(ee,{progress_callback:ce=null,config:ve=null,cache_dir:Ge=null,local_files_only:Le=!1,revision:_t="main",legacy:Mt=null}={}){return new this(...await A(ee,{progress_callback:ce,config:ve,cache_dir:Ge,local_files_only:Le,revision:_t,legacy:Mt}))}_call(ee,{text_pair:ce=null,add_special_tokens:ve=!0,padding:Ge=!1,truncation:Le=null,max_length:_t=null,return_tensor:Mt=!0,return_token_type_ids:ye=null}={}){const Ot=Array.isArray(ee);let nr;if(Ot){if(ee.length===0)throw Error("text array must be non-empty");if(ce!==null){if(!Array.isArray(ce))throw Error("text_pair must also be an array");if(ee.length!==ce.length)throw Error("text and text_pair must have the same length");nr=ee.map((br,fr)=>this._encode_plus(br,{text_pair:ce[fr],add_special_tokens:ve,return_token_type_ids:ye}))}else nr=ee.map(br=>this._encode_plus(br,{add_special_tokens:ve,return_token_type_ids:ye}))}else{if(ee==null)throw Error("text may not be null or undefined");if(Array.isArray(ce))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");nr=[this._encode_plus(ee,{text_pair:ce,add_special_tokens:ve,return_token_type_ids:ye})]}if(_t===null?_t=Ge==="max_length"?this.model_max_length:(0,Y.max)(nr.map(br=>br.input_ids.length))[0]:Le||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),_t=Math.min(_t,this.model_max_length??1/0),Ge||Le)for(let br=0;br<nr.length;++br)nr[br].input_ids.length!==_t&&(nr[br].input_ids.length>_t?Le&&hn(nr[br],_t):Ge&&Gr(nr[br],_t,fr=>fr==="input_ids"?this.pad_token_id:0,this.padding_side));const Or={};if(Mt){if((!Ge||!Le)&&nr.some(fr=>{var Ur;for(const vr of Object.keys(fr))if(fr[vr].length!==((Ur=nr[0][vr])==null?void 0:Ur.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const br=[nr.length,nr[0].input_ids.length];for(const fr of Object.keys(nr[0]))Or[fr]=new z.Tensor("int64",BigInt64Array.from(nr.flatMap(Ur=>Ur[fr]).map(BigInt)),br)}else{for(const br of Object.keys(nr[0]))Or[br]=nr.map(fr=>fr[br]);if(!Ot)for(const br of Object.keys(Or))Or[br]=Or[br][0]}return Or}_encode_text(ee){return ee===null?null:(this.added_tokens_regex?ee.split(this.added_tokens_regex).filter(ve=>ve):[ee]).map((ve,Ge)=>{if(this.added_tokens.find(Le=>Le.content===ve)!==void 0)return ve;{if(this.remove_space===!0&&(ve=ve.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(ve=function(_t){return le(_t.toLowerCase())}(ve)),this.normalizer!==null&&(ve=this.normalizer(ve)),ve.length===0)return[];const Le=this.pre_tokenizer!==null?this.pre_tokenizer(ve,{section_index:Ge}):[ve];return this.model(Le)}}).flat()}_encode_plus(ee,{text_pair:ce=null,add_special_tokens:ve=!0,return_token_type_ids:Ge=null}={}){const{tokens:Le,token_type_ids:_t}=this._tokenize_helper(ee,{pair:ce,add_special_tokens:ve}),Mt=this.model.convert_tokens_to_ids(Le),ye={input_ids:Mt,attention_mask:new Array(Mt.length).fill(1)};return(Ge??this.return_token_type_ids)&&_t&&(ye.token_type_ids=_t),ye}_tokenize_helper(ee,{pair:ce=null,add_special_tokens:ve=!1}={}){const Ge=this._encode_text(ee),Le=this._encode_text(ce);return this.post_processor?this.post_processor(Ge,Le,{add_special_tokens:ve}):{tokens:(0,I.mergeArrays)(Ge??[],Le??[])}}tokenize(ee,{pair:ce=null,add_special_tokens:ve=!1}={}){return this._tokenize_helper(ee,{pair:ce,add_special_tokens:ve}).tokens}encode(ee,{text_pair:ce=null,add_special_tokens:ve=!0,return_token_type_ids:Ge=null}={}){return this._encode_plus(ee,{text_pair:ce,add_special_tokens:ve,return_token_type_ids:Ge}).input_ids}batch_decode(ee,ce={}){return ee instanceof z.Tensor&&(ee=ee.tolist()),ee.map(ve=>this.decode(ve,ce))}decode(ee,ce={}){if(ee instanceof z.Tensor&&(ee=re(ee)),!Array.isArray(ee)||ee.length===0||!(0,I.isIntegralNumber)(ee[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(ee,ce)}decode_single(ee,{skip_special_tokens:ce=!1,clean_up_tokenization_spaces:ve=null}){let Ge=this.model.convert_ids_to_tokens(ee);ce&&(Ge=Ge.filter(_t=>!this.special_tokens.includes(_t)));let Le=this.decoder?this.decoder(Ge):Ge.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Le=Le.replaceAll(this.decoder.end_of_word_suffix," "),ce&&(Le=Le.trim())),(ve??this.clean_up_tokenization_spaces)&&(Le=se(Le)),Le}get_chat_template({chat_template:ee=null,tools:ce=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const ve=this.chat_template;if(ee!==null&&Object.hasOwn(ve,ee))ee=ve[ee];else if(ee===null)if(ce!==null&&"tool_use"in ve)ee=ve.tool_use;else{if(!("default"in ve))throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(ve).sort()}.`);ee=ve.default}}else if(ee===null){if(!this.chat_template)throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");ee=this.chat_template}return ee}apply_chat_template(ee,{tools:ce=null,documents:ve=null,chat_template:Ge=null,add_generation_prompt:Le=!1,tokenize:_t=!0,padding:Mt=!1,truncation:ye=!1,max_length:Ot=null,return_tensor:nr=!0,return_dict:Or=!1,tokenizer_kwargs:br={},...fr}={}){if(typeof(Ge=this.get_chat_template({chat_template:Ge,tools:ce}))!="string")throw Error("chat_template must be a string, but got "+typeof Ge);let Ur=this._compiled_template_cache.get(Ge);Ur===void 0&&(Ur=new y.Template(Ge),this._compiled_template_cache.set(Ge,Ur));const vr=Object.create(null);for(const Lt of Dr){const gr=this.getToken(Lt);gr&&(vr[Lt]=gr)}const Lr=Ur.render({messages:ee,add_generation_prompt:Le,tools:ce,documents:ve,...vr,...fr});if(_t){const Lt=this._call(Lr,{add_special_tokens:!1,padding:Mt,truncation:ye,max_length:Ot,return_tensor:nr,...br});return Or?Lt:Lt.input_ids}return Lr}}class Dn extends Gt{constructor(){super(...arguments);Me(this,"return_token_type_ids",!0)}}class sn extends Gt{constructor(){super(...arguments);Me(this,"return_token_type_ids",!0)}}class an extends Gt{constructor(){super(...arguments);Me(this,"return_token_type_ids",!0)}}class it extends Gt{constructor(){super(...arguments);Me(this,"return_token_type_ids",!0)}}class St extends Gt{constructor(){super(...arguments);Me(this,"return_token_type_ids",!0)}}class Bt extends Gt{constructor(){super(...arguments);Me(this,"return_token_type_ids",!0)}}class Ir extends Gt{constructor(){super(...arguments);Me(this,"return_token_type_ids",!0)}}class Mn extends Gt{constructor(){super(...arguments);Me(this,"return_token_type_ids",!0)}}class gn extends Gt{constructor(){super(...arguments);Me(this,"return_token_type_ids",!0)}}class F extends Gt{}class ar extends Gt{}class Cn extends Gt{constructor(ee,ce){super(ee,ce);Me(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class wn extends Gt{constructor(){super(...arguments);Me(this,"return_token_type_ids",!0)}}class yn extends Gt{}class In extends Gt{}class ws extends Gt{}class Hn extends Gt{constructor(M,ee){super(M,ee),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(ce=>this.languageRegex.test(ce)),this.lang_to_token=ce=>ce}_build_translation_inputs(M,ee,ce){return u(this,M,ee,ce)}}class Nr extends Hn{}class Wr extends Gt{}class fn extends Gt{}const pr="▁";class as extends Gt{constructor(ee,ce){super(ee,ce);Me(this,"padding_side","left");this.legacy=ce.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new $t({replacement:pr,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(ee){if(ee===null)return null;if(this.legacy||ee.length===0)return super._encode_text(ee);let ce=super._encode_text(pr+ee.replaceAll(pr," "));return ce.length>1&&ce[0]===pr&&this.special_tokens.includes(ce[1])&&(ce=ce.slice(1)),ce}}class ys extends Gt{}class os extends Gt{}class Jn extends Gt{}class ls extends Gt{}class Fn extends Gt{}class Kn extends Gt{}class zn extends Gt{}class On extends Gt{}class Zn extends Gt{}function u(Ne,M,ee,ce){if(!("language_codes"in Ne)||!Array.isArray(Ne.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in Ne&&Ne.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in Ne)||typeof Ne.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const ve=ce.src_lang,Ge=ce.tgt_lang;if(!Ne.language_codes.includes(Ge))throw new Error(`Target language code "${Ge}" is not valid. Must be one of: {${Ne.language_codes.join(", ")}}`);if(ve!==void 0){if(!Ne.language_codes.includes(ve))throw new Error(`Source language code "${ve}" is not valid. Must be one of: {${Ne.language_codes.join(", ")}}`);for(const Le of Ne.post_processor.config.single)if("SpecialToken"in Le&&Ne.languageRegex.test(Le.SpecialToken.id)){Le.SpecialToken.id=Ne.lang_to_token(ve);break}}return ce.forced_bos_token_id=Ne.model.convert_tokens_to_ids([Ne.lang_to_token(Ge)])[0],Ne._call(M,ee)}class m extends Gt{constructor(M,ee){super(M,ee),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(ce=>this.languageRegex.test(ce)),this.lang_to_token=ce=>ce}_build_translation_inputs(M,ee,ce){return u(this,M,ee,ce)}}class T extends Gt{constructor(M,ee){super(M,ee),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(ce=>this.languageRegex.test(ce)).map(ce=>ce.slice(2,-2)),this.lang_to_token=ce=>`__${ce}__`}_build_translation_inputs(M,ee,ce){return u(this,M,ee,ce)}}class q extends Gt{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(M,{return_timestamps:ee=!1,return_language:ce=!1,time_precision:ve=null,force_full_sequences:Ge=!0}={}){if(ve===null)throw Error("Must specify time_precision");let Le=null;const _t=ee==="word";function Mt(){return{language:Le,timestamp:[null,null],text:""}}const ye=[];let Ot=Mt(),nr=0;const Or=this.timestamp_begin,br=Or+1500;let fr=[],Ur=[],vr=!1,Lr=null;const Lt=new Set(this.all_special_ids);for(const Fr of M){const Hr=Fr.tokens,jt=_t?Fr.token_timestamps:null;let $n=null,rt=Or;if("stride"in Fr){const[rn,Yr,Kr]=Fr.stride;if(nr-=Yr,Lr=rn-Kr,Yr&&(rt=Yr/ve+Or),Kr)for(let ln=Hr.length-1;ln>=0;--ln){const En=Number(Hr[ln]);if(En>=Or){if($n!==null&&(En-Or)*ve<Lr)break;$n=En}}}let Et=[],Ln=[];for(let rn=0;rn<Hr.length;++rn){const Yr=Number(Hr[rn]);if(Lt.has(Yr)){const Kr=this.decode([Yr]),ln=_.WHISPER_LANGUAGE_MAPPING.get(Kr.slice(2,-2));if(ln!==void 0){if(Le!==null&&ln!==Le&&!ee){fr.push(Et);const En=this.findLongestCommonSequence(fr)[0],zs=this.decode(En);Ot.text=zs,ye.push(Ot),fr=[],Et=[],Ot=Mt()}Le=Ot.language=ln}}else if(Yr>=Or&&Yr<=br){const Kr=(Yr-Or)*ve+nr,ln=(0,Y.round)(Kr,2);if($n!==null&&Yr>=$n)vr=!0;else if(vr||fr.length>0&&Yr<rt)vr=!1;else if(Ot.timestamp[0]===null)Ot.timestamp[0]=ln;else if(ln!==Ot.timestamp[0]){Ot.timestamp[1]=ln,fr.push(Et),_t&&Ur.push(Ln);const[En,zs]=this.findLongestCommonSequence(fr,Ur),us=this.decode(En);Ot.text=us,_t&&(Ot.words=this.collateWordTimestamps(En,zs,Le)),ye.push(Ot),fr=[],Et=[],Ur=[],Ln=[],Ot=Mt()}}else if(Et.push(Yr),_t){let Kr,ln=(0,Y.round)(jt[rn]+nr,2);if(rn+1<jt.length){Kr=(0,Y.round)(jt[rn+1]+nr,2);const En=this.decode([Yr]);ie.test(En)&&(Kr=(0,Y.round)(Math.min(ln+ve,Kr),2))}else Kr=null;Ln.push([ln,Kr])}}if("stride"in Fr){const[rn,Yr,Kr]=Fr.stride;nr+=rn-Kr}Et.length>0?(fr.push(Et),_t&&Ur.push(Ln)):fr.every(rn=>rn.length===0)&&(Ot=Mt(),fr=[],Et=[],Ur=[],Ln=[])}if(fr.length>0){if(Ge&&ee)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Fr,Hr]=this.findLongestCommonSequence(fr,Ur),jt=this.decode(Fr);Ot.text=jt,_t&&(Ot.words=this.collateWordTimestamps(Fr,Hr,Le)),ye.push(Ot)}let gr=Object.create(null);const Tn=ye.map(Fr=>Fr.text).join("");if(ee||ce){for(let Fr=0;Fr<ye.length;++Fr){const Hr=ye[Fr];ee||delete Hr.timestamp,ce||delete Hr.language}if(_t){const Fr=[];for(const Hr of ye)for(const jt of Hr.words)Fr.push(jt);gr={chunks:Fr}}else gr={chunks:ye}}return[Tn,gr]}findLongestCommonSequence(M,ee=null){let ce=M[0],ve=ce.length,Ge=[];const Le=Array.isArray(ee)&&ee.length>0;let _t=Le?[]:null,Mt=Le?ee[0]:null;for(let ye=1;ye<M.length;++ye){const Ot=M[ye];let nr=0,Or=[ve,ve,0,0];const br=Ot.length;for(let Tn=1;Tn<ve+br;++Tn){const Fr=Math.max(0,ve-Tn),Hr=Math.min(ve,ve+br-Tn),jt=ce.slice(Fr,Hr),$n=Math.max(0,Tn-ve),rt=Math.min(br,Tn),Et=Ot.slice($n,rt);if(jt.length!==Et.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Ln;Ln=Le?jt.filter((Yr,Kr)=>Yr===Et[Kr]&&Mt[Fr+Kr]<=ee[ye][$n+Kr]).length:jt.filter((Yr,Kr)=>Yr===Et[Kr]).length;const rn=Ln/Tn+Tn/1e4;Ln>1&&rn>nr&&(nr=rn,Or=[Fr,Hr,$n,rt])}const[fr,Ur,vr,Lr]=Or,Lt=Math.floor((Ur+fr)/2),gr=Math.floor((Lr+vr)/2);Ge.push(...ce.slice(0,Lt)),ce=Ot.slice(gr),ve=ce.length,Le&&(_t.push(...Mt.slice(0,Lt)),Mt=ee[ye].slice(gr))}return Ge.push(...ce),Le?(_t.push(...Mt),[Ge,_t]):[Ge,[]]}collateWordTimestamps(M,ee,ce){const[ve,Ge,Le]=this.combineTokensIntoWords(M,ce),_t=[];for(let Mt=0;Mt<ve.length;++Mt){const ye=Le[Mt];_t.push({text:ve[Mt],timestamp:[ee[ye.at(0)][0],ee[ye.at(-1)][1]]})}return _t}combineTokensIntoWords(M,ee,ce=`"'“¡¿([{-`,ve=`"'.。,，!！?？:：”)]}、`){let Ge,Le,_t;return["chinese","japanese","thai","lao","myanmar"].includes(ee=ee??"english")?[Ge,Le,_t]=this.splitTokensOnUnicode(M):[Ge,Le,_t]=this.splitTokensOnSpaces(M),this.mergePunctuations(Ge,Le,_t,ce,ve)}decode(M,ee){let ce;return ee!=null&&ee.decode_with_timestamps?(M instanceof z.Tensor&&(M=re(M)),ce=this.decodeWithTimestamps(M,ee)):ce=super.decode(M,ee),ce}decodeWithTimestamps(M,ee){const ce=(ee==null?void 0:ee.time_precision)??.02,ve=Array.from(this.all_special_ids).at(-1)+1;let Ge=[[]];for(let Le of M)if(Le=Number(Le),Le>=ve){const _t=((Le-ve)*ce).toFixed(2);Ge.push(`<|${_t}|>`),Ge.push([])}else Ge[Ge.length-1].push(Le);return Ge=Ge.map(Le=>typeof Le=="string"?Le:super.decode(Le,ee)),Ge.join("")}splitTokensOnUnicode(M){const ee=this.decode(M,{decode_with_timestamps:!0}),ce=[],ve=[],Ge=[];let Le=[],_t=[],Mt=0;for(let ye=0;ye<M.length;++ye){const Ot=M[ye];Le.push(Ot),_t.push(ye);const nr=this.decode(Le,{decode_with_timestamps:!0});nr.includes("�")&&ee[Mt+nr.indexOf("�")]!=="�"||(ce.push(nr),ve.push(Le),Ge.push(_t),Le=[],_t=[],Mt+=nr.length)}return[ce,ve,Ge]}splitTokensOnSpaces(M){const[ee,ce,ve]=this.splitTokensOnUnicode(M),Ge=[],Le=[],_t=[],Mt=new RegExp(`^[${G}]$`,"gu");for(let ye=0;ye<ee.length;++ye){const Ot=ee[ye],nr=ce[ye],Or=ve[ye],br=nr[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),fr=Ot.startsWith(" "),Ur=Ot.trim(),vr=Mt.test(Ur);if(br||fr||vr||Ge.length===0)Ge.push(Ot),Le.push(nr),_t.push(Or);else{const Lr=Ge.length-1;Ge[Lr]+=Ot,Le[Lr].push(...nr),_t[Lr].push(...Or)}}return[Ge,Le,_t]}mergePunctuations(M,ee,ce,ve,Ge){const Le=structuredClone(M),_t=structuredClone(ee),Mt=structuredClone(ce);let ye=Le.length-2,Ot=Le.length-1;for(;ye>=0;)Le[ye].startsWith(" ")&&ve.includes(Le[ye].trim())?(Le[Ot]=Le[ye]+Le[Ot],_t[Ot]=(0,I.mergeArrays)(_t[ye],_t[Ot]),Mt[Ot]=(0,I.mergeArrays)(Mt[ye],Mt[Ot]),Le[ye]="",_t[ye]=[],Mt[ye]=[]):Ot=ye,--ye;for(ye=0,Ot=1;Ot<Le.length;)!Le[ye].endsWith(" ")&&Ge.includes(Le[Ot])?(Le[ye]+=Le[Ot],_t[ye]=(0,I.mergeArrays)(_t[ye],_t[Ot]),Mt[ye]=(0,I.mergeArrays)(Mt[ye],Mt[Ot]),Le[Ot]="",_t[Ot]=[],Mt[Ot]=[]):ye=Ot,++Ot;return[Le.filter(nr=>nr),_t.filter(nr=>nr.length>0),Mt.filter(nr=>nr.length>0)]}}class _e extends Gt{}class Ie extends Gt{}class De extends Gt{}class Ke extends Gt{constructor(M,ee){super(M,ee),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(ce=>this.languageRegex.test(ce)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(M){if(M===null)return null;const[ee,...ce]=M.trim().split(this.languageRegex);if(ce.length===0)return super._encode_text(ee);if(ce.length===2){const[ve,Ge]=ce;return this.supported_language_codes.includes(ve)||console.warn(`Unsupported language code "${ve}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,I.mergeArrays)([ve],super._encode_text(Ge))}}}class kt extends Gt{}class Dt extends Gt{}class tr extends Gt{}class wt extends Gt{}class Qt extends Gt{}class Xt extends Gt{constructor(M,ee){super(M,ee),this.decoder=new ct({})}}class qr extends Gt{}class jr extends Gt{}class $r{static async from_pretrained(M,{progress_callback:ee=null,config:ce=null,cache_dir:ve=null,local_files_only:Ge=!1,revision:Le="main",legacy:_t=null}={}){var Or;const[Mt,ye]=await A(M,{progress_callback:ee,config:ce,cache_dir:ve,local_files_only:Ge,revision:Le,legacy:_t}),Ot=((Or=ye.tokenizer_class)==null?void 0:Or.replace(/Fast$/,""))??"PreTrainedTokenizer";let nr=this.TOKENIZER_CLASS_MAPPING[Ot];return nr||(console.warn(`Unknown tokenizer class "${Ot}", attempting to construct from base class.`),nr=Gt),new nr(Mt,ye)}}Me($r,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:yn,DistilBertTokenizer:F,CamembertTokenizer:ar,DebertaTokenizer:St,DebertaV2Tokenizer:Bt,BertTokenizer:Dn,HerbertTokenizer:Ir,ConvBertTokenizer:Mn,RoFormerTokenizer:gn,XLMTokenizer:Cn,ElectraTokenizer:wn,MobileBertTokenizer:an,SqueezeBertTokenizer:it,AlbertTokenizer:sn,GPT2Tokenizer:In,BartTokenizer:ws,MBartTokenizer:Hn,MBart50Tokenizer:Nr,RobertaTokenizer:Wr,WhisperTokenizer:q,CodeGenTokenizer:_e,CLIPTokenizer:Ie,SiglipTokenizer:De,MarianTokenizer:Ke,BloomTokenizer:fn,NllbTokenizer:m,M2M100Tokenizer:T,LlamaTokenizer:as,CodeLlamaTokenizer:ys,XLMRobertaTokenizer:os,MPNetTokenizer:Jn,FalconTokenizer:ls,GPTNeoXTokenizer:Fn,EsmTokenizer:Kn,Wav2Vec2CTCTokenizer:kt,BlenderbotTokenizer:Dt,BlenderbotSmallTokenizer:tr,SpeechT5Tokenizer:wt,NougatTokenizer:Qt,VitsTokenizer:Xt,Qwen2Tokenizer:zn,GemmaTokenizer:On,Grok1Tokenizer:Zn,CohereTokenizer:qr,MgpstrTokenizer:jr,PreTrainedTokenizer:Gt})},"./src/utils/audio.js":(Te,k,n)=>{n.r(k),n.d(k,{RawAudio:()=>O,hamming:()=>b,hanning:()=>A,mel_filter_bank:()=>L,read_audio:()=>y,spectrogram:()=>ie,window_function:()=>N});var p=n("./src/utils/hub.js"),I=n("./src/utils/maths.js"),V=n("./src/utils/core.js"),Y=n("./src/env.js"),z=n("?7a2c"),$=n("./src/utils/tensor.js");async function y(x,R){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const K=await(await(0,p.getFile)(x)).arrayBuffer(),fe=new AudioContext({sampleRate:R});R===void 0&&console.warn(`No sampling rate provided, using default of ${fe.sampleRate}Hz.`);const de=await fe.decodeAudioData(K);let ge;if(de.numberOfChannels===2){const Ae=Math.sqrt(2),we=de.getChannelData(0),Se=de.getChannelData(1);ge=new Float32Array(we.length);for(let Re=0;Re<de.length;++Re)ge[Re]=Ae*(we[Re]+Se[Re])/2}else ge=de.getChannelData(0);return ge}function _(x,R){if(x<1)return new Float64Array;if(x===1)return new Float64Array([1]);const K=1-R,fe=2*Math.PI/(x-1),de=new Float64Array(x);for(let ge=0;ge<x;++ge)de[ge]=R-K*Math.cos(ge*fe);return de}function A(x){return _(x,.5)}function b(x){return _(x,.54)}const j={htk:x=>2595*Math.log10(1+x/700),kaldi:x=>1127*Math.log(1+x/700),slaney:(x,R=1e3,K=15,fe=27/Math.log(6.4))=>x>=R?K+Math.log(x/R)*fe:3*x/200};function re(x,R="htk"){const K=j[R];if(!K)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof x=="number"?K(x):x.map(fe=>K(fe))}const se={htk:x=>700*(10**(x/2595)-1),kaldi:x=>700*(Math.exp(x/1127)-1),slaney:(x,R=1e3,K=15,fe=Math.log(6.4)/27)=>x>=K?R*Math.exp(fe*(x-K)):200*x/3};function le(x,R,K){const fe=(R-x)/(K-1);return Float64Array.from({length:K},(de,ge)=>x+fe*ge)}function L(x,R,K,fe,de,ge=null,Ae="htk",we=!1){if(ge!==null&&ge!=="slaney")throw new Error('norm must be one of null or "slaney"');const Se=le(re(K,Ae),re(fe,Ae),R+2);let Re,Ue=function(oe,Z="htk"){const pe=se[Z];if(!pe)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof oe=="number"?pe(oe):oe.map(Ee=>pe(Ee))}(Se,Ae);if(we){const oe=de/(2*x);Re=re(Float64Array.from({length:x},(Z,pe)=>pe*oe),Ae),Ue=Se}else Re=le(0,Math.floor(de/2),x);const dt=function(oe,Z){const pe=Float64Array.from({length:Z.length-1},(je,He)=>Z[He+1]-Z[He]),Ee=Array.from({length:oe.length},()=>new Array(Z.length));for(let je=0;je<oe.length;++je){const He=Ee[je];for(let at=0;at<Z.length;++at)He[at]=Z[at]-oe[je]}const qe=Z.length-2,xe=Array.from({length:qe},()=>new Array(oe.length));for(let je=0;je<oe.length;++je){const He=Ee[je];for(let at=0;at<qe;++at){const Je=-He[at]/pe[at],be=He[at+2]/pe[at+1];xe[at][je]=Math.max(0,Math.min(Je,be))}}return xe}(Re,Ue);if(ge!==null&&ge==="slaney")for(let oe=0;oe<R;++oe){const Z=dt[oe],pe=2/(Ue[oe+2]-Ue[oe]);for(let Ee=0;Ee<x;++Ee)Z[Ee]*=pe}return dt}function G(x,R,K,fe,de){if(K<=0)throw new Error("reference must be greater than zero");if(fe<=0)throw new Error("min_value must be greater than zero");K=Math.max(fe,K);const ge=Math.log10(K);for(let Ae=0;Ae<x.length;++Ae)x[Ae]=R*Math.log10(Math.max(fe,x[Ae])-ge);if(de!==null){if(de<=0)throw new Error("db_range must be greater than zero");const Ae=(0,I.max)(x)[0]-de;for(let we=0;we<x.length;++we)x[we]=Math.max(x[we],Ae)}return x}async function ie(x,R,K,fe,{fft_length:de=null,power:ge=1,center:Ae=!0,pad_mode:we="reflect",onesided:Se=!0,preemphasis:Re=null,mel_filters:Ue=null,mel_floor:dt=1e-10,log_mel:oe=null,reference:Z=1,min_value:pe=1e-10,db_range:Ee=null,remove_dc_offset:qe=null,min_num_frames:xe=null,max_num_frames:je=null,do_pad:He=!0,transpose:at=!1}={}){const Je=R.length;if(de===null&&(de=K),K>de)throw Error(`frame_length (${K}) may not be larger than fft_length (${de})`);if(Je!==K)throw new Error(`Length of the window (${Je}) must equal frame_length (${K})`);if(fe<=0)throw new Error("hop_length must be greater than zero");if(ge===null&&Ue!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(Ae){if(we!=="reflect")throw new Error(`pad_mode="${we}" not implemented yet.`);const U=Math.floor((de-1)/2)+1;x=function(ae,H,me){const Oe=new ae.constructor(ae.length+H+me),tt=ae.length-1;for(let Ze=0;Ze<ae.length;++Ze)Oe[H+Ze]=ae[Ze];for(let Ze=1;Ze<=H;++Ze)Oe[H-Ze]=ae[(0,V.calculateReflectOffset)(Ze,tt)];for(let Ze=1;Ze<=me;++Ze)Oe[tt+H+Ze]=ae[(0,V.calculateReflectOffset)(tt-Ze,tt)];return Oe}(x,U,U)}let be=Math.floor(1+Math.floor((x.length-K)/fe));xe!==null&&be<xe&&(be=xe);const Ce=Se?Math.floor(de/2)+1:de;let We=be,et=be;je!==null&&(je>be?He&&(et=je):et=We=je);const ue=new I.FFT(de),Be=new Float64Array(de),nt=new Float64Array(ue.outputBufferSize),ft=new Float32Array(Ce*et);for(let U=0;U<We;++U){const ae=U*fe,H=Math.min(x.length-ae,K);H!==K&&Be.fill(0,0,K);for(let me=0;me<H;++me)Be[me]=x[ae+me];if(qe){let me=0;for(let tt=0;tt<H;++tt)me+=Be[tt];const Oe=me/H;for(let tt=0;tt<H;++tt)Be[tt]-=Oe}if(Re!==null){for(let me=H-1;me>=1;--me)Be[me]-=Re*Be[me-1];Be[0]*=1-Re}for(let me=0;me<R.length;++me)Be[me]*=R[me];ue.realTransform(nt,Be);for(let me=0;me<Ce;++me){const Oe=me<<1;ft[me*et+U]=nt[Oe]**2+nt[Oe+1]**2}}if(ge!==null&&ge!==2){const U=2/ge;for(let ae=0;ae<ft.length;++ae)ft[ae]**=U}const ht=Ue.length;let gt=await(0,$.matmul)(new $.Tensor("float32",Ue.flat(),[ht,Ce]),new $.Tensor("float32",ft,[Ce,et]));at&&(gt=gt.transpose(1,0));const yt=gt.data;for(let U=0;U<yt.length;++U)yt[U]=Math.max(dt,yt[U]);if(ge!==null&&oe!==null){const U=Math.min(yt.length,We*ht);switch(oe){case"log":for(let ae=0;ae<U;++ae)yt[ae]=Math.log(yt[ae]);break;case"log10":for(let ae=0;ae<U;++ae)yt[ae]=Math.log10(yt[ae]);break;case"dB":if(ge===1)(function(ae,H=1,me=1e-5,Oe=null){G(ae,20,H,me,Oe)})(yt,Z,pe,Ee);else{if(ge!==2)throw new Error(`Cannot use log_mel option '${oe}' with power ${ge}`);(function(ae,H=1,me=1e-10,Oe=null){G(ae,10,H,me,Oe)})(yt,Z,pe,Ee)}break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${oe}'`)}}return gt}function N(x,R,{periodic:K=!0,frame_length:fe=null,center:de=!0}={}){const ge=K?x+1:x;let Ae;switch(R){case"boxcar":Ae=new Float64Array(ge).fill(1);break;case"hann":case"hann_window":Ae=A(ge);break;case"hamming":Ae=b(ge);break;case"povey":Ae=A(ge).map(we=>Math.pow(we,.85));break;default:throw new Error(`Unknown window type ${R}.`)}if(K&&(Ae=Ae.subarray(0,x)),fe===null)return Ae;if(x>fe)throw new Error(`Length of the window (${x}) may not be larger than frame_length (${fe})`);return Ae}function v(x,R,K){for(let fe=0;fe<K.length;++fe)x.setUint8(R+fe,K.charCodeAt(fe))}class O{constructor(R,K){this.audio=R,this.sampling_rate=K}toWav(){return function(R,K){let fe=44;const de=new ArrayBuffer(fe+4*R.length),ge=new DataView(de);v(ge,0,"RIFF"),ge.setUint32(4,36+4*R.length,!0),v(ge,8,"WAVE"),v(ge,12,"fmt "),ge.setUint32(16,16,!0),ge.setUint16(20,3,!0),ge.setUint16(22,1,!0),ge.setUint32(24,K,!0),ge.setUint32(28,4*K,!0),ge.setUint16(32,4,!0),ge.setUint16(34,32,!0),v(ge,36,"data"),ge.setUint32(40,4*R.length,!0);for(let Ae=0;Ae<R.length;++Ae,fe+=4)ge.setFloat32(fe,R[Ae],!0);return de}(this.audio,this.sampling_rate)}toBlob(){const R=this.toWav();return new Blob([R],{type:"audio/wav"})}async save(R){let K;if(Y.apis.IS_BROWSER_ENV){if(Y.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");K=V.saveBlob}else{if(!Y.apis.IS_FS_AVAILABLE)throw new Error("Unable to save because filesystem is disabled in this environment.");K=async(fe,de)=>{let ge=await de.arrayBuffer();z.writeFileSync(fe,Buffer.from(ge))}}await K(R,this.toBlob())}}},"./src/utils/constants.js":(Te,k,n)=>{n.r(k),n.d(k,{CHAT_TEMPLATE_NAME:()=>$,CONFIG_NAME:()=>I,FEATURE_EXTRACTOR_NAME:()=>V,GENERATION_CONFIG_NAME:()=>y,GITHUB_ISSUE_URL:()=>p,IMAGE_PROCESSOR_NAME:()=>Y,PROCESSOR_NAME:()=>z});const p="https://github.com/huggingface/transformers.js/issues/new/choose",I="config.json",V="preprocessor_config.json",Y=V,z="processor_config.json",$="chat_template.json",y="generation_config.json"},"./src/utils/core.js":(Te,k,n)=>{function p(G,ie){G&&G(ie)}function I(G){return Object.fromEntries(Object.entries(G).map(([ie,N])=>[N,ie]))}function V(G){return G.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function Y(G){var ie,N,v;return((v=(N=(ie=G==null?void 0:G.prototype)==null?void 0:ie.__proto__)==null?void 0:N.constructor)==null?void 0:v.name)==="TypedArray"}function z(G){return Number.isInteger(G)||typeof G=="bigint"}function $(G){return G==null||G===-1}function y(G){const ie=[];let N=G;for(;Array.isArray(N);)ie.push(N.length),N=N[0];return ie}function _(G,ie,N=void 0){const v=G[ie];if(v!==void 0)return delete G[ie],v;if(N===void 0)throw Error(`Key ${ie} does not exist in object.`);return N}function A(...G){return Array.prototype.concat.apply([],G)}function b(...G){return G.reduce((ie,N)=>ie.flatMap(v=>N.map(O=>[v,O])))}function j(G,ie){return Math.abs((G+ie)%(2*ie)-ie)}function re(G,ie){const N=URL.createObjectURL(ie),v=document.createElement("a");v.href=N,v.download=G,v.click(),v.remove(),URL.revokeObjectURL(N)}function se(G,ie){return Object.assign({},...ie.map(N=>{if(G[N]!==void 0)return{[N]:G[N]}}))}function le(G){let ie=0;for(const N of G)++ie;return ie}function L(G,ie){let N=0;for(const v of G)v===ie&&++N;return N}n.r(k),n.d(k,{calculateDimensions:()=>y,calculateReflectOffset:()=>j,count:()=>L,dispatchCallback:()=>p,escapeRegExp:()=>V,isIntegralNumber:()=>z,isNullishDimension:()=>$,isTypedArray:()=>Y,len:()=>le,mergeArrays:()=>A,pick:()=>se,pop:()=>_,product:()=>b,reverseDictionary:()=>I,saveBlob:()=>re})},"./src/utils/data-structures.js":(Te,k,n)=>{n.r(k),n.d(k,{CharTrie:()=>I,PriorityQueue:()=>p,TokenLattice:()=>Y});class p{constructor(y=(A,b)=>A>b,_=1/0){this._heap=[],this._comparator=y,this._maxSize=_}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...y){return this.extend(y)}extend(y){for(const _ of y)if(this.size<this._maxSize)this._heap.push(_),this._siftUp();else{const A=this._smallest();this._comparator(_,this._heap[A])&&(this._heap[A]=_,this._siftUpFrom(A))}return this.size}pop(){const y=this.peek(),_=this.size-1;return _>0&&this._swap(0,_),this._heap.pop(),this._siftDown(),y}replace(y){const _=this.peek();return this._heap[0]=y,this._siftDown(),_}_parent(y){return(y+1>>>1)-1}_left(y){return 1+(y<<1)}_right(y){return y+1<<1}_greater(y,_){return this._comparator(this._heap[y],this._heap[_])}_swap(y,_){const A=this._heap[y];this._heap[y]=this._heap[_],this._heap[_]=A}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(y){for(;y>0&&this._greater(y,this._parent(y));)this._swap(y,this._parent(y)),y=this._parent(y)}_siftDown(){let y=0;for(;this._left(y)<this.size&&this._greater(this._left(y),y)||this._right(y)<this.size&&this._greater(this._right(y),y);){const _=this._right(y)<this.size&&this._greater(this._right(y),this._left(y))?this._right(y):this._left(y);this._swap(y,_),y=_}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class I{constructor(){this.root=V.default()}extend(y){for(const _ of y)this.push(_)}push(y){let _=this.root;for(const A of y){let b=_.children.get(A);b===void 0&&(b=V.default(),_.children.set(A,b)),_=b}_.isLeaf=!0}*commonPrefixSearch(y){let _=this.root;if(_===void 0)return;let A="";for(const b of y){if(A+=b,_=_.children.get(b),_===void 0)return;_.isLeaf&&(yield A)}}}class V{constructor(y,_){this.isLeaf=y,this.children=_}static default(){return new V(!1,new Map)}}class Y{constructor(y,_,A){this.chars=Array.from(y),this.len=this.chars.length,this.bosTokenId=_,this.eosTokenId=A,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const b=new z(this.bosTokenId,0,0,0,0),j=new z(this.eosTokenId,1,this.len,0,0);this.nodes.push(b.clone()),this.nodes.push(j.clone()),this.beginNodes[this.len].push(j),this.endNodes[0].push(b)}insert(y,_,A,b){const j=this.nodes.length,re=new z(b,j,y,_,A);this.beginNodes[y].push(re),this.endNodes[y+_].push(re),this.nodes.push(re)}viterbi(){const y=this.len;let _=0;for(;_<=y;){if(this.beginNodes[_].length==0)return[];for(let re of this.beginNodes[_]){re.prev=null;let se=0,le=null;for(let L of this.endNodes[_]){const G=L.backtraceScore+re.score;(le===null||G>se)&&(le=L.clone(),se=G)}if(le===null)return[];re.prev=le,re.backtraceScore=se}++_}const A=[],b=this.beginNodes[y][0].prev;if(b===null)return[];let j=b.clone();for(;j.prev!==null;)A.push(j.clone()),j=j.clone().prev.clone();return A.reverse(),A}piece(y){return this.chars.slice(y.pos,y.pos+y.length).join("")}tokens(){return this.viterbi().map(y=>this.piece(y))}tokenIds(){return this.viterbi().map(y=>y.tokenId)}}class z{constructor(y,_,A,b,j){this.tokenId=y,this.nodeId=_,this.pos=A,this.length=b,this.score=j,this.prev=null,this.backtraceScore=0}clone(){const y=new z(this.tokenId,this.nodeId,this.pos,this.length,this.score);return y.prev=this.prev,y.backtraceScore=this.backtraceScore,y}}},"./src/utils/devices.js":(Te,k,n)=>{n.r(k),n.d(k,{DEVICE_TYPES:()=>p});const p=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(Te,k,n)=>{n.r(k),n.d(k,{DATA_TYPES:()=>Y,DEFAULT_DEVICE_DTYPE_MAPPING:()=>z,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>$,isWebGpuFp16Supported:()=>V});var p=n("./src/env.js"),I=n("./src/utils/devices.js");const V=function(){let y;return async function(){if(y===void 0)if(p.apis.IS_WEBGPU_AVAILABLE)try{y=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{y=!1}else y=!1;return y}}(),Y=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),z=Object.freeze({[I.DEVICE_TYPES.wasm]:Y.q8}),$=Object.freeze({[Y.fp32]:"",[Y.fp16]:"_fp16",[Y.int8]:"_int8",[Y.uint8]:"_uint8",[Y.q8]:"_quantized",[Y.q4]:"_q4",[Y.q4f16]:"_q4f16",[Y.bnb4]:"_bnb4"})},"./src/utils/generic.js":(Te,k,n)=>{n.r(k),n.d(k,{Callable:()=>p});const p=class{constructor(){let I=function(...V){return I._call(...V)};return Object.setPrototypeOf(I,new.target.prototype)}_call(...I){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(Te,k,n)=>{n.r(k),n.d(k,{getFile:()=>_,getModelFile:()=>j,getModelJSON:()=>re});var p=n("?7a2c"),I=n("?a42a"),V=n("./src/env.js"),Y=n("./src/utils/core.js");const z={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class ${constructor(L){if(this.filePath=L,this.headers=new Headers,this.exists=p.existsSync(L),this.exists){this.status=200,this.statusText="OK";let G=p.statSync(L);this.headers.set("content-length",G.size.toString()),this.updateContentType();let ie=this;this.body=new ReadableStream({start(N){ie.arrayBuffer().then(v=>{N.enqueue(new Uint8Array(v)),N.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const L=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",z[L]??"application/octet-stream")}clone(){let L=new $(this.filePath);return L.exists=this.exists,L.status=this.status,L.statusText=this.statusText,L.headers=new Headers(this.headers),L}async arrayBuffer(){return(await p.promises.readFile(this.filePath)).buffer}async blob(){const L=await p.promises.readFile(this.filePath);return new Blob([L],{type:this.headers.get("content-type")})}async text(){return await p.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function y(le,L=null,G=null){let ie;try{ie=new URL(le)}catch{return!1}return!(L&&!L.includes(ie.protocol))&&!(G&&!G.includes(ie.hostname))}async function _(le){var L,G,ie,N;if(V.env.useFS&&!y(le,["http:","https:","blob:"]))return new $(le);if(typeof process<"u"&&((L=process==null?void 0:process.release)==null?void 0:L.name)==="node"){const v=!!((G=process.env)!=null&&G.TESTING_REMOTELY),O=V.env.version,x=new Headers;if(x.set("User-Agent",`transformers.js/${O}; is_ci/${v};`),y(le,["http:","https:"],["huggingface.co","hf.co"])){const R=((ie=process.env)==null?void 0:ie.HF_TOKEN)??((N=process.env)==null?void 0:N.HF_ACCESS_TOKEN);R&&x.set("Authorization",`Bearer ${R}`)}return fetch(le,{headers:x})}return fetch(le)}const A={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class b{constructor(L){this.path=L}async match(L){let G=I.join(this.path,L),ie=new $(G);return ie.exists?ie:void 0}async put(L,G){const ie=Buffer.from(await G.arrayBuffer());let N=I.join(this.path,L);try{await p.promises.mkdir(I.dirname(N),{recursive:!0}),await p.promises.writeFile(N,ie)}catch(v){console.warn("An error occurred while writing the file to cache:",v)}}}async function j(le,L,G=!0,ie={}){if(!V.env.allowLocalModels){if(ie.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!V.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}let N;if((0,Y.dispatchCallback)(ie.progress_callback,{status:"initiate",name:le,file:L}),!N&&V.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{N=await caches.open("transformers-cache")}catch(Re){console.warn("An error occurred while opening the browser cache:",Re)}}if(!N&&V.env.useFSCache&&(N=new b(ie.cache_dir??V.env.cacheDir)),!N&&V.env.useCustomCache){if(!V.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!V.env.customCache.match||!V.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");N=V.env.customCache}const v=ie.revision??"main";let O,x,R=se(le,L),K=se(V.env.localModelPath,R),fe=se(V.env.remoteHost,V.env.remotePathTemplate.replaceAll("{model}",le).replaceAll("{revision}",encodeURIComponent(v)),L),de=v==="main"?R:se(le,v,L),ge=N instanceof b?de:fe,Ae=!1;N&&(x=await async function(Re,...Ue){for(let dt of Ue)try{let oe=await Re.match(dt);if(oe)return oe}catch{continue}}(N,K,ge));const we=x!==void 0;if(x===void 0){if(V.env.allowLocalModels)if(y(R,["http:","https:"])){if(ie.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${R}.`);if(!V.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${R}.`)}else try{x=await _(K),O=K}catch(Re){console.warn(`Unable to load from local path "${K}": "${Re}"`)}if(x===void 0||x.status===404){if(ie.local_files_only||!V.env.allowRemoteModels){if(G)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${K}".`);return null}if(x=await _(fe),x.status!==200)return function(Re,Ue,dt){if(!dt)return null;const oe=A[Re]??`Error (${Re}) occurred while trying to load file`;throw Error(`${oe}: "${Ue}".`)}(x.status,fe,G);O=ge}Ae=N&&typeof Response<"u"&&x instanceof Response&&x.status===200}let Se;return(0,Y.dispatchCallback)(ie.progress_callback,{status:"download",name:le,file:L}),ie.progress_callback?we&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(Se=new Uint8Array(await x.arrayBuffer()),(0,Y.dispatchCallback)(ie.progress_callback,{status:"progress",name:le,file:L,progress:100,loaded:Se.length,total:Se.length})):Se=await async function(Re,Ue){const dt=Re.headers.get("Content-Length");dt===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let oe=parseInt(dt??"0"),Z=new Uint8Array(oe),pe=0;const Ee=Re.body.getReader();async function qe(){const{done:xe,value:je}=await Ee.read();if(xe)return;let He=pe+je.length;if(He>oe){oe=He;let at=new Uint8Array(oe);at.set(Z),Z=at}return Z.set(je,pe),pe=He,Ue({progress:pe/oe*100,loaded:pe,total:oe}),qe()}return await qe(),Z}(x,Re=>{(0,Y.dispatchCallback)(ie.progress_callback,{status:"progress",name:le,file:L,...Re})}):Se=new Uint8Array(await x.arrayBuffer()),Ae&&O&&await N.match(O)===void 0&&await N.put(O,new Response(Se,{headers:x.headers})).catch(Re=>{console.warn(`Unable to add response to browser cache: ${Re}.`)}),(0,Y.dispatchCallback)(ie.progress_callback,{status:"done",name:le,file:L}),Se}async function re(le,L,G=!0,ie={}){let N=await j(le,L,G,ie);if(N===null)return{};let v=new TextDecoder("utf-8").decode(N);return JSON.parse(v)}function se(...le){return(le=le.map((L,G)=>(G&&(L=L.replace(new RegExp("^/"),"")),G!==le.length-1&&(L=L.replace(new RegExp("/$"),"")),L))).join("/")}},"./src/utils/image.js":(Te,k,n)=>{n.r(k),n.d(k,{RawImage:()=>re,load_image:()=>se});var p=n("./src/utils/core.js"),I=n("./src/utils/hub.js"),V=n("./src/env.js"),Y=n("./src/utils/tensor.js"),z=n("?2b25");let $,y,_;const A=V.apis.IS_BROWSER_ENV||V.apis.IS_WEBWORKER_ENV;if(A)$=(le,L)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(le,L)},_=self.createImageBitmap,y=self.ImageData;else{if(!z)throw new Error("Unable to load image processing library.");_=async le=>{const L=(await le.metadata()).channels,{data:G,info:ie}=await le.rotate().raw().toBuffer({resolveWithObject:!0}),N=new re(new Uint8ClampedArray(G),ie.width,ie.height,ie.channels);return L!==void 0&&L!==ie.channels&&N.convert(L),N}}const b={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},j=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class re{constructor(L,G,ie,N){this.data=L,this.width=G,this.height=ie,this.channels=N}get size(){return[this.width,this.height]}static async read(L){if(L instanceof re)return L;if(typeof L=="string"||L instanceof URL)return await this.fromURL(L);throw new Error("Unsupported input type: "+typeof L)}static fromCanvas(L){if(!A)throw new Error("fromCanvas() is only supported in browser environments.");const G=L.getContext("2d").getImageData(0,0,L.width,L.height).data;return new re(G,L.width,L.height,4)}static async fromURL(L){const G=await(0,I.getFile)(L);if(G.status!==200)throw new Error(`Unable to read image from "${L}" (${G.status} ${G.statusText})`);const ie=await G.blob();return this.fromBlob(ie)}static async fromBlob(L){if(A){const G=await _(L),ie=$(G.width,G.height).getContext("2d");return ie.drawImage(G,0,0),new this(ie.getImageData(0,0,G.width,G.height).data,G.width,G.height,4)}{const G=z(await L.arrayBuffer());return await _(G)}}static fromTensor(L,G="CHW"){if(L.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${L.dims.length} dimensions.`);if(G==="CHW")L=L.transpose(1,2,0);else if(G!=="HWC")throw new Error(`Unsupported channel format: ${G}`);if(!(L.data instanceof Uint8ClampedArray||L.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${L.type}`);switch(L.dims[2]){case 1:case 2:case 3:case 4:return new re(L.data,L.dims[1],L.dims[0],L.dims[2]);default:throw new Error(`Unsupported number of channels: ${L.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const L=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let G=0,ie=0;G<this.data.length;G+=this.channels){const N=this.data[G],v=this.data[G+1],O=this.data[G+2];L[ie++]=Math.round(.2989*N+.587*v+.114*O)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(L,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const L=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let G=0,ie=0;G<this.data.length;++G)L[ie++]=this.data[G],L[ie++]=this.data[G],L[ie++]=this.data[G];break;case 4:for(let G=0,ie=0;G<this.data.length;G+=4)L[ie++]=this.data[G],L[ie++]=this.data[G+1],L[ie++]=this.data[G+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(L,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const L=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let G=0,ie=0;G<this.data.length;++G)L[ie++]=this.data[G],L[ie++]=this.data[G],L[ie++]=this.data[G],L[ie++]=255;break;case 3:for(let G=0,ie=0;G<this.data.length;G+=3)L[ie++]=this.data[G],L[ie++]=this.data[G+1],L[ie++]=this.data[G+2],L[ie++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(L,this.width,this.height,4)}putAlpha(L){if(L.width!==this.width||L.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${L.width}x${L.height}`);if(L.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${L.channels}`);const G=this.data,ie=L.data,N=this.width*this.height;if(this.channels===3){const v=new Uint8ClampedArray(4*N);for(let O=0,x=0,R=0;O<N;++O)v[R++]=G[x++],v[R++]=G[x++],v[R++]=G[x++],v[R++]=ie[O];return this._update(v,this.width,this.height,4)}if(this.channels===4){for(let v=0;v<N;++v)G[4*v+3]=ie[v];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(L,G,{resample:ie=2}={}){if(this.width===L&&this.height===G)return this;let N=b[ie]??ie;const v=(0,p.isNullishDimension)(L),O=(0,p.isNullishDimension)(G);if(v&&O)return this;if(v?L=G/this.height*this.width:O&&(G=L/this.width*this.height),A){const x=this.channels,R=this.toCanvas(),K=$(L,G).getContext("2d");return K.drawImage(R,0,0,L,G),new re(K.getImageData(0,0,L,G).data,L,G,4).convert(x)}{let x=this.toSharp();switch(N){case"box":case"hamming":N!=="box"&&N!=="hamming"||(console.warn(`Resampling method ${N} is not yet supported. Using bilinear instead.`),N="bilinear");case"nearest":case"bilinear":case"bicubic":x=x.affine([L/this.width,0,0,G/this.height],{interpolator:N});break;case"lanczos":x=x.resize({width:L,height:G,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${N} is not supported.`)}return await _(x)}}async pad([L,G,ie,N]){if(L=Math.max(L,0),G=Math.max(G,0),ie=Math.max(ie,0),N=Math.max(N,0),L===0&&G===0&&ie===0&&N===0)return this;if(A){const v=this.channels,O=this.toCanvas(),x=this.width+L+G,R=this.height+ie+N,K=$(x,R).getContext("2d");return K.drawImage(O,0,0,this.width,this.height,L,ie,this.width,this.height),new re(K.getImageData(0,0,x,R).data,x,R,4).convert(v)}{const v=this.toSharp().extend({left:L,right:G,top:ie,bottom:N});return await _(v)}}async crop([L,G,ie,N]){if(L=Math.max(L,0),G=Math.max(G,0),ie=Math.min(ie,this.width-1),N=Math.min(N,this.height-1),L===0&&G===0&&ie===this.width-1&&N===this.height-1)return this;const v=ie-L+1,O=N-G+1;if(A){const x=this.channels,R=this.toCanvas(),K=$(v,O).getContext("2d");return K.drawImage(R,L,G,v,O,0,0,v,O),new re(K.getImageData(0,0,v,O).data,v,O,4).convert(x)}{const x=this.toSharp().extract({left:L,top:G,width:v,height:O});return await _(x)}}async center_crop(L,G){if(this.width===L&&this.height===G)return this;const ie=(this.width-L)/2,N=(this.height-G)/2;if(A){const v=this.channels,O=this.toCanvas(),x=$(L,G).getContext("2d");let R=0,K=0,fe=0,de=0;return ie>=0?R=ie:fe=-ie,N>=0?K=N:de=-N,x.drawImage(O,R,K,L,G,fe,de,L,G),new re(x.getImageData(0,0,L,G).data,L,G,4).convert(v)}{let v=this.toSharp();if(ie>=0&&N>=0)v=v.extract({left:Math.floor(ie),top:Math.floor(N),width:L,height:G});else if(ie<=0&&N<=0){const O=Math.floor(-N),x=Math.floor(-ie);v=v.extend({top:O,left:x,right:L-this.width-x,bottom:G-this.height-O})}else{let O=[0,0],x=0;N<0?(O[0]=Math.floor(-N),O[1]=G-this.height-O[0]):x=Math.floor(N);let R=[0,0],K=0;ie<0?(R[0]=Math.floor(-ie),R[1]=L-this.width-R[0]):K=Math.floor(ie),v=v.extend({top:O[0],bottom:O[1],left:R[0],right:R[1]}).extract({left:K,top:x,width:L,height:G})}return await _(v)}}async toBlob(L="image/png",G=1){if(!A)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:L,quality:G})}toTensor(L="CHW"){let G=new Y.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(L!=="HWC"){if(L!=="CHW")throw new Error(`Unsupported channel format: ${L}`);G=G.permute(2,0,1)}return G}toCanvas(){if(!A)throw new Error("toCanvas() is only supported in browser environments.");const L=this.clone().rgba(),G=$(L.width,L.height),ie=new y(L.data,L.width,L.height);return G.getContext("2d").putImageData(ie,0,0),G}split(){const{data:L,width:G,height:ie,channels:N}=this,v=L.constructor,O=L.length/N,x=Array.from({length:N},()=>new v(O));for(let R=0;R<O;++R){const K=N*R;for(let fe=0;fe<N;++fe)x[fe][R]=L[K+fe]}return x.map(R=>new re(R,G,ie,1))}_update(L,G,ie,N=null){return this.data=L,this.width=G,this.height=ie,N!==null&&(this.channels=N),this}clone(){return new re(this.data.slice(),this.width,this.height,this.channels)}convert(L){if(this.channels===L)return this;switch(L){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(L){if(!A){if(V.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(L);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}{if(V.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const G=L.split(".").pop().toLowerCase(),ie=j.get(G)??"image/png",N=await this.toBlob(ie);(0,p.saveBlob)(L,N)}}toSharp(){if(A)throw new Error("toSharp() is only supported in server-side environments.");return z(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const se=re.read.bind(re)},"./src/utils/maths.js":(Te,k,n)=>{function p(N,[v,O,x],[R,K],fe="bilinear",de=!1){const ge=K/x,Ae=R/O,we=new N.constructor(R*K*v),Se=O*x,Re=R*K;for(let Ue=0;Ue<R;++Ue)for(let dt=0;dt<K;++dt){const oe=Ue*K+dt,Z=(dt+.5)/ge-.5,pe=(Ue+.5)/Ae-.5;let Ee=Math.floor(Z),qe=Math.floor(pe);const xe=Math.min(Ee+1,x-1),je=Math.min(qe+1,O-1);Ee=Math.max(Ee,0),qe=Math.max(qe,0);const He=Z-Ee,at=pe-qe,Je=(1-He)*(1-at),be=He*(1-at),Ce=(1-He)*at,We=He*at,et=qe*x,ue=je*x,Be=et+Ee,nt=et+xe,ft=ue+Ee,ht=ue+xe;for(let gt=0;gt<v;++gt){const yt=gt*Se;we[gt*Re+oe]=Je*N[yt+Be]+be*N[yt+nt]+Ce*N[yt+ft]+We*N[yt+ht]}}return we}function I(N,v,O){const x=new Array(O.length),R=new Array(O.length);for(let de=O.length-1,ge=1;de>=0;--de)R[de]=ge,x[de]=v[O[de]],ge*=x[de];const K=O.map((de,ge)=>R[O.indexOf(ge)]),fe=new N.constructor(N.length);for(let de=0;de<N.length;++de){let ge=0;for(let Ae=v.length-1,we=de;Ae>=0;--Ae)ge+=we%v[Ae]*K[Ae],we=Math.floor(we/v[Ae]);fe[ge]=N[de]}return[fe,x]}function V(N){const v=A(N)[0],O=N.map(R=>Math.exp(R-v)),x=O.reduce((R,K)=>R+K,0);return O.map(R=>R/x)}function Y(N){const v=A(N)[0];let O=0;for(let R=0;R<N.length;++R)O+=Math.exp(N[R]-v);const x=Math.log(O);return N.map(R=>R-v-x)}function z(N,v){let O=0;for(let x=0;x<N.length;++x)O+=N[x]*v[x];return O}function $(N,v){return z(N,v)/(y(N)*y(v))}function y(N){return Math.sqrt(N.reduce((v,O)=>v+O*O,0))}function _(N){if(N.length===0)throw Error("Array must not be empty");let v=N[0],O=0;for(let x=1;x<N.length;++x)N[x]<v&&(v=N[x],O=x);return[v,O]}function A(N){if(N.length===0)throw Error("Array must not be empty");let v=N[0],O=0;for(let x=1;x<N.length;++x)N[x]>v&&(v=N[x],O=x);return[v,O]}function b(N){return N>0&&!(N&N-1)}n.r(k),n.d(k,{FFT:()=>se,bankers_round:()=>G,cos_sim:()=>$,dot:()=>z,dynamic_time_warping:()=>ie,interpolate_data:()=>p,log_softmax:()=>Y,magnitude:()=>y,max:()=>A,medianFilter:()=>le,min:()=>_,permute_data:()=>I,round:()=>L,softmax:()=>V});class j{constructor(v){if(this.size=0|v,this.size<=1||!b(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=v<<1,this.table=new Float64Array(2*this.size);for(let x=0;x<this.table.length;x+=2){const R=Math.PI*x/this.size;this.table[x]=Math.cos(R),this.table[x+1]=-Math.sin(R)}let O=0;for(let x=1;this.size>x;x<<=1)++O;this._width=O%2==0?O-1:O,this._bitrev=new Int32Array(1<<this._width);for(let x=0;x<this._bitrev.length;++x){this._bitrev[x]=0;for(let R=0;R<this._width;R+=2){const K=this._width-R-2;this._bitrev[x]|=(x>>>R&3)<<K}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(v,O){const x=O||new Array(v.length>>>1);for(let R=0;R<v.length;R+=2)x[R>>>1]=v[R];return x}toComplexArray(v,O){const x=O||this.createComplexArray();for(let R=0;R<x.length;R+=2)x[R]=v[R>>>1],x[R+1]=0;return x}transform(v,O){if(v===O)throw new Error("Input and output buffers must be different");this._transform4(v,O,1)}realTransform(v,O){if(v===O)throw new Error("Input and output buffers must be different");this._realTransform4(v,O,1)}inverseTransform(v,O){if(v===O)throw new Error("Input and output buffers must be different");this._transform4(v,O,-1);for(let x=0;x<v.length;++x)v[x]/=this.size}_transform4(v,O,x){const R=this._csize;let K,fe,de=1<<this._width,ge=R/de<<1;const Ae=this._bitrev;if(ge===4)for(K=0,fe=0;K<R;K+=ge,++fe){const Se=Ae[fe];this._singleTransform2(O,v,K,Se,de)}else for(K=0,fe=0;K<R;K+=ge,++fe){const Se=Ae[fe];this._singleTransform4(O,v,K,Se,de,x)}const we=this.table;for(de>>=2;de>=2;de>>=2){ge=R/de<<1;const Se=ge>>>2;for(K=0;K<R;K+=ge){const Re=K+Se-1;for(let Ue=K,dt=0;Ue<Re;Ue+=2,dt+=de){const oe=Ue,Z=oe+Se,pe=Z+Se,Ee=pe+Se,qe=v[oe],xe=v[oe+1],je=v[Z],He=v[Z+1],at=v[pe],Je=v[pe+1],be=v[Ee],Ce=v[Ee+1],We=we[dt],et=x*we[dt+1],ue=je*We-He*et,Be=je*et+He*We,nt=we[2*dt],ft=x*we[2*dt+1],ht=at*nt-Je*ft,gt=at*ft+Je*nt,yt=we[3*dt],U=x*we[3*dt+1],ae=be*yt-Ce*U,H=be*U+Ce*yt,me=qe+ht,Oe=xe+gt,tt=qe-ht,Ze=xe-gt,ct=ue+ae,$t=Be+H,mt=x*(ue-ae),It=x*(Be-H);v[oe]=me+ct,v[oe+1]=Oe+$t,v[Z]=tt+It,v[Z+1]=Ze-mt,v[pe]=me-ct,v[pe+1]=Oe-$t,v[Ee]=tt-It,v[Ee+1]=Ze+mt}}}}_singleTransform2(v,O,x,R,K){const fe=v[R],de=v[R+1],ge=v[R+K],Ae=v[R+K+1];O[x]=fe+ge,O[x+1]=de+Ae,O[x+2]=fe-ge,O[x+3]=de-Ae}_singleTransform4(v,O,x,R,K,fe){const de=2*K,ge=3*K,Ae=v[R],we=v[R+1],Se=v[R+K],Re=v[R+K+1],Ue=v[R+de],dt=v[R+de+1],oe=v[R+ge],Z=v[R+ge+1],pe=Ae+Ue,Ee=we+dt,qe=Ae-Ue,xe=we-dt,je=Se+oe,He=Re+Z,at=fe*(Se-oe),Je=fe*(Re-Z);O[x]=pe+je,O[x+1]=Ee+He,O[x+2]=qe+Je,O[x+3]=xe-at,O[x+4]=pe-je,O[x+5]=Ee-He,O[x+6]=qe-Je,O[x+7]=xe+at}_realTransform4(v,O,x){const R=this._csize;let K,fe,de=1<<this._width,ge=R/de<<1;const Ae=this._bitrev;if(ge===4)for(K=0,fe=0;K<R;K+=ge,++fe){const Re=Ae[fe];this._singleRealTransform2(O,v,K,Re>>>1,de>>>1)}else for(K=0,fe=0;K<R;K+=ge,++fe){const Re=Ae[fe];this._singleRealTransform4(O,v,K,Re>>>1,de>>>1,x)}const we=this.table;for(de>>=2;de>=2;de>>=2){ge=R/de<<1;const Re=ge>>>1,Ue=Re>>>1,dt=Ue>>>1;for(K=0;K<R;K+=ge)for(let oe=0,Z=0;oe<=dt;oe+=2,Z+=de){const pe=K+oe,Ee=pe+Ue,qe=Ee+Ue,xe=qe+Ue,je=v[pe],He=v[pe+1],at=v[Ee],Je=v[Ee+1],be=v[qe],Ce=v[qe+1],We=v[xe],et=v[xe+1],ue=je,Be=He,nt=we[Z],ft=x*we[Z+1],ht=at*nt-Je*ft,gt=at*ft+Je*nt,yt=we[2*Z],U=x*we[2*Z+1],ae=be*yt-Ce*U,H=be*U+Ce*yt,me=we[3*Z],Oe=x*we[3*Z+1],tt=We*me-et*Oe,Ze=We*Oe+et*me,ct=ue+ae,$t=Be+H,mt=ue-ae,It=Be-H,Ft=ht+tt,Rt=gt+Ze,_r=x*(ht-tt),yr=x*(gt-Ze);if(v[pe]=ct+Ft,v[pe+1]=$t+Rt,v[Ee]=mt+yr,v[Ee+1]=It-_r,oe===0){v[qe]=ct-Ft,v[qe+1]=$t-Rt;continue}if(oe===dt)continue;const Dr=K+Ue-oe,Gr=K+Re-oe;v[Dr]=mt-x*yr,v[Dr+1]=-It-x*_r,v[Gr]=ct-x*Ft,v[Gr+1]=x*Rt-$t}}const Se=R>>>1;for(let Re=2;Re<Se;Re+=2)v[R-Re]=v[Re],v[R-Re+1]=-v[Re+1]}_singleRealTransform2(v,O,x,R,K){const fe=v[R],de=v[R+K];O[x]=fe+de,O[x+1]=0,O[x+2]=fe-de,O[x+3]=0}_singleRealTransform4(v,O,x,R,K,fe){const de=2*K,ge=3*K,Ae=v[R],we=v[R+K],Se=v[R+de],Re=v[R+ge],Ue=Ae+Se,dt=Ae-Se,oe=we+Re,Z=fe*(we-Re);O[x]=Ue+oe,O[x+1]=0,O[x+2]=dt,O[x+3]=-Z,O[x+4]=Ue-oe,O[x+5]=0,O[x+6]=dt,O[x+7]=Z}}class re{constructor(v){const O=2*(v-1),x=2*(2*v-1),R=2**Math.ceil(Math.log2(x));this.bufferSize=R,this._a=O;const K=new Float64Array(x),fe=new Float64Array(R);this._chirpBuffer=new Float64Array(R),this._buffer1=new Float64Array(R),this._buffer2=new Float64Array(R),this._outBuffer1=new Float64Array(R),this._outBuffer2=new Float64Array(R);const de=-2*Math.PI/v,ge=Math.cos(de),Ae=Math.sin(de);for(let we=0;we<x>>1;++we){const Se=(we+1-v)**2/2,Re=Math.sqrt(ge**2+Ae**2)**Se,Ue=Se*Math.atan2(Ae,ge),dt=2*we;K[dt]=Re*Math.cos(Ue),K[dt+1]=Re*Math.sin(Ue),fe[dt]=K[dt],fe[dt+1]=-K[dt+1]}this._slicedChirpBuffer=K.subarray(O,x),this._f=new j(R>>1),this._f.transform(this._chirpBuffer,fe)}_transform(v,O,x){const R=this._buffer1,K=this._buffer2,fe=this._outBuffer1,de=this._outBuffer2,ge=this._chirpBuffer,Ae=this._slicedChirpBuffer,we=this._a;if(x)for(let Se=0;Se<Ae.length;Se+=2){const Re=Se+1,Ue=O[Se>>1];R[Se]=Ue*Ae[Se],R[Re]=Ue*Ae[Re]}else for(let Se=0;Se<Ae.length;Se+=2){const Re=Se+1;R[Se]=O[Se]*Ae[Se]-O[Re]*Ae[Re],R[Re]=O[Se]*Ae[Re]+O[Re]*Ae[Se]}this._f.transform(fe,R);for(let Se=0;Se<ge.length;Se+=2){const Re=Se+1;K[Se]=fe[Se]*ge[Se]-fe[Re]*ge[Re],K[Re]=fe[Se]*ge[Re]+fe[Re]*ge[Se]}this._f.inverseTransform(de,K);for(let Se=0;Se<de.length;Se+=2){const Re=de[Se+we],Ue=de[Se+we+1],dt=Ae[Se],oe=Ae[Se+1];v[Se]=Re*dt-Ue*oe,v[Se+1]=Re*oe+Ue*dt}}transform(v,O){this._transform(v,O,!1)}realTransform(v,O){this._transform(v,O,!0)}}class se{constructor(v){this.fft_length=v,this.isPowerOfTwo=b(v),this.isPowerOfTwo?(this.fft=new j(v),this.outputBufferSize=2*v):(this.fft=new re(v),this.outputBufferSize=this.fft.bufferSize)}realTransform(v,O){this.fft.realTransform(v,O)}transform(v,O){this.fft.transform(v,O)}}function le(N,v){if(v%2==0||v<=0)throw new Error("Window size must be a positive odd number");const O=new N.constructor(N.length),x=new N.constructor(v),R=Math.floor(v/2);for(let K=0;K<N.length;++K){let fe=0;for(let de=-R;de<=R;++de){let ge=K+de;ge<0?ge=Math.abs(ge):ge>=N.length&&(ge=2*(N.length-1)-ge),x[fe++]=N[ge]}x.sort(),O[K]=x[R]}return O}function L(N,v){const O=Math.pow(10,v);return Math.round(N*O)/O}function G(N){const v=Math.round(N);return Math.abs(N)%1==.5?v%2==0?v:v-1:v}function ie(N){const v=N.length,O=N[0].length,x=[v+1,O+1],R=Array.from({length:x[0]},()=>Array(x[1]).fill(1/0));R[0][0]=0;const K=Array.from({length:x[0]},()=>Array(x[1]).fill(-1));for(let we=1;we<x[1];++we)for(let Se=1;Se<x[0];++Se){const Re=R[Se-1][we-1],Ue=R[Se-1][we],dt=R[Se][we-1];let oe,Z;Re<Ue&&Re<dt?(oe=Re,Z=0):Ue<Re&&Ue<dt?(oe=Ue,Z=1):(oe=dt,Z=2),R[Se][we]=N[Se-1][we-1]+oe,K[Se][we]=Z}for(let we=0;we<x[1];++we)K[0][we]=2;for(let we=0;we<x[0];++we)K[we][0]=1;let fe=v,de=O,ge=[],Ae=[];for(;fe>0||de>0;)switch(ge.push(fe-1),Ae.push(de-1),K[fe][de]){case 0:--fe,--de;break;case 1:--fe;break;case 2:--de;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${fe}, ${de}]. Please file a bug report.`)}return ge.reverse(),Ae.reverse(),[ge,Ae]}},"./src/utils/tensor.js":(Te,k,n)=>{n.r(k),n.d(k,{Tensor:()=>z,cat:()=>v,full:()=>de,full_like:()=>ge,interpolate:()=>y,interpolate_4d:()=>_,layer_norm:()=>L,matmul:()=>A,mean:()=>K,mean_pooling:()=>le,ones:()=>Ae,ones_like:()=>we,permute:()=>$,quantize_embeddings:()=>dt,rand:()=>Ue,rfft:()=>b,slice:()=>se,stack:()=>O,std_mean:()=>R,topk:()=>j,zeros:()=>Se,zeros_like:()=>Re});var p=n("./src/utils/maths.js"),I=n("./src/backends/onnx.js"),V=n("./src/ops/registry.js");const Y=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class z{constructor(...Z){Me(this,"ort_tensor");return(0,I.isONNXTensor)(Z[0])?this.ort_tensor=Z[0]:this.ort_tensor=new I.Tensor(Z[0],Z[1],Z[2]),new Proxy(this,{get:(pe,Ee)=>{if(typeof Ee=="string"){let qe=Number(Ee);if(Number.isInteger(qe))return pe._getitem(qe)}return pe[Ee]},set:(pe,Ee,qe)=>pe[Ee]=qe})}get dims(){return this.ort_tensor.dims}set dims(Z){this.ort_tensor.dims=Z}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[Z,...pe]=this.dims;if(pe.length>0){const Ee=pe.reduce((qe,xe)=>qe*xe);for(let qe=0;qe<Z;++qe)yield this._subarray(qe,Ee,pe)}else yield*this.data}_getitem(Z){const[pe,...Ee]=this.dims;if(Z=N(Z,pe),Ee.length>0){const qe=Ee.reduce((xe,je)=>xe*je);return this._subarray(Z,qe,Ee)}return new z(this.type,[this.data[Z]],Ee)}indexOf(Z){const pe=this.data;for(let Ee=0;Ee<pe.length;++Ee)if(pe[Ee]==Z)return Ee;return-1}_subarray(Z,pe,Ee){const qe=Z*pe,xe=(Z+1)*pe,je="subarray"in this.data?this.data.subarray(qe,xe):this.data.slice(qe,xe);return new z(this.type,je,Ee)}item(){const Z=this.data;if(Z.length!==1)throw new Error(`a Tensor with ${Z.length} elements cannot be converted to Scalar`);return Z[0]}tolist(){return function(Z,pe){const Ee=Z.length,qe=pe.reduce((je,He)=>je*He);if(Ee!==qe)throw Error(`cannot reshape array of size ${Ee} into shape (${pe})`);let xe=Z;for(let je=pe.length-1;je>=0;je--)xe=xe.reduce((He,at)=>{let Je=He[He.length-1];return Je.length<pe[je]?Je.push(at):He.push([at]),He},[[]]);return xe[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const Z=this.data;for(let pe=0;pe<Z.length;++pe)Z[pe]=1/(1+Math.exp(-Z[pe]));return this}map(Z){return this.clone().map_(Z)}map_(Z){const pe=this.data;for(let Ee=0;Ee<pe.length;++Ee)pe[Ee]=Z(pe[Ee],Ee,pe);return this}mul(Z){return this.clone().mul_(Z)}mul_(Z){const pe=this.data;for(let Ee=0;Ee<pe.length;++Ee)pe[Ee]*=Z;return this}div(Z){return this.clone().div_(Z)}div_(Z){const pe=this.data;for(let Ee=0;Ee<pe.length;++Ee)pe[Ee]/=Z;return this}add(Z){return this.clone().add_(Z)}add_(Z){const pe=this.data;for(let Ee=0;Ee<pe.length;++Ee)pe[Ee]+=Z;return this}sub(Z){return this.clone().sub_(Z)}sub_(Z){const pe=this.data;for(let Ee=0;Ee<pe.length;++Ee)pe[Ee]-=Z;return this}clone(){return new z(this.type,this.data.slice(),this.dims.slice())}slice(...Z){const pe=[],Ee=[];for(let Je=0;Je<this.dims.length;++Je){let be=Z[Je];if(be==null)Ee.push([0,this.dims[Je]]),pe.push(this.dims[Je]);else if(typeof be=="number")be=N(be,this.dims[Je],Je),Ee.push([be,be+1]);else{if(!Array.isArray(be)||be.length!==2)throw new Error(`Invalid slice: ${be}`);{let[Ce,We]=be;if(Ce=Ce===null?0:N(Ce,this.dims[Je],Je,!1),We=We===null?this.dims[Je]:N(We,this.dims[Je],Je,!1),Ce>We)throw new Error(`Invalid slice: ${be}`);const et=[Math.max(Ce,0),Math.min(We,this.dims[Je])];Ee.push(et),pe.push(et[1]-et[0])}}}const qe=Ee.map(([Je,be])=>be-Je),xe=qe.reduce((Je,be)=>Je*be),je=this.data,He=new je.constructor(xe),at=this.stride();for(let Je=0;Je<xe;++Je){let be=0;for(let Ce=qe.length-1,We=Je;Ce>=0;--Ce){const et=qe[Ce];be+=(We%et+Ee[Ce][0])*at[Ce],We=Math.floor(We/et)}He[Je]=je[be]}return new z(this.type,He,pe)}permute(...Z){return $(this,Z)}transpose(...Z){return this.permute(...Z)}sum(Z=null,pe=!1){return this.norm(1,Z,pe)}norm(Z="fro",pe=null,Ee=!1){if(Z==="fro")Z=2;else if(typeof Z=="string")throw Error(`Unsupported norm: ${Z}`);const qe=this.data,xe=(Je,be)=>Je+be**Z;if(pe===null){const Je=qe.reduce(xe,0)**(1/Z);return new z(this.type,[Je],[])}const[je,He,at]=x(xe,this,pe,Ee);if(Z!==1)for(let Je=0;Je<He.length;++Je)He[Je]=He[Je]**(1/Z);return new z(je,He,at)}normalize_(Z=2,pe=1){pe=N(pe,this.dims.length);const Ee=this.norm(Z,pe,!0),qe=this.data,xe=Ee.data;for(let je=0;je<qe.length;++je){let He=0;for(let at=this.dims.length-1,Je=je,be=1;at>=0;--at){const Ce=this.dims[at];at!==pe&&(He+=Je%Ce*be,be*=this.dims[at]),Je=Math.floor(Je/Ce)}qe[je]/=xe[He]}return this}normalize(Z=2,pe=1){return this.clone().normalize_(Z,pe)}stride(){return function(Z){const pe=new Array(Z.length);for(let Ee=Z.length-1,qe=1;Ee>=0;--Ee)pe[Ee]=qe,qe*=Z[Ee];return pe}(this.dims)}squeeze(Z=null){return new z(this.type,this.data,G(this.dims,Z))}squeeze_(Z=null){return this.dims=G(this.dims,Z),this}unsqueeze(Z=null){return new z(this.type,this.data,ie(this.dims,Z))}unsqueeze_(Z=null){return this.dims=ie(this.dims,Z),this}flatten_(Z=0,pe=-1){pe=(pe+this.dims.length)%this.dims.length;let Ee=this.dims.slice(0,Z),qe=this.dims.slice(Z,pe+1),xe=this.dims.slice(pe+1);return this.dims=[...Ee,qe.reduce((je,He)=>je*He,1),...xe],this}flatten(Z=0,pe=-1){return this.clone().flatten_(Z,pe)}view(...Z){let pe=-1;for(let qe=0;qe<Z.length;++qe)if(Z[qe]===-1){if(pe!==-1)throw new Error("Only one dimension can be inferred");pe=qe}const Ee=this.data;if(pe!==-1){const qe=Z.reduce((xe,je,He)=>He!==pe?xe*je:xe,1);Z[pe]=Ee.length/qe}return new z(this.type,Ee,Z)}neg_(){const Z=this.data;for(let pe=0;pe<Z.length;++pe)Z[pe]=-Z[pe];return this}neg(){return this.clone().neg_()}gt(Z){const pe=new Uint8Array(this.data.length),Ee=this.data;for(let qe=0;qe<Ee.length;++qe)pe[qe]=Ee[qe]>Z?1:0;return new z("bool",pe,this.dims)}lt(Z){const pe=new Uint8Array(this.data.length),Ee=this.data;for(let qe=0;qe<Ee.length;++qe)pe[qe]=Ee[qe]<Z?1:0;return new z("bool",pe,this.dims)}clamp_(Z,pe){const Ee=this.data;for(let qe=0;qe<Ee.length;++qe)Ee[qe]=Math.min(Math.max(Ee[qe],Z),pe);return this}clamp(Z,pe){return this.clone().clamp_(Z,pe)}round_(){const Z=this.data;for(let pe=0;pe<Z.length;++pe)Z[pe]=Math.round(Z[pe]);return this}round(){return this.clone().round_()}mean(Z=null,pe=!1){return K(this,Z,pe)}min(Z=null,pe=!1){if(Z===null){const je=(0,p.min)(this.data)[0];return new z(this.type,[je],[])}const[Ee,qe,xe]=x((je,He)=>Math.min(je,He),this,Z,pe,1/0);return new z(Ee,qe,xe)}max(Z=null,pe=!1){if(Z===null){const je=(0,p.max)(this.data)[0];return new z(this.type,[je],[])}const[Ee,qe,xe]=x((je,He)=>Math.max(je,He),this,Z,pe,-1/0);return new z(Ee,qe,xe)}argmin(Z=null,pe=!1){if(Z!==null)throw new Error("`dim !== null` not yet implemented.");const Ee=(0,p.min)(this.data)[1];return new z("int64",[BigInt(Ee)],[])}argmax(Z=null,pe=!1){if(Z!==null)throw new Error("`dim !== null` not yet implemented.");const Ee=(0,p.max)(this.data)[1];return new z("int64",[BigInt(Ee)],[])}to(Z){if(this.type===Z)return this;if(!Y.hasOwnProperty(Z))throw new Error(`Unsupported type: ${Z}`);let pe;const Ee=["int64","uint64"].includes(this.type),qe=["int64","uint64"].includes(Z);return Ee&&!qe?pe=Number:!Ee&&qe&&(pe=BigInt),new z(Z,Y[Z].from(this.data,pe),this.dims)}}function $(oe,Z){const[pe,Ee]=(0,p.permute_data)(oe.data,oe.dims,Z);return new z(oe.type,pe,Ee)}function y(oe,[Z,pe],Ee="bilinear",qe=!1){const xe=oe.dims.at(-3)??1,je=oe.dims.at(-2),He=oe.dims.at(-1);let at=(0,p.interpolate_data)(oe.data,[xe,je,He],[Z,pe],Ee,qe);return new z(oe.type,at,[xe,Z,pe])}async function _(oe,{size:Z=null,mode:pe="bilinear"}={}){if(oe.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!Z)throw new Error("`interpolate_4d` requires a `size` argument.");let Ee,qe;if(Z.length===2)Ee=[...oe.dims.slice(0,2),...Z];else if(Z.length===3)Ee=[oe.dims[0],...Z];else{if(Z.length!==4)throw new Error("`size` must be of length 2, 3, or 4.");Ee=Z}if(pe==="nearest")qe=await V.TensorOpRegistry.nearest_interpolate_4d;else if(pe==="bilinear")qe=await V.TensorOpRegistry.bilinear_interpolate_4d;else{if(pe!=="bicubic")throw new Error(`Unsupported mode: ${pe}`);qe=await V.TensorOpRegistry.bicubic_interpolate_4d}const xe=new z("int64",new BigInt64Array(Ee.map(BigInt)),[Ee.length]);return await qe({x:oe,s:xe})}async function A(oe,Z){return await(await V.TensorOpRegistry.matmul)({a:oe,b:Z})}async function b(oe,Z){return await(await V.TensorOpRegistry.rfft)({x:oe,a:Z})}async function j(oe,Z){const pe=await V.TensorOpRegistry.top_k;return Z=Z==null?oe.dims.at(-1):Math.min(Z,oe.dims.at(-1)),await pe({x:oe,k:new z("int64",[BigInt(Z)],[1])})}const re=oe=>new z("int64",oe,[oe.length]);async function se(oe,Z,pe,Ee,qe){return await(await V.TensorOpRegistry.slice)({x:oe,s:re(Z),e:re(pe),a:re(Ee),t:re(qe??new Array(Ee.length).fill(1))})}function le(oe,Z){const pe=oe.data,Ee=Z.data,qe=[oe.dims[0],oe.dims[2]],xe=new pe.constructor(qe[0]*qe[1]),[je,He,at]=oe.dims;let Je=0;for(let be=0;be<je;++be){const Ce=be*at*He;for(let We=0;We<at;++We){let et=0,ue=0;const Be=be*He,nt=Ce+We;for(let ht=0;ht<He;++ht){const gt=Number(Ee[Be+ht]);ue+=gt,et+=pe[nt+ht*at]*gt}const ft=et/ue;xe[Je++]=ft}}return new z(oe.type,xe,qe)}function L(oe,Z,{eps:pe=1e-5}={}){if(oe.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[Ee,qe]=oe.dims;if(Z.length!==1&&Z[0]!==qe)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[xe,je]=R(oe,1,0,!0),He=xe.data,at=je.data,Je=oe.data,be=new Je.constructor(Je.length);for(let Ce=0;Ce<Ee;++Ce){const We=Ce*qe;for(let et=0;et<qe;++et){const ue=We+et;be[ue]=(Je[ue]-at[Ce])/(He[Ce]+pe)}}return new z(oe.type,be,oe.dims)}function G(oe,Z){return oe=oe.slice(),Z===null?oe=oe.filter(pe=>pe!==1):typeof Z=="number"?oe[Z]===1&&oe.splice(Z,1):Array.isArray(Z)&&(oe=oe.filter((pe,Ee)=>pe!==1||!Z.includes(Ee))),oe}function ie(oe,Z){return Z=N(Z,oe.length+1),(oe=oe.slice()).splice(Z,0,1),oe}function N(oe,Z,pe=null,Ee=!0){if(Ee&&(oe<-Z||oe>=Z))throw new Error(`IndexError: index ${oe} is out of bounds for dimension${pe===null?"":" "+pe} with size ${Z}`);return oe<0&&(oe=(oe%Z+Z)%Z),oe}function v(oe,Z=0){Z=N(Z,oe[0].dims.length);const pe=oe[0].dims.slice();pe[Z]=oe.reduce((je,He)=>je+He.dims[Z],0);const Ee=pe.reduce((je,He)=>je*He,1),qe=new oe[0].data.constructor(Ee),xe=oe[0].type;if(Z===0){let je=0;for(const He of oe){const at=He.data;qe.set(at,je),je+=at.length}}else{let je=0;for(let He=0;He<oe.length;++He){const{data:at,dims:Je}=oe[He];for(let be=0;be<at.length;++be){let Ce=0;for(let We=Je.length-1,et=be,ue=1;We>=0;--We){const Be=Je[We];let nt=et%Be;We===Z&&(nt+=je),Ce+=nt*ue,ue*=pe[We],et=Math.floor(et/Be)}qe[Ce]=at[be]}je+=Je[Z]}}return new z(xe,qe,pe)}function O(oe,Z=0){return v(oe.map(pe=>pe.unsqueeze(Z)),Z)}function x(oe,Z,pe=null,Ee=!1,qe=null){const xe=Z.data,je=Z.dims;pe=N(pe,je.length);const He=je.slice();He[pe]=1;const at=new xe.constructor(xe.length/je[pe]);qe!==null&&at.fill(qe);for(let Je=0;Je<xe.length;++Je){let be=0;for(let Ce=je.length-1,We=Je,et=1;Ce>=0;--Ce){const ue=je[Ce];Ce!==pe&&(be+=We%ue*et,et*=He[Ce]),We=Math.floor(We/ue)}at[be]=oe(at[be],xe[Je],Je,be)}return Ee||He.splice(pe,1),[Z.type,at,He]}function R(oe,Z=null,pe=1,Ee=!1){const qe=oe.data,xe=oe.dims;if(Z===null){const Ce=qe.reduce((ue,Be)=>ue+Be,0)/qe.length,We=Math.sqrt(qe.reduce((ue,Be)=>ue+(Be-Ce)**2,0)/(qe.length-pe)),et=new z(oe.type,[Ce],[]);return[new z(oe.type,[We],[]),et]}const je=K(oe,Z=N(Z,xe.length),Ee),He=je.data,[at,Je,be]=x((Ce,We,et,ue)=>Ce+(We-He[ue])**2,oe,Z,Ee);for(let Ce=0;Ce<Je.length;++Ce)Je[Ce]=Math.sqrt(Je[Ce]/(xe[Z]-pe));return[new z(at,Je,be),je]}function K(oe,Z=null,pe=!1){const Ee=oe.dims,qe=oe.data;if(Z===null){const at=qe.reduce((Je,be)=>Je+be,0);return new z(oe.type,[at/qe.length],[])}Z=N(Z,Ee.length);const[xe,je,He]=x((at,Je)=>at+Je,oe,Z,pe);if(Ee[Z]!==1)for(let at=0;at<je.length;++at)je[at]/=Ee[Z];return new z(xe,je,He)}function fe(oe,Z,pe,Ee){const qe=oe.reduce((xe,je)=>xe*je,1);return new z(pe,new Ee(qe).fill(Z),oe)}function de(oe,Z){let pe,Ee;if(typeof Z=="number")pe="float32",Ee=Float32Array;else if(typeof Z=="bigint")pe="int64",Ee=BigInt64Array;else{if(typeof Z!="boolean")throw new Error("Unsupported data type: "+typeof Z);pe="bool",Ee=Uint8Array}return fe(oe,Z,pe,Ee)}function ge(oe,Z){return de(oe.dims,Z)}function Ae(oe){return fe(oe,1n,"int64",BigInt64Array)}function we(oe){return Ae(oe.dims)}function Se(oe){return fe(oe,0n,"int64",BigInt64Array)}function Re(oe){return Se(oe.dims)}function Ue(oe){const Z=oe.reduce((pe,Ee)=>pe*Ee,1);return new z("float32",Float32Array.from({length:Z},()=>Math.random()),oe)}function dt(oe,Z){if(oe.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(oe.dims.at(-1)%8!=0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(Z))throw new Error("The precision must be either 'binary' or 'ubinary'");const pe=Z==="binary",Ee=pe?"int8":"uint8",qe=pe?Int8Array:Uint8Array,xe=oe.data,je=new qe(xe.length/8);for(let He=0;He<xe.length;++He){const at=xe[He]>0?1:0,Je=Math.floor(He/8),be=He%8;je[Je]|=at<<7-be,pe&&be===0&&(je[Je]-=128)}return new z(Ee,je,[oe.dims[0],oe.dims[1]/8])}}},$h={};function Er(Te){var k=$h[Te];if(k!==void 0)return k.exports;var n=$h[Te]={exports:{}};return Th[Te](n,n.exports,Er),n.exports}Er.m=Th,Vi=Object.getPrototypeOf?Te=>Object.getPrototypeOf(Te):Te=>Te.__proto__,Er.t=function(Te,k){if(1&k&&(Te=this(Te)),8&k||typeof Te=="object"&&Te&&(4&k&&Te.__esModule||16&k&&typeof Te.then=="function"))return Te;var n=Object.create(null);Er.r(n);var p={};Ks=Ks||[null,Vi({}),Vi([]),Vi(Vi)];for(var I=2&k&&Te;typeof I=="object"&&!~Ks.indexOf(I);I=Vi(I))Object.getOwnPropertyNames(I).forEach(V=>p[V]=()=>Te[V]);return p.default=()=>Te,Er.d(n,p),n},Er.d=(Te,k)=>{for(var n in k)Er.o(k,n)&&!Er.o(Te,n)&&Object.defineProperty(Te,n,{enumerable:!0,get:k[n]})},Er.o=(Te,k)=>Object.prototype.hasOwnProperty.call(Te,k),Er.r=Te=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(Te,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Te,"__esModule",{value:!0})},(()=>{var Te;if(typeof(typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:er&&er.tagName.toUpperCase()==="SCRIPT"&&er.src||new URL("kokoro.umd.js",document.baseURI).href)=="string"&&(Te=typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:er&&er.tagName.toUpperCase()==="SCRIPT"&&er.src||new URL("kokoro.umd.js",document.baseURI).href),!Te)throw new Error("Automatic publicPath is not supported in this browser");Te=Te.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),Er.p=Te})(),Er.b=new URL(typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:er&&er.tagName.toUpperCase()==="SCRIPT"&&er.src||new URL("kokoro.umd.js",document.baseURI).href);var Gi={};(()=>{Er.r(Gi),Er.d(Gi,{ASTFeatureExtractor:()=>_.ASTFeatureExtractor,ASTForAudioClassification:()=>n.ASTForAudioClassification,ASTModel:()=>n.ASTModel,ASTPreTrainedModel:()=>n.ASTPreTrainedModel,AlbertForMaskedLM:()=>n.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>n.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>n.AlbertForSequenceClassification,AlbertModel:()=>n.AlbertModel,AlbertPreTrainedModel:()=>n.AlbertPreTrainedModel,AlbertTokenizer:()=>p.AlbertTokenizer,AudioClassificationPipeline:()=>k.AudioClassificationPipeline,AutoConfig:()=>I.AutoConfig,AutoFeatureExtractor:()=>A.AutoFeatureExtractor,AutoImageProcessor:()=>re.AutoImageProcessor,AutoModel:()=>n.AutoModel,AutoModelForAudioClassification:()=>n.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>n.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>n.AutoModelForCTC,AutoModelForCausalLM:()=>n.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>n.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>n.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>n.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>n.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>n.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>n.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>n.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>n.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>n.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>n.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>n.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>n.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>n.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>n.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>n.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>n.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>n.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>n.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>n.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>n.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>n.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>n.AutoModelForVision2Seq,AutoModelForXVector:()=>n.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>n.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>L.AutoProcessor,AutoTokenizer:()=>p.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>k.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>n.BartForConditionalGeneration,BartForSequenceClassification:()=>n.BartForSequenceClassification,BartModel:()=>n.BartModel,BartPretrainedModel:()=>n.BartPretrainedModel,BartTokenizer:()=>p.BartTokenizer,BaseModelOutput:()=>n.BaseModelOutput,BaseStreamer:()=>G.BaseStreamer,BeitFeatureExtractor:()=>j.BeitFeatureExtractor,BeitForImageClassification:()=>n.BeitForImageClassification,BeitModel:()=>n.BeitModel,BeitPreTrainedModel:()=>n.BeitPreTrainedModel,BertForMaskedLM:()=>n.BertForMaskedLM,BertForQuestionAnswering:()=>n.BertForQuestionAnswering,BertForSequenceClassification:()=>n.BertForSequenceClassification,BertForTokenClassification:()=>n.BertForTokenClassification,BertModel:()=>n.BertModel,BertPreTrainedModel:()=>n.BertPreTrainedModel,BertTokenizer:()=>p.BertTokenizer,BitImageProcessor:()=>j.BitImageProcessor,BlenderbotForConditionalGeneration:()=>n.BlenderbotForConditionalGeneration,BlenderbotModel:()=>n.BlenderbotModel,BlenderbotPreTrainedModel:()=>n.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>n.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>n.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>n.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>p.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>p.BlenderbotTokenizer,BloomForCausalLM:()=>n.BloomForCausalLM,BloomModel:()=>n.BloomModel,BloomPreTrainedModel:()=>n.BloomPreTrainedModel,BloomTokenizer:()=>p.BloomTokenizer,CLIPFeatureExtractor:()=>j.CLIPFeatureExtractor,CLIPImageProcessor:()=>j.CLIPImageProcessor,CLIPModel:()=>n.CLIPModel,CLIPPreTrainedModel:()=>n.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>n.CLIPSegForImageSegmentation,CLIPSegModel:()=>n.CLIPSegModel,CLIPSegPreTrainedModel:()=>n.CLIPSegPreTrainedModel,CLIPTextModel:()=>n.CLIPTextModel,CLIPTextModelWithProjection:()=>n.CLIPTextModelWithProjection,CLIPTokenizer:()=>p.CLIPTokenizer,CLIPVisionModel:()=>n.CLIPVisionModel,CLIPVisionModelWithProjection:()=>n.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>n.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>n.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>n.CamembertForSequenceClassification,CamembertForTokenClassification:()=>n.CamembertForTokenClassification,CamembertModel:()=>n.CamembertModel,CamembertPreTrainedModel:()=>n.CamembertPreTrainedModel,CamembertTokenizer:()=>p.CamembertTokenizer,CausalLMOutput:()=>n.CausalLMOutput,CausalLMOutputWithPast:()=>n.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>j.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>n.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>n.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>n.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>_.ClapFeatureExtractor,ClapModel:()=>n.ClapModel,ClapPreTrainedModel:()=>n.ClapPreTrainedModel,ClapTextModelWithProjection:()=>n.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>N.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>n.CodeGenForCausalLM,CodeGenModel:()=>n.CodeGenModel,CodeGenPreTrainedModel:()=>n.CodeGenPreTrainedModel,CodeGenTokenizer:()=>p.CodeGenTokenizer,CodeLlamaTokenizer:()=>p.CodeLlamaTokenizer,CohereForCausalLM:()=>n.CohereForCausalLM,CohereModel:()=>n.CohereModel,CoherePreTrainedModel:()=>n.CoherePreTrainedModel,CohereTokenizer:()=>p.CohereTokenizer,ConvBertForMaskedLM:()=>n.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>n.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>n.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>n.ConvBertForTokenClassification,ConvBertModel:()=>n.ConvBertModel,ConvBertPreTrainedModel:()=>n.ConvBertPreTrainedModel,ConvBertTokenizer:()=>p.ConvBertTokenizer,ConvNextFeatureExtractor:()=>j.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>n.ConvNextForImageClassification,ConvNextImageProcessor:()=>j.ConvNextImageProcessor,ConvNextModel:()=>n.ConvNextModel,ConvNextPreTrainedModel:()=>n.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>n.ConvNextV2ForImageClassification,ConvNextV2Model:()=>n.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>n.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>j.DPTFeatureExtractor,DPTForDepthEstimation:()=>n.DPTForDepthEstimation,DPTImageProcessor:()=>j.DPTImageProcessor,DPTModel:()=>n.DPTModel,DPTPreTrainedModel:()=>n.DPTPreTrainedModel,DebertaForMaskedLM:()=>n.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>n.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>n.DebertaForSequenceClassification,DebertaForTokenClassification:()=>n.DebertaForTokenClassification,DebertaModel:()=>n.DebertaModel,DebertaPreTrainedModel:()=>n.DebertaPreTrainedModel,DebertaTokenizer:()=>p.DebertaTokenizer,DebertaV2ForMaskedLM:()=>n.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>n.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>n.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>n.DebertaV2ForTokenClassification,DebertaV2Model:()=>n.DebertaV2Model,DebertaV2PreTrainedModel:()=>n.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>p.DebertaV2Tokenizer,DecisionTransformerModel:()=>n.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>n.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>j.DeiTFeatureExtractor,DeiTForImageClassification:()=>n.DeiTForImageClassification,DeiTImageProcessor:()=>j.DeiTImageProcessor,DeiTModel:()=>n.DeiTModel,DeiTPreTrainedModel:()=>n.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>n.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>n.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>k.DepthEstimationPipeline,DepthProForDepthEstimation:()=>n.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>n.DepthProPreTrainedModel,DetrFeatureExtractor:()=>j.DetrFeatureExtractor,DetrForObjectDetection:()=>n.DetrForObjectDetection,DetrForSegmentation:()=>n.DetrForSegmentation,DetrImageProcessor:()=>j.DetrImageProcessor,DetrModel:()=>n.DetrModel,DetrObjectDetectionOutput:()=>n.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>n.DetrPreTrainedModel,DetrSegmentationOutput:()=>n.DetrSegmentationOutput,Dinov2ForImageClassification:()=>n.Dinov2ForImageClassification,Dinov2Model:()=>n.Dinov2Model,Dinov2PreTrainedModel:()=>n.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>n.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>n.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>n.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>n.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>n.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>n.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>n.DistilBertForTokenClassification,DistilBertModel:()=>n.DistilBertModel,DistilBertPreTrainedModel:()=>n.DistilBertPreTrainedModel,DistilBertTokenizer:()=>p.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>k.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>j.DonutFeatureExtractor,DonutImageProcessor:()=>j.DonutImageProcessor,DonutSwinModel:()=>n.DonutSwinModel,DonutSwinPreTrainedModel:()=>n.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>n.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>j.EfficientNetImageProcessor,EfficientNetModel:()=>n.EfficientNetModel,EfficientNetPreTrainedModel:()=>n.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>n.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>n.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>n.ElectraForSequenceClassification,ElectraForTokenClassification:()=>n.ElectraForTokenClassification,ElectraModel:()=>n.ElectraModel,ElectraPreTrainedModel:()=>n.ElectraPreTrainedModel,ElectraTokenizer:()=>p.ElectraTokenizer,EosTokenCriteria:()=>ie.EosTokenCriteria,EsmForMaskedLM:()=>n.EsmForMaskedLM,EsmForSequenceClassification:()=>n.EsmForSequenceClassification,EsmForTokenClassification:()=>n.EsmForTokenClassification,EsmModel:()=>n.EsmModel,EsmPreTrainedModel:()=>n.EsmPreTrainedModel,EsmTokenizer:()=>p.EsmTokenizer,ExaoneForCausalLM:()=>n.ExaoneForCausalLM,ExaoneModel:()=>n.ExaoneModel,ExaonePreTrainedModel:()=>n.ExaonePreTrainedModel,FFT:()=>$.FFT,FalconForCausalLM:()=>n.FalconForCausalLM,FalconModel:()=>n.FalconModel,FalconPreTrainedModel:()=>n.FalconPreTrainedModel,FalconTokenizer:()=>p.FalconTokenizer,FastViTForImageClassification:()=>n.FastViTForImageClassification,FastViTModel:()=>n.FastViTModel,FastViTPreTrainedModel:()=>n.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>k.FeatureExtractionPipeline,FeatureExtractor:()=>y.FeatureExtractor,FillMaskPipeline:()=>k.FillMaskPipeline,Florence2ForConditionalGeneration:()=>n.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>n.Florence2PreTrainedModel,Florence2Processor:()=>le.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>N.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>N.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>j.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>n.GLPNForDepthEstimation,GLPNModel:()=>n.GLPNModel,GLPNPreTrainedModel:()=>n.GLPNPreTrainedModel,GPT2LMHeadModel:()=>n.GPT2LMHeadModel,GPT2Model:()=>n.GPT2Model,GPT2PreTrainedModel:()=>n.GPT2PreTrainedModel,GPT2Tokenizer:()=>p.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>n.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>n.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>n.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>n.GPTJForCausalLM,GPTJModel:()=>n.GPTJModel,GPTJPreTrainedModel:()=>n.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>n.GPTNeoForCausalLM,GPTNeoModel:()=>n.GPTNeoModel,GPTNeoPreTrainedModel:()=>n.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>n.GPTNeoXForCausalLM,GPTNeoXModel:()=>n.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>n.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>p.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>n.Gemma2ForCausalLM,Gemma2Model:()=>n.Gemma2Model,Gemma2PreTrainedModel:()=>n.Gemma2PreTrainedModel,GemmaForCausalLM:()=>n.GemmaForCausalLM,GemmaModel:()=>n.GemmaModel,GemmaPreTrainedModel:()=>n.GemmaPreTrainedModel,GemmaTokenizer:()=>p.GemmaTokenizer,GlmForCausalLM:()=>n.GlmForCausalLM,GlmModel:()=>n.GlmModel,GlmPreTrainedModel:()=>n.GlmPreTrainedModel,GraniteForCausalLM:()=>n.GraniteForCausalLM,GraniteModel:()=>n.GraniteModel,GranitePreTrainedModel:()=>n.GranitePreTrainedModel,Grok1Tokenizer:()=>p.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>n.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>j.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>n.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>le.GroundingDinoProcessor,GroupViTModel:()=>n.GroupViTModel,GroupViTPreTrainedModel:()=>n.GroupViTPreTrainedModel,HeliumForCausalLM:()=>n.HeliumForCausalLM,HeliumModel:()=>n.HeliumModel,HeliumPreTrainedModel:()=>n.HeliumPreTrainedModel,HerbertTokenizer:()=>p.HerbertTokenizer,HieraForImageClassification:()=>n.HieraForImageClassification,HieraModel:()=>n.HieraModel,HieraPreTrainedModel:()=>n.HieraPreTrainedModel,HubertForCTC:()=>n.HubertForCTC,HubertForSequenceClassification:()=>n.HubertForSequenceClassification,HubertModel:()=>n.HubertModel,HubertPreTrainedModel:()=>n.HubertPreTrainedModel,IJepaForImageClassification:()=>n.IJepaForImageClassification,IJepaModel:()=>n.IJepaModel,IJepaPreTrainedModel:()=>n.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>n.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>j.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>n.Idefics3PreTrainedModel,Idefics3Processor:()=>le.Idefics3Processor,ImageClassificationPipeline:()=>k.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>k.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>_.ImageFeatureExtractor,ImageMattingOutput:()=>n.ImageMattingOutput,ImageProcessor:()=>b.ImageProcessor,ImageSegmentationPipeline:()=>k.ImageSegmentationPipeline,ImageToImagePipeline:()=>k.ImageToImagePipeline,ImageToTextPipeline:()=>k.ImageToTextPipeline,InterruptableStoppingCriteria:()=>ie.InterruptableStoppingCriteria,JAISLMHeadModel:()=>n.JAISLMHeadModel,JAISModel:()=>n.JAISModel,JAISPreTrainedModel:()=>n.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>j.JinaCLIPImageProcessor,JinaCLIPModel:()=>n.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>n.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>le.JinaCLIPProcessor,JinaCLIPTextModel:()=>n.JinaCLIPTextModel,JinaCLIPVisionModel:()=>n.JinaCLIPVisionModel,LlamaForCausalLM:()=>n.LlamaForCausalLM,LlamaModel:()=>n.LlamaModel,LlamaPreTrainedModel:()=>n.LlamaPreTrainedModel,LlamaTokenizer:()=>p.LlamaTokenizer,LlavaForConditionalGeneration:()=>n.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>n.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>j.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>n.LlavaPreTrainedModel,LogitsProcessor:()=>N.LogitsProcessor,LogitsProcessorList:()=>N.LogitsProcessorList,LogitsWarper:()=>N.LogitsWarper,LongT5ForConditionalGeneration:()=>n.LongT5ForConditionalGeneration,LongT5Model:()=>n.LongT5Model,LongT5PreTrainedModel:()=>n.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>n.M2M100ForConditionalGeneration,M2M100Model:()=>n.M2M100Model,M2M100PreTrainedModel:()=>n.M2M100PreTrainedModel,M2M100Tokenizer:()=>p.M2M100Tokenizer,MBart50Tokenizer:()=>p.MBart50Tokenizer,MBartForCausalLM:()=>n.MBartForCausalLM,MBartForConditionalGeneration:()=>n.MBartForConditionalGeneration,MBartForSequenceClassification:()=>n.MBartForSequenceClassification,MBartModel:()=>n.MBartModel,MBartPreTrainedModel:()=>n.MBartPreTrainedModel,MBartTokenizer:()=>p.MBartTokenizer,MPNetForMaskedLM:()=>n.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>n.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>n.MPNetForSequenceClassification,MPNetForTokenClassification:()=>n.MPNetForTokenClassification,MPNetModel:()=>n.MPNetModel,MPNetPreTrainedModel:()=>n.MPNetPreTrainedModel,MPNetTokenizer:()=>p.MPNetTokenizer,MT5ForConditionalGeneration:()=>n.MT5ForConditionalGeneration,MT5Model:()=>n.MT5Model,MT5PreTrainedModel:()=>n.MT5PreTrainedModel,MarianMTModel:()=>n.MarianMTModel,MarianModel:()=>n.MarianModel,MarianPreTrainedModel:()=>n.MarianPreTrainedModel,MarianTokenizer:()=>p.MarianTokenizer,Mask2FormerImageProcessor:()=>j.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>j.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>n.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>j.MaskFormerImageProcessor,MaskFormerModel:()=>n.MaskFormerModel,MaskFormerPreTrainedModel:()=>n.MaskFormerPreTrainedModel,MaskedLMOutput:()=>n.MaskedLMOutput,MaxLengthCriteria:()=>ie.MaxLengthCriteria,MgpstrForSceneTextRecognition:()=>n.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>n.MgpstrModelOutput,MgpstrPreTrainedModel:()=>n.MgpstrPreTrainedModel,MgpstrProcessor:()=>le.MgpstrProcessor,MgpstrTokenizer:()=>p.MgpstrTokenizer,MinLengthLogitsProcessor:()=>N.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>N.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>n.MistralForCausalLM,MistralModel:()=>n.MistralModel,MistralPreTrainedModel:()=>n.MistralPreTrainedModel,MobileBertForMaskedLM:()=>n.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>n.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>n.MobileBertForSequenceClassification,MobileBertModel:()=>n.MobileBertModel,MobileBertPreTrainedModel:()=>n.MobileBertPreTrainedModel,MobileBertTokenizer:()=>p.MobileBertTokenizer,MobileLLMForCausalLM:()=>n.MobileLLMForCausalLM,MobileLLMModel:()=>n.MobileLLMModel,MobileLLMPreTrainedModel:()=>n.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>j.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>n.MobileNetV1ForImageClassification,MobileNetV1ImageProcessor:()=>j.MobileNetV1ImageProcessor,MobileNetV1Model:()=>n.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>n.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>j.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>n.MobileNetV2ForImageClassification,MobileNetV2ImageProcessor:()=>j.MobileNetV2ImageProcessor,MobileNetV2Model:()=>n.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>n.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>j.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>n.MobileNetV3ForImageClassification,MobileNetV3ImageProcessor:()=>j.MobileNetV3ImageProcessor,MobileNetV3Model:()=>n.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>n.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>j.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>n.MobileNetV4ForImageClassification,MobileNetV4ImageProcessor:()=>j.MobileNetV4ImageProcessor,MobileNetV4Model:()=>n.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>n.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>j.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>n.MobileViTForImageClassification,MobileViTImageProcessor:()=>j.MobileViTImageProcessor,MobileViTModel:()=>n.MobileViTModel,MobileViTPreTrainedModel:()=>n.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>n.MobileViTV2ForImageClassification,MobileViTV2Model:()=>n.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>n.MobileViTV2PreTrainedModel,ModelOutput:()=>n.ModelOutput,ModernBertForMaskedLM:()=>n.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>n.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>n.ModernBertForTokenClassification,ModernBertModel:()=>n.ModernBertModel,ModernBertPreTrainedModel:()=>n.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>n.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>_.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>n.MoonshineForConditionalGeneration,MoonshineModel:()=>n.MoonshineModel,MoonshinePreTrainedModel:()=>n.MoonshinePreTrainedModel,MoonshineProcessor:()=>le.MoonshineProcessor,MptForCausalLM:()=>n.MptForCausalLM,MptModel:()=>n.MptModel,MptPreTrainedModel:()=>n.MptPreTrainedModel,MultiModalityCausalLM:()=>n.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>n.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>n.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>n.MusicgenForConditionalGeneration,MusicgenModel:()=>n.MusicgenModel,MusicgenPreTrainedModel:()=>n.MusicgenPreTrainedModel,NllbTokenizer:()=>p.NllbTokenizer,NoBadWordsLogitsProcessor:()=>N.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>N.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>n.NomicBertModel,NomicBertPreTrainedModel:()=>n.NomicBertPreTrainedModel,NougatImageProcessor:()=>j.NougatImageProcessor,NougatTokenizer:()=>p.NougatTokenizer,OPTForCausalLM:()=>n.OPTForCausalLM,OPTModel:()=>n.OPTModel,OPTPreTrainedModel:()=>n.OPTPreTrainedModel,ObjectDetectionPipeline:()=>k.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>n.Olmo2ForCausalLM,Olmo2Model:()=>n.Olmo2Model,Olmo2PreTrainedModel:()=>n.Olmo2PreTrainedModel,OlmoForCausalLM:()=>n.OlmoForCausalLM,OlmoModel:()=>n.OlmoModel,OlmoPreTrainedModel:()=>n.OlmoPreTrainedModel,OpenELMForCausalLM:()=>n.OpenELMForCausalLM,OpenELMModel:()=>n.OpenELMModel,OpenELMPreTrainedModel:()=>n.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>j.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>n.OwlViTForObjectDetection,OwlViTImageProcessor:()=>j.OwlViTImageProcessor,OwlViTModel:()=>n.OwlViTModel,OwlViTPreTrainedModel:()=>n.OwlViTPreTrainedModel,OwlViTProcessor:()=>le.OwlViTProcessor,Owlv2ForObjectDetection:()=>n.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>j.Owlv2ImageProcessor,Owlv2Model:()=>n.Owlv2Model,Owlv2PreTrainedModel:()=>n.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>n.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>n.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>le.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>n.PatchTSMixerForPrediction,PatchTSMixerModel:()=>n.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>n.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>n.PatchTSTForPrediction,PatchTSTModel:()=>n.PatchTSTModel,PatchTSTPreTrainedModel:()=>n.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>n.Phi3ForCausalLM,Phi3Model:()=>n.Phi3Model,Phi3PreTrainedModel:()=>n.Phi3PreTrainedModel,Phi3VForCausalLM:()=>n.Phi3VForCausalLM,Phi3VImageProcessor:()=>j.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>n.Phi3VPreTrainedModel,Phi3VProcessor:()=>le.Phi3VProcessor,PhiForCausalLM:()=>n.PhiForCausalLM,PhiModel:()=>n.PhiModel,PhiPreTrainedModel:()=>n.PhiPreTrainedModel,Pipeline:()=>k.Pipeline,PreTrainedModel:()=>n.PreTrainedModel,PreTrainedTokenizer:()=>p.PreTrainedTokenizer,PretrainedConfig:()=>I.PretrainedConfig,PretrainedMixin:()=>n.PretrainedMixin,Processor:()=>se.Processor,PvtForImageClassification:()=>n.PvtForImageClassification,PvtImageProcessor:()=>j.PvtImageProcessor,PvtModel:()=>n.PvtModel,PvtPreTrainedModel:()=>n.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>_.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>n.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>n.PyAnnoteModel,PyAnnotePreTrainedModel:()=>n.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>le.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>n.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>k.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>n.Qwen2ForCausalLM,Qwen2Model:()=>n.Qwen2Model,Qwen2PreTrainedModel:()=>n.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>p.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>n.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>j.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>n.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>le.Qwen2VLProcessor,RTDetrForObjectDetection:()=>n.RTDetrForObjectDetection,RTDetrImageProcessor:()=>j.RTDetrImageProcessor,RTDetrModel:()=>n.RTDetrModel,RTDetrObjectDetectionOutput:()=>n.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>n.RTDetrPreTrainedModel,RawAudio:()=>V.RawAudio,RawImage:()=>Y.RawImage,RepetitionPenaltyLogitsProcessor:()=>N.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>n.ResNetForImageClassification,ResNetModel:()=>n.ResNetModel,ResNetPreTrainedModel:()=>n.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>n.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>n.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>n.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>n.RoFormerForTokenClassification,RoFormerModel:()=>n.RoFormerModel,RoFormerPreTrainedModel:()=>n.RoFormerPreTrainedModel,RoFormerTokenizer:()=>p.RoFormerTokenizer,RobertaForMaskedLM:()=>n.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>n.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>n.RobertaForSequenceClassification,RobertaForTokenClassification:()=>n.RobertaForTokenClassification,RobertaModel:()=>n.RobertaModel,RobertaPreTrainedModel:()=>n.RobertaPreTrainedModel,RobertaTokenizer:()=>p.RobertaTokenizer,SamImageProcessor:()=>j.SamImageProcessor,SamImageSegmentationOutput:()=>n.SamImageSegmentationOutput,SamModel:()=>n.SamModel,SamPreTrainedModel:()=>n.SamPreTrainedModel,SamProcessor:()=>le.SamProcessor,SapiensForDepthEstimation:()=>n.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>n.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>n.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>n.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>_.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>j.SegformerFeatureExtractor,SegformerForImageClassification:()=>n.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>n.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>j.SegformerImageProcessor,SegformerModel:()=>n.SegformerModel,SegformerPreTrainedModel:()=>n.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>n.Seq2SeqLMOutput,SequenceClassifierOutput:()=>n.SequenceClassifierOutput,SiglipImageProcessor:()=>j.SiglipImageProcessor,SiglipModel:()=>n.SiglipModel,SiglipPreTrainedModel:()=>n.SiglipPreTrainedModel,SiglipTextModel:()=>n.SiglipTextModel,SiglipTokenizer:()=>p.SiglipTokenizer,SiglipVisionModel:()=>n.SiglipVisionModel,SpeechT5FeatureExtractor:()=>_.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>n.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>n.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>n.SpeechT5HifiGan,SpeechT5Model:()=>n.SpeechT5Model,SpeechT5PreTrainedModel:()=>n.SpeechT5PreTrainedModel,SpeechT5Processor:()=>le.SpeechT5Processor,SpeechT5Tokenizer:()=>p.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>n.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>n.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>n.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>n.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>n.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>p.SqueezeBertTokenizer,StableLmForCausalLM:()=>n.StableLmForCausalLM,StableLmModel:()=>n.StableLmModel,StableLmPreTrainedModel:()=>n.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>n.Starcoder2ForCausalLM,Starcoder2Model:()=>n.Starcoder2Model,Starcoder2PreTrainedModel:()=>n.Starcoder2PreTrainedModel,StoppingCriteria:()=>ie.StoppingCriteria,StoppingCriteriaList:()=>ie.StoppingCriteriaList,StyleTextToSpeech2Model:()=>n.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>n.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>k.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>N.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>n.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>j.Swin2SRImageProcessor,Swin2SRModel:()=>n.Swin2SRModel,Swin2SRPreTrainedModel:()=>n.Swin2SRPreTrainedModel,SwinForImageClassification:()=>n.SwinForImageClassification,SwinModel:()=>n.SwinModel,SwinPreTrainedModel:()=>n.SwinPreTrainedModel,T5ForConditionalGeneration:()=>n.T5ForConditionalGeneration,T5Model:()=>n.T5Model,T5PreTrainedModel:()=>n.T5PreTrainedModel,T5Tokenizer:()=>p.T5Tokenizer,TableTransformerForObjectDetection:()=>n.TableTransformerForObjectDetection,TableTransformerModel:()=>n.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>n.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>n.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>N.TemperatureLogitsWarper,Tensor:()=>z.Tensor,Text2TextGenerationPipeline:()=>k.Text2TextGenerationPipeline,TextClassificationPipeline:()=>k.TextClassificationPipeline,TextGenerationPipeline:()=>k.TextGenerationPipeline,TextStreamer:()=>G.TextStreamer,TextToAudioPipeline:()=>k.TextToAudioPipeline,TokenClassificationPipeline:()=>k.TokenClassificationPipeline,TokenClassifierOutput:()=>n.TokenClassifierOutput,TokenizerModel:()=>p.TokenizerModel,TopKLogitsWarper:()=>N.TopKLogitsWarper,TopPLogitsWarper:()=>N.TopPLogitsWarper,TrOCRForCausalLM:()=>n.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>n.TrOCRPreTrainedModel,TranslationPipeline:()=>k.TranslationPipeline,UniSpeechForCTC:()=>n.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>n.UniSpeechForSequenceClassification,UniSpeechModel:()=>n.UniSpeechModel,UniSpeechPreTrainedModel:()=>n.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>n.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>n.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>n.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>n.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>n.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>le.VLChatProcessor,VLMImageProcessor:()=>j.VLMImageProcessor,ViTFeatureExtractor:()=>j.ViTFeatureExtractor,ViTForImageClassification:()=>n.ViTForImageClassification,ViTImageProcessor:()=>j.ViTImageProcessor,ViTMAEModel:()=>n.ViTMAEModel,ViTMAEPreTrainedModel:()=>n.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>n.ViTMSNForImageClassification,ViTMSNModel:()=>n.ViTMSNModel,ViTMSNPreTrainedModel:()=>n.ViTMSNPreTrainedModel,ViTModel:()=>n.ViTModel,ViTPreTrainedModel:()=>n.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>n.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>n.VitMatteForImageMatting,VitMatteImageProcessor:()=>j.VitMatteImageProcessor,VitMattePreTrainedModel:()=>n.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>n.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>j.VitPoseImageProcessor,VitPosePreTrainedModel:()=>n.VitPosePreTrainedModel,VitsModel:()=>n.VitsModel,VitsModelOutput:()=>n.VitsModelOutput,VitsPreTrainedModel:()=>n.VitsPreTrainedModel,VitsTokenizer:()=>p.VitsTokenizer,Wav2Vec2BertForCTC:()=>n.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>n.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>n.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>n.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>p.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>_.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>n.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>n.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>n.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>n.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>n.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>le.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>le.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>n.WavLMForAudioFrameClassification,WavLMForCTC:()=>n.WavLMForCTC,WavLMForSequenceClassification:()=>n.WavLMForSequenceClassification,WavLMForXVector:()=>n.WavLMForXVector,WavLMModel:()=>n.WavLMModel,WavLMPreTrainedModel:()=>n.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>_.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>n.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>n.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>_.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>n.WhisperForConditionalGeneration,WhisperModel:()=>n.WhisperModel,WhisperPreTrainedModel:()=>n.WhisperPreTrainedModel,WhisperProcessor:()=>le.WhisperProcessor,WhisperTextStreamer:()=>G.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>N.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>p.WhisperTokenizer,XLMForQuestionAnswering:()=>n.XLMForQuestionAnswering,XLMForSequenceClassification:()=>n.XLMForSequenceClassification,XLMForTokenClassification:()=>n.XLMForTokenClassification,XLMModel:()=>n.XLMModel,XLMPreTrainedModel:()=>n.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>n.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>n.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>n.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>n.XLMRobertaForTokenClassification,XLMRobertaModel:()=>n.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>n.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>p.XLMRobertaTokenizer,XLMTokenizer:()=>p.XLMTokenizer,XLMWithLMHeadModel:()=>n.XLMWithLMHeadModel,XVectorOutput:()=>n.XVectorOutput,YolosFeatureExtractor:()=>j.YolosFeatureExtractor,YolosForObjectDetection:()=>n.YolosForObjectDetection,YolosImageProcessor:()=>j.YolosImageProcessor,YolosModel:()=>n.YolosModel,YolosObjectDetectionOutput:()=>n.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>n.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>k.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>k.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>k.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>k.ZeroShotObjectDetectionPipeline,bankers_round:()=>$.bankers_round,cat:()=>z.cat,cos_sim:()=>$.cos_sim,dot:()=>$.dot,dynamic_time_warping:()=>$.dynamic_time_warping,env:()=>Te.env,full:()=>z.full,full_like:()=>z.full_like,getKeyValueShapes:()=>I.getKeyValueShapes,hamming:()=>V.hamming,hanning:()=>V.hanning,interpolate:()=>z.interpolate,interpolate_4d:()=>z.interpolate_4d,interpolate_data:()=>$.interpolate_data,is_chinese_char:()=>p.is_chinese_char,layer_norm:()=>z.layer_norm,load_image:()=>Y.load_image,log_softmax:()=>$.log_softmax,magnitude:()=>$.magnitude,matmul:()=>z.matmul,max:()=>$.max,mean:()=>z.mean,mean_pooling:()=>z.mean_pooling,medianFilter:()=>$.medianFilter,mel_filter_bank:()=>V.mel_filter_bank,min:()=>$.min,ones:()=>z.ones,ones_like:()=>z.ones_like,permute:()=>z.permute,permute_data:()=>$.permute_data,pipeline:()=>k.pipeline,quantize_embeddings:()=>z.quantize_embeddings,rand:()=>z.rand,read_audio:()=>V.read_audio,rfft:()=>z.rfft,round:()=>$.round,slice:()=>z.slice,softmax:()=>$.softmax,spectrogram:()=>V.spectrogram,stack:()=>z.stack,std_mean:()=>z.std_mean,topk:()=>z.topk,window_function:()=>V.window_function,zeros:()=>z.zeros,zeros_like:()=>z.zeros_like});var Te=Er("./src/env.js"),k=Er("./src/pipelines.js"),n=Er("./src/models.js"),p=Er("./src/tokenizers.js"),I=Er("./src/configs.js"),V=Er("./src/utils/audio.js"),Y=Er("./src/utils/image.js"),z=Er("./src/utils/tensor.js"),$=Er("./src/utils/maths.js"),y=Er("./src/base/feature_extraction_utils.js"),_=Er("./src/models/feature_extractors.js"),A=Er("./src/models/auto/feature_extraction_auto.js"),b=Er("./src/base/image_processors_utils.js"),j=Er("./src/models/image_processors.js"),re=Er("./src/models/auto/image_processing_auto.js"),se=Er("./src/base/processing_utils.js"),le=Er("./src/models/processors.js"),L=Er("./src/models/auto/processing_auto.js"),G=Er("./src/generation/streamers.js"),ie=Er("./src/generation/stopping_criteria.js"),N=Er("./src/generation/logits_process.js")})();var Hp,mf=Gi.AutoTokenizer,ff=Gi.RawAudio,_f=Gi.StyleTextToSpeech2Model,Eh=Gi.Tensor,gf=(Hp=typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:er&&er.tagName.toUpperCase()==="SCRIPT"&&er.src||new URL("kokoro.umd.js",document.baseURI).href,async function(Te={}){var k,n,p=Te;p.ready=new Promise((u,m)=>{k=u,n=m}),["_main","_memory","_fflush","___indirect_function_table","___emscripten_embedded_file_data","onRuntimeInitialized"].forEach(u=>{Object.getOwnPropertyDescriptor(p.ready,u)||Object.defineProperty(p.ready,u,{get:()=>We("You are getting "+u+" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js"),set:()=>We("You are setting "+u+" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")})});var I=Object.assign({},p),V=[],Y="./this.program",z=(u,m)=>{throw m},$=typeof window=="object",y=typeof importScripts=="function",_=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",A=!$&&!_&&!y;if(p.ENVIRONMENT)throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)");var b,j,re,se="";if(_){if(typeof process>"u"||!process.release||process.release.name!=="node")throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");var le=process.versions.node,L=le.split(".").slice(0,3);if((L=1e4*L[0]+100*L[1]+1*L[2].split("-")[0])<16e4)throw new Error("This emscripten-generated code requires node v16.0.0 (detected v"+le+")");const{createRequire:u}=await Promise.resolve().then(()=>Sf);var G=u(typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:er&&er.tagName.toUpperCase()==="SCRIPT"&&er.src||new URL("kokoro.umd.js",document.baseURI).href),ie=G("fs"),N=G("path");se=y?N.dirname(se)+"/":G("url").fileURLToPath(new URL("./",typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:er&&er.tagName.toUpperCase()==="SCRIPT"&&er.src||new URL("kokoro.umd.js",document.baseURI).href)),b=(m,T)=>(m=ht(m)?new URL(m):N.normalize(m),ie.readFileSync(m,T?void 0:"utf8")),re=m=>{var T=b(m,!0);return T.buffer||(T=new Uint8Array(T)),Ue(T.buffer),T},j=(m,T,q,_e=!0)=>{m=ht(m)?new URL(m):N.normalize(m),ie.readFile(m,_e?void 0:"utf8",(Ie,De)=>{Ie?q(Ie):T(_e?De.buffer:De)})},!p.thisProgram&&process.argv.length>1&&(Y=process.argv[1].replace(/\\/g,"/")),V=process.argv.slice(2),z=(m,T)=>{throw process.exitCode=m,T},p.inspect=()=>"[Emscripten Module object]"}else if(A){if(typeof process=="object"&&typeof G=="function"||typeof window=="object"||typeof importScripts=="function")throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");typeof read<"u"&&(b=read),re=u=>{if(typeof readbuffer=="function")return new Uint8Array(readbuffer(u));let m=read(u,"binary");return Ue(typeof m=="object"),m},j=(u,m,T)=>{setTimeout(()=>m(re(u)))},typeof clearTimeout>"u"&&(globalThis.clearTimeout=u=>{}),typeof setTimeout>"u"&&(globalThis.setTimeout=u=>typeof u=="function"?u():We()),typeof scriptArgs<"u"?V=scriptArgs:arguments!==void 0&&(V=arguments),typeof quit=="function"&&(z=(u,m)=>{throw setTimeout(()=>{if(!(m instanceof tt)){let T=m;m&&typeof m=="object"&&m.stack&&(T=[m,m.stack]),K(`exiting due to exception: ${T}`)}quit(u)}),m}),typeof print<"u"&&(typeof console>"u"&&(console={}),console.log=print,console.warn=console.error=typeof printErr<"u"?printErr:print)}else{if(!$&&!y)throw new Error("environment detection error");if(y?se=self.location.href:typeof document<"u"&&document.currentScript&&(se=document.currentScript.src),Hp&&(se=Hp),se=se.indexOf("blob:")!==0?se.substr(0,se.replace(/[?#].*/,"").lastIndexOf("/")+1):"",typeof window!="object"&&typeof importScripts!="function")throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");b=u=>{var m=new XMLHttpRequest;return m.open("GET",u,!1),m.send(null),m.responseText},y&&(re=u=>{var m=new XMLHttpRequest;return m.open("GET",u,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),j=(u,m,T)=>{var q=new XMLHttpRequest;q.open("GET",u,!0),q.responseType="arraybuffer",q.onload=()=>{q.status==200||q.status==0&&q.response?m(q.response):T()},q.onerror=T,q.send(null)}}var v,O,x,R=p.print||console.log.bind(console),K=p.printErr||console.error.bind(console);Object.assign(p,I),I=null,v="fetchSettings",Object.getOwnPropertyDescriptor(p,v)&&We(`\`Module.${v}\` was supplied but \`${v}\` not included in INCOMING_MODULE_JS_API`),p.arguments&&(V=p.arguments),ae("arguments","arguments_"),p.thisProgram&&(Y=p.thisProgram),ae("thisProgram","thisProgram"),p.quit&&(z=p.quit),ae("quit","quit_"),Ue(p.memoryInitializerPrefixURL===void 0,"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead"),Ue(p.pthreadMainPrefixURL===void 0,"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead"),Ue(p.cdInitializerPrefixURL===void 0,"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead"),Ue(p.filePackagePrefixURL===void 0,"Module.filePackagePrefixURL option was removed, use Module.locateFile instead"),Ue(p.read===void 0,"Module.read option was removed (modify read_ in JS)"),Ue(p.readAsync===void 0,"Module.readAsync option was removed (modify readAsync in JS)"),Ue(p.readBinary===void 0,"Module.readBinary option was removed (modify readBinary in JS)"),Ue(p.setWindowTitle===void 0,"Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)"),Ue(p.TOTAL_MEMORY===void 0,"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY"),ae("asm","wasmExports"),ae("read","read_"),ae("readAsync","readAsync"),ae("readBinary","readBinary"),ae("setWindowTitle","setWindowTitle"),Ue(!A,"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable."),p.wasmBinary&&(O=p.wasmBinary),ae("wasmBinary","wasmBinary"),typeof WebAssembly!="object"&&We("no native wasm support detected");var fe,de,ge,Ae,we,Se,Re=!1;function Ue(u,m){u||We("Assertion failed"+(m?": "+m:""))}function dt(){if(!Re){var u=Jn();u==0&&(u+=4);var m=Se[u>>2],T=Se[u+4>>2];m==34821223&&T==2310721022||We(`Stack overflow! Stack cookie has been overwritten at ${ct(u)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${ct(T)} ${ct(m)}`),Se[0]!=1668509029&&We("Runtime error: The application has corrupted its heap memory area (address zero)!")}}Ue(!p.STACK_SIZE,"STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time"),Ue(typeof Int32Array<"u"&&typeof Float64Array<"u"&&Int32Array.prototype.subarray!=null&&Int32Array.prototype.set!=null,"JS engine does not provide full typed array support"),Ue(!p.wasmMemory,"Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally"),Ue(!p.INITIAL_MEMORY,"Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically"),function(){var u=new Int16Array(1),m=new Int8Array(u.buffer);if(u[0]=25459,m[0]!==115||m[1]!==99)throw"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)"}();var oe=[],Z=[],pe=[],Ee=[],qe=!1;Ue(Math.imul,"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),Ue(Math.fround,"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),Ue(Math.clz32,"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),Ue(Math.trunc,"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");var xe=0,je=null,He=null,at={};function Je(u){for(var m=u;;){if(!at[u])return u;u=m+Math.random()}}function be(u){xe++,p.monitorRunDependencies&&p.monitorRunDependencies(xe),u?(Ue(!at[u]),at[u]=1,je===null&&typeof setInterval<"u"&&(je=setInterval(()=>{if(Re)return clearInterval(je),void(je=null);var m=!1;for(var T in at)m||(m=!0,K("still waiting on run dependencies:")),K(`dependency: ${T}`);m&&K("(end of list)")},1e4))):K("warning: run dependency added without ID")}function Ce(u){if(xe--,p.monitorRunDependencies&&p.monitorRunDependencies(xe),u?(Ue(at[u]),delete at[u]):K("warning: run dependency removed without ID"),xe==0&&(je!==null&&(clearInterval(je),je=null),He)){var m=He;He=null,m()}}function We(u){p.onAbort&&p.onAbort(u),K(u="Aborted("+u+")"),Re=!0,fe=1;var m=new WebAssembly.RuntimeError(u);throw n(m),m}var et,ue,Be,nt,ft=u=>u.startsWith("data:application/octet-stream;base64,"),ht=u=>u.startsWith("file://");function gt(u){return function(){Ue(qe,`native function \`${u}\` called before runtime initialization`);var m=fn[u];return Ue(m,`exported native function \`${u}\` not found`),m.apply(null,arguments)}}function yt(u){if(u==et&&O)return new Uint8Array(O);if(re)return re(u);throw"both async and sync fetching of the wasm failed"}function U(u,m,T){return function(q){if(!O&&($||y)){if(typeof fetch=="function"&&!ht(q))return fetch(q,{credentials:"same-origin"}).then(_e=>{if(!_e.ok)throw"failed to load wasm binary file at '"+q+"'";return _e.arrayBuffer()}).catch(()=>yt(q));if(j)return new Promise((_e,Ie)=>{j(q,De=>_e(new Uint8Array(De)),Ie)})}return Promise.resolve().then(()=>yt(q))}(u).then(q=>WebAssembly.instantiate(q,m)).then(q=>q).then(T,q=>{K(`failed to asynchronously prepare wasm: ${q}`),ht(et)&&K(`warning: Loading from a file URI (${et}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`),We(q)})}function ae(u,m,T=!0){Object.getOwnPropertyDescriptor(p,u)||Object.defineProperty(p,u,{configurable:!0,get(){We(`\`Module.${u}\` has been replaced by \`${m}\``+(T?" (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)":""))}})}function H(u){return u==="FS_createPath"||u==="FS_createDataFile"||u==="FS_createPreloadedFile"||u==="FS_unlink"||u==="addRunDependency"||u==="FS_createLazyFile"||u==="FS_createDevice"||u==="removeRunDependency"}function me(u,m){typeof globalThis<"u"&&Object.defineProperty(globalThis,u,{configurable:!0,get(){$t(`\`${u}\` is not longer defined by emscripten. ${m}`)}})}function Oe(u){Object.getOwnPropertyDescriptor(p,u)||Object.defineProperty(p,u,{configurable:!0,get(){var m=`'${u}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;H(u)&&(m+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"),We(m)}})}function tt(u){this.name="ExitStatus",this.message=`Program terminated with exit(${u})`,this.status=u}p.locateFile?ft(et="espeak-ng.wasm")||(ue=et,et=p.locateFile?p.locateFile(ue,se):se+ue):et=new URL("espeak-ng.wasm",typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:er&&er.tagName.toUpperCase()==="SCRIPT"&&er.src||new URL("kokoro.umd.js",document.baseURI).href).href,me("buffer","Please use HEAP8.buffer or wasmMemory.buffer"),me("asm","Please use wasmExports instead");var Ze=u=>{for(;u.length>0;)u.shift()(p)};p.noExitRuntime;var ct=u=>(Ue(typeof u=="number"),"0x"+(u>>>=0).toString(16).padStart(8,"0")),$t=u=>{$t.shown||($t.shown={}),$t.shown[u]||($t.shown[u]=1,_&&(u="warning: "+u),K(u))},mt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,It=(u,m,T)=>{for(var q=m+T,_e=m;u[_e]&&!(_e>=q);)++_e;if(_e-m>16&&u.buffer&&mt)return mt.decode(u.subarray(m,_e));for(var Ie="";m<_e;){var De=u[m++];if(128&De){var Ke=63&u[m++];if((224&De)!=192){var kt=63&u[m++];if((240&De)==224?De=(15&De)<<12|Ke<<6|kt:((248&De)!=240&&$t("Invalid UTF-8 leading byte "+ct(De)+" encountered when deserializing a UTF-8 string in wasm memory to a JS string!"),De=(7&De)<<18|Ke<<12|kt<<6|63&u[m++]),De<65536)Ie+=String.fromCharCode(De);else{var Dt=De-65536;Ie+=String.fromCharCode(55296|Dt>>10,56320|1023&Dt)}}else Ie+=String.fromCharCode((31&De)<<6|Ke)}else Ie+=String.fromCharCode(De)}return Ie},Ft=(u,m)=>(Ue(typeof u=="number",`UTF8ToString expects a number (got ${typeof u})`),u?It(ge,u,m):""),Rt={isAbs:u=>u.charAt(0)==="/",splitPath:u=>/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(u).slice(1),normalizeArray:(u,m)=>{for(var T=0,q=u.length-1;q>=0;q--){var _e=u[q];_e==="."?u.splice(q,1):_e===".."?(u.splice(q,1),T++):T&&(u.splice(q,1),T--)}if(m)for(;T;T--)u.unshift("..");return u},normalize:u=>{var m=Rt.isAbs(u),T=u.substr(-1)==="/";return(u=Rt.normalizeArray(u.split("/").filter(q=>!!q),!m).join("/"))||m||(u="."),u&&T&&(u+="/"),(m?"/":"")+u},dirname:u=>{var m=Rt.splitPath(u),T=m[0],q=m[1];return T||q?(q&&(q=q.substr(0,q.length-1)),T+q):"."},basename:u=>{if(u==="/")return"/";var m=(u=(u=Rt.normalize(u)).replace(/\/$/,"")).lastIndexOf("/");return m===-1?u:u.substr(m+1)},join:function(){var u=Array.prototype.slice.call(arguments);return Rt.normalize(u.join("/"))},join2:(u,m)=>Rt.normalize(u+"/"+m)},_r=u=>(_r=(()=>{if(typeof crypto=="object"&&typeof crypto.getRandomValues=="function")return q=>crypto.getRandomValues(q);if(_)try{var m=G("crypto");if(m.randomFillSync)return q=>m.randomFillSync(q);var T=m.randomBytes;return q=>(q.set(T(q.byteLength)),q)}catch{}We("no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: (array) => { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };")})())(u),yr={resolve:function(){for(var u="",m=!1,T=arguments.length-1;T>=-1&&!m;T--){var q=T>=0?arguments[T]:F.cwd();if(typeof q!="string")throw new TypeError("Arguments to path.resolve must be strings");if(!q)return"";u=q+"/"+u,m=Rt.isAbs(q)}return(m?"/":"")+(u=Rt.normalizeArray(u.split("/").filter(_e=>!!_e),!m).join("/"))||"."},relative:(u,m)=>{function T(Dt){for(var tr=0;tr<Dt.length&&Dt[tr]==="";tr++);for(var wt=Dt.length-1;wt>=0&&Dt[wt]==="";wt--);return tr>wt?[]:Dt.slice(tr,wt-tr+1)}u=yr.resolve(u).substr(1),m=yr.resolve(m).substr(1);for(var q=T(u.split("/")),_e=T(m.split("/")),Ie=Math.min(q.length,_e.length),De=Ie,Ke=0;Ke<Ie;Ke++)if(q[Ke]!==_e[Ke]){De=Ke;break}var kt=[];for(Ke=De;Ke<q.length;Ke++)kt.push("..");return(kt=kt.concat(_e.slice(De))).join("/")}},Dr=[],Gr=u=>{for(var m=0,T=0;T<u.length;++T){var q=u.charCodeAt(T);q<=127?m++:q<=2047?m+=2:q>=55296&&q<=57343?(m+=4,++T):m+=3}return m},hn=(u,m,T,q)=>{if(Ue(typeof u=="string",`stringToUTF8Array expects a string (got ${typeof u})`),!(q>0))return 0;for(var _e=T,Ie=T+q-1,De=0;De<u.length;++De){var Ke=u.charCodeAt(De);if(Ke>=55296&&Ke<=57343&&(Ke=65536+((1023&Ke)<<10)|1023&u.charCodeAt(++De)),Ke<=127){if(T>=Ie)break;m[T++]=Ke}else if(Ke<=2047){if(T+1>=Ie)break;m[T++]=192|Ke>>6,m[T++]=128|63&Ke}else if(Ke<=65535){if(T+2>=Ie)break;m[T++]=224|Ke>>12,m[T++]=128|Ke>>6&63,m[T++]=128|63&Ke}else{if(T+3>=Ie)break;Ke>1114111&&$t("Invalid Unicode code point "+ct(Ke)+" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF)."),m[T++]=240|Ke>>18,m[T++]=128|Ke>>12&63,m[T++]=128|Ke>>6&63,m[T++]=128|63&Ke}}return m[T]=0,T-_e};function Gt(u,m,T){var q=Gr(u)+1,_e=new Array(q),Ie=hn(u,_e,0,_e.length);return _e.length=Ie,_e}var Dn,sn={ttys:[],init(){},shutdown(){},register(u,m){sn.ttys[u]={input:[],output:[],ops:m},F.registerDevice(u,sn.stream_ops)},stream_ops:{open(u){var m=sn.ttys[u.node.rdev];if(!m)throw new F.ErrnoError(43);u.tty=m,u.seekable=!1},close(u){u.tty.ops.fsync(u.tty)},fsync(u){u.tty.ops.fsync(u.tty)},read(u,m,T,q,_e){if(!u.tty||!u.tty.ops.get_char)throw new F.ErrnoError(60);for(var Ie=0,De=0;De<q;De++){var Ke;try{Ke=u.tty.ops.get_char(u.tty)}catch{throw new F.ErrnoError(29)}if(Ke===void 0&&Ie===0)throw new F.ErrnoError(6);if(Ke==null)break;Ie++,m[T+De]=Ke}return Ie&&(u.node.timestamp=Date.now()),Ie},write(u,m,T,q,_e){if(!u.tty||!u.tty.ops.put_char)throw new F.ErrnoError(60);try{for(var Ie=0;Ie<q;Ie++)u.tty.ops.put_char(u.tty,m[T+Ie])}catch{throw new F.ErrnoError(29)}return q&&(u.node.timestamp=Date.now()),Ie}},default_tty_ops:{get_char:u=>(()=>{if(!Dr.length){var m=null;if(_){var T=Buffer.alloc(256),q=0,_e=process.stdin.fd;try{q=ie.readSync(_e,T)}catch(Ie){if(!Ie.toString().includes("EOF"))throw Ie;q=0}m=q>0?T.slice(0,q).toString("utf-8"):null}else typeof window<"u"&&typeof window.prompt=="function"?(m=window.prompt("Input: "))!==null&&(m+=`
`):typeof readline=="function"&&(m=readline())!==null&&(m+=`
`);if(!m)return null;Dr=Gt(m)}return Dr.shift()})(),put_char(u,m){m===null||m===10?(R(It(u.output,0)),u.output=[]):m!=0&&u.output.push(m)},fsync(u){u.output&&u.output.length>0&&(R(It(u.output,0)),u.output=[])},ioctl_tcgets:u=>({c_iflag:25856,c_oflag:5,c_cflag:191,c_lflag:35387,c_cc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}),ioctl_tcsets:(u,m,T)=>0,ioctl_tiocgwinsz:u=>[24,80]},default_tty1_ops:{put_char(u,m){m===null||m===10?(K(It(u.output,0)),u.output=[]):m!=0&&u.output.push(m)},fsync(u){u.output&&u.output.length>0&&(K(It(u.output,0)),u.output=[])}}},an=u=>{We("internal error: mmapAlloc called but `emscripten_builtin_memalign` native symbol not exported")},it={ops_table:null,mount:u=>it.createNode(null,"/",16895,0),createNode(u,m,T,q){if(F.isBlkdev(T)||F.isFIFO(T))throw new F.ErrnoError(63);it.ops_table||(it.ops_table={dir:{node:{getattr:it.node_ops.getattr,setattr:it.node_ops.setattr,lookup:it.node_ops.lookup,mknod:it.node_ops.mknod,rename:it.node_ops.rename,unlink:it.node_ops.unlink,rmdir:it.node_ops.rmdir,readdir:it.node_ops.readdir,symlink:it.node_ops.symlink},stream:{llseek:it.stream_ops.llseek}},file:{node:{getattr:it.node_ops.getattr,setattr:it.node_ops.setattr},stream:{llseek:it.stream_ops.llseek,read:it.stream_ops.read,write:it.stream_ops.write,allocate:it.stream_ops.allocate,mmap:it.stream_ops.mmap,msync:it.stream_ops.msync}},link:{node:{getattr:it.node_ops.getattr,setattr:it.node_ops.setattr,readlink:it.node_ops.readlink},stream:{}},chrdev:{node:{getattr:it.node_ops.getattr,setattr:it.node_ops.setattr},stream:F.chrdev_stream_ops}});var _e=F.createNode(u,m,T,q);return F.isDir(_e.mode)?(_e.node_ops=it.ops_table.dir.node,_e.stream_ops=it.ops_table.dir.stream,_e.contents={}):F.isFile(_e.mode)?(_e.node_ops=it.ops_table.file.node,_e.stream_ops=it.ops_table.file.stream,_e.usedBytes=0,_e.contents=null):F.isLink(_e.mode)?(_e.node_ops=it.ops_table.link.node,_e.stream_ops=it.ops_table.link.stream):F.isChrdev(_e.mode)&&(_e.node_ops=it.ops_table.chrdev.node,_e.stream_ops=it.ops_table.chrdev.stream),_e.timestamp=Date.now(),u&&(u.contents[m]=_e,u.timestamp=_e.timestamp),_e},getFileDataAsTypedArray:u=>u.contents?u.contents.subarray?u.contents.subarray(0,u.usedBytes):new Uint8Array(u.contents):new Uint8Array(0),expandFileStorage(u,m){var T=u.contents?u.contents.length:0;if(!(T>=m)){m=Math.max(m,T*(T<1048576?2:1.125)>>>0),T!=0&&(m=Math.max(m,256));var q=u.contents;u.contents=new Uint8Array(m),u.usedBytes>0&&u.contents.set(q.subarray(0,u.usedBytes),0)}},resizeFileStorage(u,m){if(u.usedBytes!=m)if(m==0)u.contents=null,u.usedBytes=0;else{var T=u.contents;u.contents=new Uint8Array(m),T&&u.contents.set(T.subarray(0,Math.min(m,u.usedBytes))),u.usedBytes=m}},node_ops:{getattr(u){var m={};return m.dev=F.isChrdev(u.mode)?u.id:1,m.ino=u.id,m.mode=u.mode,m.nlink=1,m.uid=0,m.gid=0,m.rdev=u.rdev,F.isDir(u.mode)?m.size=4096:F.isFile(u.mode)?m.size=u.usedBytes:F.isLink(u.mode)?m.size=u.link.length:m.size=0,m.atime=new Date(u.timestamp),m.mtime=new Date(u.timestamp),m.ctime=new Date(u.timestamp),m.blksize=4096,m.blocks=Math.ceil(m.size/m.blksize),m},setattr(u,m){m.mode!==void 0&&(u.mode=m.mode),m.timestamp!==void 0&&(u.timestamp=m.timestamp),m.size!==void 0&&it.resizeFileStorage(u,m.size)},lookup(u,m){throw F.genericErrors[44]},mknod:(u,m,T,q)=>it.createNode(u,m,T,q),rename(u,m,T){if(F.isDir(u.mode)){var q;try{q=F.lookupNode(m,T)}catch{}if(q)for(var _e in q.contents)throw new F.ErrnoError(55)}delete u.parent.contents[u.name],u.parent.timestamp=Date.now(),u.name=T,m.contents[T]=u,m.timestamp=u.parent.timestamp,u.parent=m},unlink(u,m){delete u.contents[m],u.timestamp=Date.now()},rmdir(u,m){var T=F.lookupNode(u,m);for(var q in T.contents)throw new F.ErrnoError(55);delete u.contents[m],u.timestamp=Date.now()},readdir(u){var m=[".",".."];for(var T in u.contents)u.contents.hasOwnProperty(T)&&m.push(T);return m},symlink(u,m,T){var q=it.createNode(u,m,41471,0);return q.link=T,q},readlink(u){if(!F.isLink(u.mode))throw new F.ErrnoError(28);return u.link}},stream_ops:{read(u,m,T,q,_e){var Ie=u.node.contents;if(_e>=u.node.usedBytes)return 0;var De=Math.min(u.node.usedBytes-_e,q);if(Ue(De>=0),De>8&&Ie.subarray)m.set(Ie.subarray(_e,_e+De),T);else for(var Ke=0;Ke<De;Ke++)m[T+Ke]=Ie[_e+Ke];return De},write(u,m,T,q,_e,Ie){if(Ue(!(m instanceof ArrayBuffer)),!q)return 0;var De=u.node;if(De.timestamp=Date.now(),m.subarray&&(!De.contents||De.contents.subarray)){if(Ie)return Ue(_e===0,"canOwn must imply no weird position inside the file"),De.contents=m.subarray(T,T+q),De.usedBytes=q,q;if(De.usedBytes===0&&_e===0)return De.contents=m.slice(T,T+q),De.usedBytes=q,q;if(_e+q<=De.usedBytes)return De.contents.set(m.subarray(T,T+q),_e),q}if(it.expandFileStorage(De,_e+q),De.contents.subarray&&m.subarray)De.contents.set(m.subarray(T,T+q),_e);else for(var Ke=0;Ke<q;Ke++)De.contents[_e+Ke]=m[T+Ke];return De.usedBytes=Math.max(De.usedBytes,_e+q),q},llseek(u,m,T){var q=m;if(T===1?q+=u.position:T===2&&F.isFile(u.node.mode)&&(q+=u.node.usedBytes),q<0)throw new F.ErrnoError(28);return q},allocate(u,m,T){it.expandFileStorage(u.node,m+T),u.node.usedBytes=Math.max(u.node.usedBytes,m+T)},mmap(u,m,T,q,_e){if(!F.isFile(u.node.mode))throw new F.ErrnoError(43);var Ie,De,Ke=u.node.contents;if(2&_e||Ke.buffer!==de.buffer){if((T>0||T+m<Ke.length)&&(Ke=Ke.subarray?Ke.subarray(T,T+m):Array.prototype.slice.call(Ke,T,T+m)),De=!0,!(Ie=an()))throw new F.ErrnoError(48);de.set(Ke,Ie)}else De=!1,Ie=Ke.byteOffset;return{ptr:Ie,allocated:De}},msync:(u,m,T,q,_e)=>(it.stream_ops.write(u,m,0,q,T,!1),0)}},St=p.preloadPlugins||[],Bt=(u,m)=>{var T=0;return u&&(T|=365),m&&(T|=146),T},Ir={0:"Success",1:"Arg list too long",2:"Permission denied",3:"Address already in use",4:"Address not available",5:"Address family not supported by protocol family",6:"No more processes",7:"Socket already connected",8:"Bad file number",9:"Trying to read unreadable message",10:"Mount device busy",11:"Operation canceled",12:"No children",13:"Connection aborted",14:"Connection refused",15:"Connection reset by peer",16:"File locking deadlock error",17:"Destination address required",18:"Math arg out of domain of func",19:"Quota exceeded",20:"File exists",21:"Bad address",22:"File too large",23:"Host is unreachable",24:"Identifier removed",25:"Illegal byte sequence",26:"Connection already in progress",27:"Interrupted system call",28:"Invalid argument",29:"I/O error",30:"Socket is already connected",31:"Is a directory",32:"Too many symbolic links",33:"Too many open files",34:"Too many links",35:"Message too long",36:"Multihop attempted",37:"File or path name too long",38:"Network interface is not configured",39:"Connection reset by network",40:"Network is unreachable",41:"Too many open files in system",42:"No buffer space available",43:"No such device",44:"No such file or directory",45:"Exec format error",46:"No record locks available",47:"The link has been severed",48:"Not enough core",49:"No message of desired type",50:"Protocol not available",51:"No space left on device",52:"Function not implemented",53:"Socket is not connected",54:"Not a directory",55:"Directory not empty",56:"State not recoverable",57:"Socket operation on non-socket",59:"Not a typewriter",60:"No such device or address",61:"Value too large for defined data type",62:"Previous owner died",63:"Not super-user",64:"Broken pipe",65:"Protocol error",66:"Unknown protocol",67:"Protocol wrong type for socket",68:"Math result not representable",69:"Read only file system",70:"Illegal seek",71:"No such process",72:"Stale file handle",73:"Connection timed out",74:"Text file busy",75:"Cross-device link",100:"Device not a stream",101:"Bad font file fmt",102:"Invalid slot",103:"Invalid request code",104:"No anode",105:"Block device required",106:"Channel number out of range",107:"Level 3 halted",108:"Level 3 reset",109:"Link number out of range",110:"Protocol driver not attached",111:"No CSI structure available",112:"Level 2 halted",113:"Invalid exchange",114:"Invalid request descriptor",115:"Exchange full",116:"No data (for no delay io)",117:"Timer expired",118:"Out of streams resources",119:"Machine is not on the network",120:"Package not installed",121:"The object is remote",122:"Advertise error",123:"Srmount error",124:"Communication error on send",125:"Cross mount point (not really error)",126:"Given log. name not unique",127:"f.d. invalid for this operation",128:"Remote address changed",129:"Can   access a needed shared lib",130:"Accessing a corrupted shared lib",131:".lib section in a.out corrupted",132:"Attempting to link in too many libs",133:"Attempting to exec a shared library",135:"Streams pipe error",136:"Too many users",137:"Socket type not supported",138:"Not supported",139:"Protocol family not supported",140:"Can't send after socket shutdown",141:"Too many references",142:"Host is down",148:"No medium (in tape drive)",156:"Level 2 not synchronized"},Mn={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135},gn=u=>u.replace(/\b_Z[\w\d_]+/g,function(m){var T,q=(T=m,$t("warning: build with -sDEMANGLE_SUPPORT to link in libcxxabi demangling"),T);return m===q?m:q+" ["+m+"]"}),F={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath(u,m={}){if(!(u=yr.resolve(u)))return{path:"",node:null};if((m=Object.assign({follow_mount:!0,recurse_count:0},m)).recurse_count>8)throw new F.ErrnoError(32);for(var T=u.split("/").filter(Dt=>!!Dt),q=F.root,_e="/",Ie=0;Ie<T.length;Ie++){var De=Ie===T.length-1;if(De&&m.parent)break;if(q=F.lookupNode(q,T[Ie]),_e=Rt.join2(_e,T[Ie]),F.isMountpoint(q)&&(!De||De&&m.follow_mount)&&(q=q.mounted.root),!De||m.follow)for(var Ke=0;F.isLink(q.mode);){var kt=F.readlink(_e);if(_e=yr.resolve(Rt.dirname(_e),kt),q=F.lookupPath(_e,{recurse_count:m.recurse_count+1}).node,Ke++>40)throw new F.ErrnoError(32)}}return{path:_e,node:q}},getPath(u){for(var m;;){if(F.isRoot(u)){var T=u.mount.mountpoint;return m?T[T.length-1]!=="/"?`${T}/${m}`:T+m:T}m=m?`${u.name}/${m}`:u.name,u=u.parent}},hashName(u,m){for(var T=0,q=0;q<m.length;q++)T=(T<<5)-T+m.charCodeAt(q)|0;return(u+T>>>0)%F.nameTable.length},hashAddNode(u){var m=F.hashName(u.parent.id,u.name);u.name_next=F.nameTable[m],F.nameTable[m]=u},hashRemoveNode(u){var m=F.hashName(u.parent.id,u.name);if(F.nameTable[m]===u)F.nameTable[m]=u.name_next;else for(var T=F.nameTable[m];T;){if(T.name_next===u){T.name_next=u.name_next;break}T=T.name_next}},lookupNode(u,m){var T=F.mayLookup(u);if(T)throw new F.ErrnoError(T,u);for(var q=F.hashName(u.id,m),_e=F.nameTable[q];_e;_e=_e.name_next){var Ie=_e.name;if(_e.parent.id===u.id&&Ie===m)return _e}return F.lookup(u,m)},createNode(u,m,T,q){Ue(typeof u=="object");var _e=new F.FSNode(u,m,T,q);return F.hashAddNode(_e),_e},destroyNode(u){F.hashRemoveNode(u)},isRoot:u=>u===u.parent,isMountpoint:u=>!!u.mounted,isFile:u=>(61440&u)==32768,isDir:u=>(61440&u)==16384,isLink:u=>(61440&u)==40960,isChrdev:u=>(61440&u)==8192,isBlkdev:u=>(61440&u)==24576,isFIFO:u=>(61440&u)==4096,isSocket:u=>!(49152&~u),flagsToPermissionString(u){var m=["r","w","rw"][3&u];return 512&u&&(m+="w"),m},nodePermissions:(u,m)=>F.ignorePermissions||(!m.includes("r")||292&u.mode)&&(!m.includes("w")||146&u.mode)&&(!m.includes("x")||73&u.mode)?0:2,mayLookup(u){var m=F.nodePermissions(u,"x");return m||(u.node_ops.lookup?0:2)},mayCreate(u,m){try{return F.lookupNode(u,m),20}catch{}return F.nodePermissions(u,"wx")},mayDelete(u,m,T){var q;try{q=F.lookupNode(u,m)}catch(Ie){return Ie.errno}var _e=F.nodePermissions(u,"wx");if(_e)return _e;if(T){if(!F.isDir(q.mode))return 54;if(F.isRoot(q)||F.getPath(q)===F.cwd())return 10}else if(F.isDir(q.mode))return 31;return 0},mayOpen:(u,m)=>u?F.isLink(u.mode)?32:F.isDir(u.mode)&&(F.flagsToPermissionString(m)!=="r"||512&m)?31:F.nodePermissions(u,F.flagsToPermissionString(m)):44,MAX_OPEN_FDS:4096,nextfd(){for(var u=0;u<=F.MAX_OPEN_FDS;u++)if(!F.streams[u])return u;throw new F.ErrnoError(33)},getStreamChecked(u){var m=F.getStream(u);if(!m)throw new F.ErrnoError(8);return m},getStream:u=>F.streams[u],createStream:(u,m=-1)=>(F.FSStream||(F.FSStream=function(){this.shared={}},F.FSStream.prototype={},Object.defineProperties(F.FSStream.prototype,{object:{get(){return this.node},set(T){this.node=T}},isRead:{get(){return(2097155&this.flags)!=1}},isWrite:{get(){return!!(2097155&this.flags)}},isAppend:{get(){return 1024&this.flags}},flags:{get(){return this.shared.flags},set(T){this.shared.flags=T}},position:{get(){return this.shared.position},set(T){this.shared.position=T}}})),u=Object.assign(new F.FSStream,u),m==-1&&(m=F.nextfd()),u.fd=m,F.streams[m]=u,u),closeStream(u){F.streams[u]=null},chrdev_stream_ops:{open(u){var m=F.getDevice(u.node.rdev);u.stream_ops=m.stream_ops,u.stream_ops.open&&u.stream_ops.open(u)},llseek(){throw new F.ErrnoError(70)}},major:u=>u>>8,minor:u=>255&u,makedev:(u,m)=>u<<8|m,registerDevice(u,m){F.devices[u]={stream_ops:m}},getDevice:u=>F.devices[u],getMounts(u){for(var m=[],T=[u];T.length;){var q=T.pop();m.push(q),T.push.apply(T,q.mounts)}return m},syncfs(u,m){typeof u=="function"&&(m=u,u=!1),F.syncFSRequests++,F.syncFSRequests>1&&K(`warning: ${F.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);var T=F.getMounts(F.root.mount),q=0;function _e(De){return Ue(F.syncFSRequests>0),F.syncFSRequests--,m(De)}function Ie(De){if(De)return Ie.errored?void 0:(Ie.errored=!0,_e(De));++q>=T.length&&_e(null)}T.forEach(De=>{if(!De.type.syncfs)return Ie(null);De.type.syncfs(De,u,Ie)})},mount(u,m,T){if(typeof u=="string")throw u;var q,_e=T==="/",Ie=!T;if(_e&&F.root)throw new F.ErrnoError(10);if(!_e&&!Ie){var De=F.lookupPath(T,{follow_mount:!1});if(T=De.path,q=De.node,F.isMountpoint(q))throw new F.ErrnoError(10);if(!F.isDir(q.mode))throw new F.ErrnoError(54)}var Ke={type:u,opts:m,mountpoint:T,mounts:[]},kt=u.mount(Ke);return kt.mount=Ke,Ke.root=kt,_e?F.root=kt:q&&(q.mounted=Ke,q.mount&&q.mount.mounts.push(Ke)),kt},unmount(u){var m=F.lookupPath(u,{follow_mount:!1});if(!F.isMountpoint(m.node))throw new F.ErrnoError(28);var T=m.node,q=T.mounted,_e=F.getMounts(q);Object.keys(F.nameTable).forEach(De=>{for(var Ke=F.nameTable[De];Ke;){var kt=Ke.name_next;_e.includes(Ke.mount)&&F.destroyNode(Ke),Ke=kt}}),T.mounted=null;var Ie=T.mount.mounts.indexOf(q);Ue(Ie!==-1),T.mount.mounts.splice(Ie,1)},lookup:(u,m)=>u.node_ops.lookup(u,m),mknod(u,m,T){var q=F.lookupPath(u,{parent:!0}).node,_e=Rt.basename(u);if(!_e||_e==="."||_e==="..")throw new F.ErrnoError(28);var Ie=F.mayCreate(q,_e);if(Ie)throw new F.ErrnoError(Ie);if(!q.node_ops.mknod)throw new F.ErrnoError(63);return q.node_ops.mknod(q,_e,m,T)},create:(u,m)=>(m=m!==void 0?m:438,m&=4095,m|=32768,F.mknod(u,m,0)),mkdir:(u,m)=>(m=m!==void 0?m:511,m&=1023,m|=16384,F.mknod(u,m,0)),mkdirTree(u,m){for(var T=u.split("/"),q="",_e=0;_e<T.length;++_e)if(T[_e]){q+="/"+T[_e];try{F.mkdir(q,m)}catch(Ie){if(Ie.errno!=20)throw Ie}}},mkdev:(u,m,T)=>(T===void 0&&(T=m,m=438),m|=8192,F.mknod(u,m,T)),symlink(u,m){if(!yr.resolve(u))throw new F.ErrnoError(44);var T=F.lookupPath(m,{parent:!0}).node;if(!T)throw new F.ErrnoError(44);var q=Rt.basename(m),_e=F.mayCreate(T,q);if(_e)throw new F.ErrnoError(_e);if(!T.node_ops.symlink)throw new F.ErrnoError(63);return T.node_ops.symlink(T,q,u)},rename(u,m){var T,q,_e=Rt.dirname(u),Ie=Rt.dirname(m),De=Rt.basename(u),Ke=Rt.basename(m);if(T=F.lookupPath(u,{parent:!0}).node,q=F.lookupPath(m,{parent:!0}).node,!T||!q)throw new F.ErrnoError(44);if(T.mount!==q.mount)throw new F.ErrnoError(75);var kt,Dt=F.lookupNode(T,De),tr=yr.relative(u,Ie);if(tr.charAt(0)!==".")throw new F.ErrnoError(28);if((tr=yr.relative(m,_e)).charAt(0)!==".")throw new F.ErrnoError(55);try{kt=F.lookupNode(q,Ke)}catch{}if(Dt!==kt){var wt=F.isDir(Dt.mode),Qt=F.mayDelete(T,De,wt);if(Qt)throw new F.ErrnoError(Qt);if(Qt=kt?F.mayDelete(q,Ke,wt):F.mayCreate(q,Ke))throw new F.ErrnoError(Qt);if(!T.node_ops.rename)throw new F.ErrnoError(63);if(F.isMountpoint(Dt)||kt&&F.isMountpoint(kt))throw new F.ErrnoError(10);if(q!==T&&(Qt=F.nodePermissions(T,"w")))throw new F.ErrnoError(Qt);F.hashRemoveNode(Dt);try{T.node_ops.rename(Dt,q,Ke)}catch(Xt){throw Xt}finally{F.hashAddNode(Dt)}}},rmdir(u){var m=F.lookupPath(u,{parent:!0}).node,T=Rt.basename(u),q=F.lookupNode(m,T),_e=F.mayDelete(m,T,!0);if(_e)throw new F.ErrnoError(_e);if(!m.node_ops.rmdir)throw new F.ErrnoError(63);if(F.isMountpoint(q))throw new F.ErrnoError(10);m.node_ops.rmdir(m,T),F.destroyNode(q)},readdir(u){var m=F.lookupPath(u,{follow:!0}).node;if(!m.node_ops.readdir)throw new F.ErrnoError(54);return m.node_ops.readdir(m)},unlink(u){var m=F.lookupPath(u,{parent:!0}).node;if(!m)throw new F.ErrnoError(44);var T=Rt.basename(u),q=F.lookupNode(m,T),_e=F.mayDelete(m,T,!1);if(_e)throw new F.ErrnoError(_e);if(!m.node_ops.unlink)throw new F.ErrnoError(63);if(F.isMountpoint(q))throw new F.ErrnoError(10);m.node_ops.unlink(m,T),F.destroyNode(q)},readlink(u){var m=F.lookupPath(u).node;if(!m)throw new F.ErrnoError(44);if(!m.node_ops.readlink)throw new F.ErrnoError(28);return yr.resolve(F.getPath(m.parent),m.node_ops.readlink(m))},stat(u,m){var T=F.lookupPath(u,{follow:!m}).node;if(!T)throw new F.ErrnoError(44);if(!T.node_ops.getattr)throw new F.ErrnoError(63);return T.node_ops.getattr(T)},lstat:u=>F.stat(u,!0),chmod(u,m,T){var q;if(!(q=typeof u=="string"?F.lookupPath(u,{follow:!T}).node:u).node_ops.setattr)throw new F.ErrnoError(63);q.node_ops.setattr(q,{mode:4095&m|-4096&q.mode,timestamp:Date.now()})},lchmod(u,m){F.chmod(u,m,!0)},fchmod(u,m){var T=F.getStreamChecked(u);F.chmod(T.node,m)},chown(u,m,T,q){var _e;if(!(_e=typeof u=="string"?F.lookupPath(u,{follow:!q}).node:u).node_ops.setattr)throw new F.ErrnoError(63);_e.node_ops.setattr(_e,{timestamp:Date.now()})},lchown(u,m,T){F.chown(u,m,T,!0)},fchown(u,m,T){var q=F.getStreamChecked(u);F.chown(q.node,m,T)},truncate(u,m){if(m<0)throw new F.ErrnoError(28);var T;if(!(T=typeof u=="string"?F.lookupPath(u,{follow:!0}).node:u).node_ops.setattr)throw new F.ErrnoError(63);if(F.isDir(T.mode))throw new F.ErrnoError(31);if(!F.isFile(T.mode))throw new F.ErrnoError(28);var q=F.nodePermissions(T,"w");if(q)throw new F.ErrnoError(q);T.node_ops.setattr(T,{size:m,timestamp:Date.now()})},ftruncate(u,m){var T=F.getStreamChecked(u);if(!(2097155&T.flags))throw new F.ErrnoError(28);F.truncate(T.node,m)},utime(u,m,T){var q=F.lookupPath(u,{follow:!0}).node;q.node_ops.setattr(q,{timestamp:Math.max(m,T)})},open(u,m,T){if(u==="")throw new F.ErrnoError(44);var q;if(T=T===void 0?438:T,T=64&(m=typeof m=="string"?(Ke=>{var kt={r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090}[Ke];if(kt===void 0)throw new Error(`Unknown file open mode: ${Ke}`);return kt})(m):m)?4095&T|32768:0,typeof u=="object")q=u;else{u=Rt.normalize(u);try{q=F.lookupPath(u,{follow:!(131072&m)}).node}catch{}}var _e=!1;if(64&m)if(q){if(128&m)throw new F.ErrnoError(20)}else q=F.mknod(u,T,0),_e=!0;if(!q)throw new F.ErrnoError(44);if(F.isChrdev(q.mode)&&(m&=-513),65536&m&&!F.isDir(q.mode))throw new F.ErrnoError(54);if(!_e){var Ie=F.mayOpen(q,m);if(Ie)throw new F.ErrnoError(Ie)}512&m&&!_e&&F.truncate(q,0),m&=-131713;var De=F.createStream({node:q,path:F.getPath(q),flags:m,seekable:!0,position:0,stream_ops:q.stream_ops,ungotten:[],error:!1});return De.stream_ops.open&&De.stream_ops.open(De),!p.logReadFiles||1&m||(F.readFiles||(F.readFiles={}),u in F.readFiles||(F.readFiles[u]=1)),De},close(u){if(F.isClosed(u))throw new F.ErrnoError(8);u.getdents&&(u.getdents=null);try{u.stream_ops.close&&u.stream_ops.close(u)}catch(m){throw m}finally{F.closeStream(u.fd)}u.fd=null},isClosed:u=>u.fd===null,llseek(u,m,T){if(F.isClosed(u))throw new F.ErrnoError(8);if(!u.seekable||!u.stream_ops.llseek)throw new F.ErrnoError(70);if(T!=0&&T!=1&&T!=2)throw new F.ErrnoError(28);return u.position=u.stream_ops.llseek(u,m,T),u.ungotten=[],u.position},read(u,m,T,q,_e){if(Ue(T>=0),q<0||_e<0)throw new F.ErrnoError(28);if(F.isClosed(u))throw new F.ErrnoError(8);if((2097155&u.flags)==1)throw new F.ErrnoError(8);if(F.isDir(u.node.mode))throw new F.ErrnoError(31);if(!u.stream_ops.read)throw new F.ErrnoError(28);var Ie=_e!==void 0;if(Ie){if(!u.seekable)throw new F.ErrnoError(70)}else _e=u.position;var De=u.stream_ops.read(u,m,T,q,_e);return Ie||(u.position+=De),De},write(u,m,T,q,_e,Ie){if(Ue(T>=0),q<0||_e<0)throw new F.ErrnoError(28);if(F.isClosed(u))throw new F.ErrnoError(8);if(!(2097155&u.flags))throw new F.ErrnoError(8);if(F.isDir(u.node.mode))throw new F.ErrnoError(31);if(!u.stream_ops.write)throw new F.ErrnoError(28);u.seekable&&1024&u.flags&&F.llseek(u,0,2);var De=_e!==void 0;if(De){if(!u.seekable)throw new F.ErrnoError(70)}else _e=u.position;var Ke=u.stream_ops.write(u,m,T,q,_e,Ie);return De||(u.position+=Ke),Ke},allocate(u,m,T){if(F.isClosed(u))throw new F.ErrnoError(8);if(m<0||T<=0)throw new F.ErrnoError(28);if(!(2097155&u.flags))throw new F.ErrnoError(8);if(!F.isFile(u.node.mode)&&!F.isDir(u.node.mode))throw new F.ErrnoError(43);if(!u.stream_ops.allocate)throw new F.ErrnoError(138);u.stream_ops.allocate(u,m,T)},mmap(u,m,T,q,_e){if(2&q&&!(2&_e)&&(2097155&u.flags)!=2)throw new F.ErrnoError(2);if((2097155&u.flags)==1)throw new F.ErrnoError(2);if(!u.stream_ops.mmap)throw new F.ErrnoError(43);return u.stream_ops.mmap(u,m,T,q,_e)},msync:(u,m,T,q,_e)=>(Ue(T>=0),u.stream_ops.msync?u.stream_ops.msync(u,m,T,q,_e):0),munmap:u=>0,ioctl(u,m,T){if(!u.stream_ops.ioctl)throw new F.ErrnoError(59);return u.stream_ops.ioctl(u,m,T)},readFile(u,m={}){if(m.flags=m.flags||0,m.encoding=m.encoding||"binary",m.encoding!=="utf8"&&m.encoding!=="binary")throw new Error(`Invalid encoding type "${m.encoding}"`);var T,q=F.open(u,m.flags),_e=F.stat(u).size,Ie=new Uint8Array(_e);return F.read(q,Ie,0,_e,0),m.encoding==="utf8"?T=It(Ie,0):m.encoding==="binary"&&(T=Ie),F.close(q),T},writeFile(u,m,T={}){T.flags=T.flags||577;var q=F.open(u,T.flags,T.mode);if(typeof m=="string"){var _e=new Uint8Array(Gr(m)+1),Ie=hn(m,_e,0,_e.length);F.write(q,_e,0,Ie,void 0,T.canOwn)}else{if(!ArrayBuffer.isView(m))throw new Error("Unsupported data type");F.write(q,m,0,m.byteLength,void 0,T.canOwn)}F.close(q)},cwd:()=>F.currentPath,chdir(u){var m=F.lookupPath(u,{follow:!0});if(m.node===null)throw new F.ErrnoError(44);if(!F.isDir(m.node.mode))throw new F.ErrnoError(54);var T=F.nodePermissions(m.node,"x");if(T)throw new F.ErrnoError(T);F.currentPath=m.path},createDefaultDirectories(){F.mkdir("/tmp"),F.mkdir("/home"),F.mkdir("/home/web_user")},createDefaultDevices(){F.mkdir("/dev"),F.registerDevice(F.makedev(1,3),{read:()=>0,write:(q,_e,Ie,De,Ke)=>De}),F.mkdev("/dev/null",F.makedev(1,3)),sn.register(F.makedev(5,0),sn.default_tty_ops),sn.register(F.makedev(6,0),sn.default_tty1_ops),F.mkdev("/dev/tty",F.makedev(5,0)),F.mkdev("/dev/tty1",F.makedev(6,0));var u=new Uint8Array(1024),m=0,T=()=>(m===0&&(m=_r(u).byteLength),u[--m]);F.createDevice("/dev","random",T),F.createDevice("/dev","urandom",T),F.mkdir("/dev/shm"),F.mkdir("/dev/shm/tmp")},createSpecialDirectories(){F.mkdir("/proc");var u=F.mkdir("/proc/self");F.mkdir("/proc/self/fd"),F.mount({mount(){var m=F.createNode(u,"fd",16895,73);return m.node_ops={lookup(T,q){var _e=+q,Ie=F.getStreamChecked(_e),De={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>Ie.path}};return De.parent=De,De}},m}},{},"/proc/self/fd")},createStandardStreams(){p.stdin?F.createDevice("/dev","stdin",p.stdin):F.symlink("/dev/tty","/dev/stdin"),p.stdout?F.createDevice("/dev","stdout",null,p.stdout):F.symlink("/dev/tty","/dev/stdout"),p.stderr?F.createDevice("/dev","stderr",null,p.stderr):F.symlink("/dev/tty1","/dev/stderr");var u=F.open("/dev/stdin",0),m=F.open("/dev/stdout",1),T=F.open("/dev/stderr",1);Ue(u.fd===0,`invalid handle for stdin (${u.fd})`),Ue(m.fd===1,`invalid handle for stdout (${m.fd})`),Ue(T.fd===2,`invalid handle for stderr (${T.fd})`)},ensureErrnoError(){F.ErrnoError||(F.ErrnoError=function(u,m){this.name="ErrnoError",this.node=m,this.setErrno=function(T){for(var q in this.errno=T,Mn)if(Mn[q]===T){this.code=q;break}},this.setErrno(u),this.message=Ir[u],this.stack&&(Object.defineProperty(this,"stack",{value:new Error().stack,writable:!0}),this.stack=gn(this.stack))},F.ErrnoError.prototype=new Error,F.ErrnoError.prototype.constructor=F.ErrnoError,[44].forEach(u=>{F.genericErrors[u]=new F.ErrnoError(u),F.genericErrors[u].stack="<generic error, no stack>"}))},staticInit(){F.ensureErrnoError(),F.nameTable=new Array(4096),F.mount(it,{},"/"),F.createDefaultDirectories(),F.createDefaultDevices(),F.createSpecialDirectories(),F.filesystems={MEMFS:it}},init(u,m,T){Ue(!F.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)"),F.init.initialized=!0,F.ensureErrnoError(),p.stdin=u||p.stdin,p.stdout=m||p.stdout,p.stderr=T||p.stderr,F.createStandardStreams()},quit(){F.init.initialized=!1,as(0);for(var u=0;u<F.streams.length;u++){var m=F.streams[u];m&&F.close(m)}},findObject(u,m){var T=F.analyzePath(u,m);return T.exists?T.object:null},analyzePath(u,m){try{u=(q=F.lookupPath(u,{follow:!m})).path}catch{}var T={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var q=F.lookupPath(u,{parent:!0});T.parentExists=!0,T.parentPath=q.path,T.parentObject=q.node,T.name=Rt.basename(u),q=F.lookupPath(u,{follow:!m}),T.exists=!0,T.path=q.path,T.object=q.node,T.name=q.node.name,T.isRoot=q.path==="/"}catch(_e){T.error=_e.errno}return T},createPath(u,m,T,q){u=typeof u=="string"?u:F.getPath(u);for(var _e=m.split("/").reverse();_e.length;){var Ie=_e.pop();if(Ie){var De=Rt.join2(u,Ie);try{F.mkdir(De)}catch{}u=De}}return De},createFile(u,m,T,q,_e){var Ie=Rt.join2(typeof u=="string"?u:F.getPath(u),m),De=Bt(q,_e);return F.create(Ie,De)},createDataFile(u,m,T,q,_e,Ie){var De=m;u&&(u=typeof u=="string"?u:F.getPath(u),De=m?Rt.join2(u,m):u);var Ke=Bt(q,_e),kt=F.create(De,Ke);if(T){if(typeof T=="string"){for(var Dt=new Array(T.length),tr=0,wt=T.length;tr<wt;++tr)Dt[tr]=T.charCodeAt(tr);T=Dt}F.chmod(kt,146|Ke);var Qt=F.open(kt,577);F.write(Qt,T,0,T.length,0,Ie),F.close(Qt),F.chmod(kt,Ke)}},createDevice(u,m,T,q){var _e=Rt.join2(typeof u=="string"?u:F.getPath(u),m),Ie=Bt(!!T,!!q);F.createDevice.major||(F.createDevice.major=64);var De=F.makedev(F.createDevice.major++,0);return F.registerDevice(De,{open(Ke){Ke.seekable=!1},close(Ke){q&&q.buffer&&q.buffer.length&&q(10)},read(Ke,kt,Dt,tr,wt){for(var Qt=0,Xt=0;Xt<tr;Xt++){var qr;try{qr=T()}catch{throw new F.ErrnoError(29)}if(qr===void 0&&Qt===0)throw new F.ErrnoError(6);if(qr==null)break;Qt++,kt[Dt+Xt]=qr}return Qt&&(Ke.node.timestamp=Date.now()),Qt},write(Ke,kt,Dt,tr,wt){for(var Qt=0;Qt<tr;Qt++)try{q(kt[Dt+Qt])}catch{throw new F.ErrnoError(29)}return tr&&(Ke.node.timestamp=Date.now()),Qt}}),F.mkdev(_e,Ie,De)},forceLoadFile(u){if(u.isDevice||u.isFolder||u.link||u.contents)return!0;if(typeof XMLHttpRequest<"u")throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!b)throw new Error("Cannot load without read() or XMLHttpRequest.");try{u.contents=Gt(b(u.url)),u.usedBytes=u.contents.length}catch{throw new F.ErrnoError(29)}},createLazyFile(u,m,T,q,_e){function Ie(){this.lengthKnown=!1,this.chunks=[]}if(Ie.prototype.get=function(wt){if(!(wt>this.length-1||wt<0)){var Qt=wt%this.chunkSize,Xt=wt/this.chunkSize|0;return this.getter(Xt)[Qt]}},Ie.prototype.setDataGetter=function(wt){this.getter=wt},Ie.prototype.cacheLength=function(){var wt=new XMLHttpRequest;if(wt.open("HEAD",T,!1),wt.send(null),!(wt.status>=200&&wt.status<300||wt.status===304))throw new Error("Couldn't load "+T+". Status: "+wt.status);var Qt,Xt=Number(wt.getResponseHeader("Content-length")),qr=(Qt=wt.getResponseHeader("Accept-Ranges"))&&Qt==="bytes",jr=(Qt=wt.getResponseHeader("Content-Encoding"))&&Qt==="gzip",$r=1048576;qr||($r=Xt);var Ne=this;Ne.setDataGetter(M=>{var ee=M*$r,ce=(M+1)*$r-1;if(ce=Math.min(ce,Xt-1),Ne.chunks[M]===void 0&&(Ne.chunks[M]=((ve,Ge)=>{if(ve>Ge)throw new Error("invalid range ("+ve+", "+Ge+") or no bytes requested!");if(Ge>Xt-1)throw new Error("only "+Xt+" bytes available! programmer error!");var Le=new XMLHttpRequest;if(Le.open("GET",T,!1),Xt!==$r&&Le.setRequestHeader("Range","bytes="+ve+"-"+Ge),Le.responseType="arraybuffer",Le.overrideMimeType&&Le.overrideMimeType("text/plain; charset=x-user-defined"),Le.send(null),!(Le.status>=200&&Le.status<300||Le.status===304))throw new Error("Couldn't load "+T+". Status: "+Le.status);return Le.response!==void 0?new Uint8Array(Le.response||[]):Gt(Le.responseText||"")})(ee,ce)),Ne.chunks[M]===void 0)throw new Error("doXHR failed!");return Ne.chunks[M]}),!jr&&Xt||($r=Xt=1,Xt=this.getter(0).length,$r=Xt,R("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=Xt,this._chunkSize=$r,this.lengthKnown=!0},typeof XMLHttpRequest<"u"){if(!y)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var De=new Ie;Object.defineProperties(De,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var Ke={isDevice:!1,contents:De}}else Ke={isDevice:!1,url:T};var kt=F.createFile(u,m,Ke,q,_e);Ke.contents?kt.contents=Ke.contents:Ke.url&&(kt.contents=null,kt.url=Ke.url),Object.defineProperties(kt,{usedBytes:{get:function(){return this.contents.length}}});var Dt={};function tr(wt,Qt,Xt,qr,jr){var $r=wt.node.contents;if(jr>=$r.length)return 0;var Ne=Math.min($r.length-jr,qr);if(Ue(Ne>=0),$r.slice)for(var M=0;M<Ne;M++)Qt[Xt+M]=$r[jr+M];else for(M=0;M<Ne;M++)Qt[Xt+M]=$r.get(jr+M);return Ne}return Object.keys(kt.stream_ops).forEach(wt=>{var Qt=kt.stream_ops[wt];Dt[wt]=function(){return F.forceLoadFile(kt),Qt.apply(null,arguments)}}),Dt.read=(wt,Qt,Xt,qr,jr)=>(F.forceLoadFile(kt),tr(wt,Qt,Xt,qr,jr)),Dt.mmap=(wt,Qt,Xt,qr,jr)=>{F.forceLoadFile(kt);var $r=an();if(!$r)throw new F.ErrnoError(48);return tr(wt,de,$r,Qt,Xt),{ptr:$r,allocated:!0}},kt.stream_ops=Dt,kt},absolutePath(){We("FS.absolutePath has been removed; use PATH_FS.resolve instead")},createFolder(){We("FS.createFolder has been removed; use FS.mkdir instead")},createLink(){We("FS.createLink has been removed; use FS.symlink instead")},joinPath(){We("FS.joinPath has been removed; use PATH.join instead")},mmapAlloc(){We("FS.mmapAlloc has been replaced by the top level function mmapAlloc")},standardizePath(){We("FS.standardizePath has been removed; use PATH.normalize instead")}},ar={DEFAULT_POLLMASK:5,calculateAt(u,m,T){if(Rt.isAbs(m))return m;var q;if(q=u===-100?F.cwd():ar.getStreamFromFD(u).path,m.length==0){if(!T)throw new F.ErrnoError(44);return q}return Rt.join2(q,m)},doStat(u,m,T){try{var q=u(m)}catch(Ke){if(Ke&&Ke.node&&Rt.normalize(m)!==Rt.normalize(F.getPath(Ke.node)))return-54;throw Ke}we[T>>2]=q.dev,we[T+4>>2]=q.mode,Se[T+8>>2]=q.nlink,we[T+12>>2]=q.uid,we[T+16>>2]=q.gid,we[T+20>>2]=q.rdev,nt=[q.size>>>0,(Be=q.size,+Math.abs(Be)>=1?Be>0?+Math.floor(Be/4294967296)>>>0:~~+Math.ceil((Be-+(~~Be>>>0))/4294967296)>>>0:0)],we[T+24>>2]=nt[0],we[T+28>>2]=nt[1],we[T+32>>2]=4096,we[T+36>>2]=q.blocks;var _e=q.atime.getTime(),Ie=q.mtime.getTime(),De=q.ctime.getTime();return nt=[Math.floor(_e/1e3)>>>0,(Be=Math.floor(_e/1e3),+Math.abs(Be)>=1?Be>0?+Math.floor(Be/4294967296)>>>0:~~+Math.ceil((Be-+(~~Be>>>0))/4294967296)>>>0:0)],we[T+40>>2]=nt[0],we[T+44>>2]=nt[1],Se[T+48>>2]=_e%1e3*1e3,nt=[Math.floor(Ie/1e3)>>>0,(Be=Math.floor(Ie/1e3),+Math.abs(Be)>=1?Be>0?+Math.floor(Be/4294967296)>>>0:~~+Math.ceil((Be-+(~~Be>>>0))/4294967296)>>>0:0)],we[T+56>>2]=nt[0],we[T+60>>2]=nt[1],Se[T+64>>2]=Ie%1e3*1e3,nt=[Math.floor(De/1e3)>>>0,(Be=Math.floor(De/1e3),+Math.abs(Be)>=1?Be>0?+Math.floor(Be/4294967296)>>>0:~~+Math.ceil((Be-+(~~Be>>>0))/4294967296)>>>0:0)],we[T+72>>2]=nt[0],we[T+76>>2]=nt[1],Se[T+80>>2]=De%1e3*1e3,nt=[q.ino>>>0,(Be=q.ino,+Math.abs(Be)>=1?Be>0?+Math.floor(Be/4294967296)>>>0:~~+Math.ceil((Be-+(~~Be>>>0))/4294967296)>>>0:0)],we[T+88>>2]=nt[0],we[T+92>>2]=nt[1],0},doMsync(u,m,T,q,_e){if(!F.isFile(m.node.mode))throw new F.ErrnoError(43);if(2&q)return 0;var Ie=ge.slice(u,u+T);F.msync(m,Ie,_e,T,q)},varargs:void 0,get(){Ue(ar.varargs!=null);var u=we[+ar.varargs>>2];return ar.varargs+=4,u},getp:()=>ar.get(),getStr:u=>Ft(u),getStreamFromFD:u=>F.getStreamChecked(u)},Cn=(u,m,T)=>(Ue(typeof T=="number","stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),hn(u,ge,m,T));Dn=()=>performance.now();var wn={},yn=()=>{if(!yn.strings){var u={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:Y||"./this.program"};for(var m in wn)wn[m]===void 0?delete u[m]:u[m]=wn[m];var T=[];for(var m in u)T.push(`${m}=${u[m]}`);yn.strings=T}return yn.strings},In=(u,m)=>{if(fe=u,function(){var _e=R,Ie=K,De=!1;R=K=Ke=>{De=!0};try{as(0),["stdout","stderr"].forEach(function(Ke){var kt=F.analyzePath("/dev/"+Ke);if(kt){var Dt=kt.object.rdev,tr=sn.ttys[Dt];tr&&tr.output&&tr.output.length&&(De=!0)}})}catch{}R=_e,K=Ie,De&&$t("stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the Emscripten FAQ), or make sure to emit a newline when you printf etc.")}(),!m){var T=`program exited (with status: ${u}), but keepRuntimeAlive() is set (counter=0) due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)`;n(T),K(T)}var q;fe=q=u,z(q,new tt(q))},ws=In,Hn=function(u,m,T,q){u||(u=this),this.parent=u,this.mount=u.mount,this.mounted=null,this.id=F.nextInode++,this.name=m,this.mode=T,this.node_ops={},this.stream_ops={},this.rdev=q};Object.defineProperties(Hn.prototype,{read:{get:function(){return!(365&~this.mode)},set:function(u){u?this.mode|=365:this.mode&=-366}},write:{get:function(){return!(146&~this.mode)},set:function(u){u?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return F.isDir(this.mode)}},isDevice:{get:function(){return F.isChrdev(this.mode)}}}),F.FSNode=Hn,F.createPreloadedFile=(u,m,T,q,_e,Ie,De,Ke,kt,Dt)=>{var tr=m?yr.resolve(Rt.join2(u,m)):u,wt=Je(`cp ${tr}`);function Qt(Xt){function qr(jr){Dt&&Dt(),Ke||(($r,Ne,M,ee,ce,ve)=>{F.createDataFile($r,Ne,M,ee,ce,ve)})(u,m,jr,q,_e,kt),Ie&&Ie(),Ce(wt)}((jr,$r,Ne,M)=>{typeof Browser<"u"&&Browser.init();var ee=!1;return St.forEach(ce=>{ee||ce.canHandle($r)&&(ce.handle(jr,$r,Ne,M),ee=!0)}),ee})(Xt,tr,qr,()=>{De&&De(),Ce(wt)})||qr(Xt)}be(wt),typeof T=="string"?((Xt,qr,jr)=>{var $r=Je(`al ${Xt}`);j(Xt,Ne=>{Ue(Ne,`Loading data file "${Xt}" failed (no arrayBuffer).`),qr(new Uint8Array(Ne)),$r&&Ce($r)},Ne=>{if(!jr)throw`Loading data file "${Xt}" failed.`;jr()}),$r&&be($r)})(T,Xt=>Qt(Xt),De):Qt(T)},F.staticInit(),p.FS_createPath=F.createPath,p.FS_createDataFile=F.createDataFile,p.FS_createPreloadedFile=F.createPreloadedFile,p.FS_unlink=F.unlink,p.FS_createLazyFile=F.createLazyFile,p.FS_createDevice=F.createDevice;var Nr,Wr={__assert_fail:(u,m,T,q)=>{We(`Assertion failed: ${Ft(u)}, at: `+[m?Ft(m):"unknown filename",T,q?Ft(q):"unknown function"])},__syscall_fcntl64:function(u,m,T){ar.varargs=T;try{var q=ar.getStreamFromFD(u);switch(m){case 0:if((_e=ar.get())<0)return-28;for(;F.streams[_e];)_e++;return F.createStream(q,_e).fd;case 1:case 2:case 6:case 7:return 0;case 3:return q.flags;case 4:var _e=ar.get();return q.flags|=_e,0;case 5:return _e=ar.getp(),Ae[_e+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return Ie=28,we[pr()>>2]=Ie,-1}}catch(De){if(F===void 0||De.name!=="ErrnoError")throw De;return-De.errno}var Ie},__syscall_fstat64:function(u,m){try{var T=ar.getStreamFromFD(u);return ar.doStat(F.stat,T.path,m)}catch(q){if(F===void 0||q.name!=="ErrnoError")throw q;return-q.errno}},__syscall_getdents64:function(u,m,T){try{var q=ar.getStreamFromFD(u);q.getdents||(q.getdents=F.readdir(q.path));for(var _e=280,Ie=0,De=F.llseek(q,0,1),Ke=Math.floor(De/_e);Ke<q.getdents.length&&Ie+_e<=T;){var kt,Dt,tr=q.getdents[Ke];if(tr===".")kt=q.node.id,Dt=4;else if(tr==="..")kt=F.lookupPath(q.path,{parent:!0}).node.id,Dt=4;else{var wt=F.lookupNode(q.node,tr);kt=wt.id,Dt=F.isChrdev(wt.mode)?2:F.isDir(wt.mode)?4:F.isLink(wt.mode)?10:8}Ue(kt),nt=[kt>>>0,(Be=kt,+Math.abs(Be)>=1?Be>0?+Math.floor(Be/4294967296)>>>0:~~+Math.ceil((Be-+(~~Be>>>0))/4294967296)>>>0:0)],we[m+Ie>>2]=nt[0],we[m+Ie+4>>2]=nt[1],nt=[(Ke+1)*_e>>>0,(Be=(Ke+1)*_e,+Math.abs(Be)>=1?Be>0?+Math.floor(Be/4294967296)>>>0:~~+Math.ceil((Be-+(~~Be>>>0))/4294967296)>>>0:0)],we[m+Ie+8>>2]=nt[0],we[m+Ie+12>>2]=nt[1],Ae[m+Ie+16>>1]=280,de[m+Ie+18|0]=Dt,Cn(tr,m+Ie+19,256),Ie+=_e,Ke+=1}return F.llseek(q,Ke*_e,0),Ie}catch(Qt){if(F===void 0||Qt.name!=="ErrnoError")throw Qt;return-Qt.errno}},__syscall_ioctl:function(u,m,T){ar.varargs=T;try{var q=ar.getStreamFromFD(u);switch(m){case 21509:case 21510:case 21511:case 21512:case 21524:case 21515:return q.tty?0:-59;case 21505:if(!q.tty)return-59;if(q.tty.ops.ioctl_tcgets){var _e=q.tty.ops.ioctl_tcgets(q),Ie=ar.getp();we[Ie>>2]=_e.c_iflag||0,we[Ie+4>>2]=_e.c_oflag||0,we[Ie+8>>2]=_e.c_cflag||0,we[Ie+12>>2]=_e.c_lflag||0;for(var De=0;De<32;De++)de[Ie+De+17|0]=_e.c_cc[De]||0;return 0}return 0;case 21506:case 21507:case 21508:if(!q.tty)return-59;if(q.tty.ops.ioctl_tcsets){Ie=ar.getp();var Ke=we[Ie>>2],kt=we[Ie+4>>2],Dt=we[Ie+8>>2],tr=we[Ie+12>>2],wt=[];for(De=0;De<32;De++)wt.push(de[Ie+De+17|0]);return q.tty.ops.ioctl_tcsets(q.tty,m,{c_iflag:Ke,c_oflag:kt,c_cflag:Dt,c_lflag:tr,c_cc:wt})}return 0;case 21519:return q.tty?(Ie=ar.getp(),we[Ie>>2]=0,0):-59;case 21520:return q.tty?-28:-59;case 21531:return Ie=ar.getp(),F.ioctl(q,m,Ie);case 21523:if(!q.tty)return-59;if(q.tty.ops.ioctl_tiocgwinsz){var Qt=q.tty.ops.ioctl_tiocgwinsz(q.tty);Ie=ar.getp(),Ae[Ie>>1]=Qt[0],Ae[Ie+2>>1]=Qt[1]}return 0;default:return-28}}catch(Xt){if(F===void 0||Xt.name!=="ErrnoError")throw Xt;return-Xt.errno}},__syscall_lstat64:function(u,m){try{return u=ar.getStr(u),ar.doStat(F.lstat,u,m)}catch(T){if(F===void 0||T.name!=="ErrnoError")throw T;return-T.errno}},__syscall_newfstatat:function(u,m,T,q){try{m=ar.getStr(m);var _e=256&q,Ie=4096&q;return Ue(!(q&=-6401),`unknown flags in __syscall_newfstatat: ${q}`),m=ar.calculateAt(u,m,Ie),ar.doStat(_e?F.lstat:F.stat,m,T)}catch(De){if(F===void 0||De.name!=="ErrnoError")throw De;return-De.errno}},__syscall_openat:function(u,m,T,q){ar.varargs=q;try{m=ar.getStr(m),m=ar.calculateAt(u,m);var _e=q?ar.get():0;return F.open(m,T,_e).fd}catch(Ie){if(F===void 0||Ie.name!=="ErrnoError")throw Ie;return-Ie.errno}},__syscall_rmdir:function(u){try{return u=ar.getStr(u),F.rmdir(u),0}catch(m){if(F===void 0||m.name!=="ErrnoError")throw m;return-m.errno}},__syscall_stat64:function(u,m){try{return u=ar.getStr(u),ar.doStat(F.stat,u,m)}catch(T){if(F===void 0||T.name!=="ErrnoError")throw T;return-T.errno}},__syscall_unlinkat:function(u,m,T){try{return m=ar.getStr(m),m=ar.calculateAt(u,m),T===0?F.unlink(m):T===512?F.rmdir(m):We("Invalid flags passed to unlinkat"),0}catch(q){if(F===void 0||q.name!=="ErrnoError")throw q;return-q.errno}},_emscripten_fs_load_embedded_files:u=>{do{var m=Se[u>>2],T=Se[(u+=4)>>2],q=Se[(u+=4)>>2];u+=4;var _e=Ft(m);F.createPath("/",Rt.dirname(_e),!0,!0),F.createDataFile(_e,null,de.subarray(q,q+T),!0,!0,!0)}while(Se[u>>2])},_emscripten_get_now_is_monotonic:()=>1,emscripten_date_now:()=>Date.now(),emscripten_get_now:Dn,emscripten_memcpy_js:(u,m,T)=>ge.copyWithin(u,m,m+T),emscripten_resize_heap:u=>{ge.length,(m=>{We(`Cannot enlarge memory arrays to size ${m} bytes (OOM). Either (1) compile with -sINITIAL_MEMORY=X with X higher than the current value ${de.length}, (2) compile with -sALLOW_MEMORY_GROWTH which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with -sABORTING_MALLOC=0`)})(u>>>=0)},environ_get:(u,m)=>{var T=0;return yn().forEach((q,_e)=>{var Ie=m+T;Se[u+4*_e>>2]=Ie,((De,Ke)=>{for(var kt=0;kt<De.length;++kt)Ue(De.charCodeAt(kt)===(255&De.charCodeAt(kt))),de[0|Ke++]=De.charCodeAt(kt);de[0|Ke]=0})(q,Ie),T+=q.length+1}),0},environ_sizes_get:(u,m)=>{var T=yn();Se[u>>2]=T.length;var q=0;return T.forEach(_e=>q+=_e.length+1),Se[m>>2]=q,0},exit:ws,fd_close:function(u){try{var m=ar.getStreamFromFD(u);return F.close(m),0}catch(T){if(F===void 0||T.name!=="ErrnoError")throw T;return T.errno}},fd_read:function(u,m,T,q){try{var _e=((Ie,De,Ke,kt)=>{for(var Dt=0,tr=0;tr<Ke;tr++){var wt=Se[De>>2],Qt=Se[De+4>>2];De+=8;var Xt=F.read(Ie,de,wt,Qt,kt);if(Xt<0)return-1;if(Dt+=Xt,Xt<Qt)break}return Dt})(ar.getStreamFromFD(u),m,T);return Se[q>>2]=_e,0}catch(Ie){if(F===void 0||Ie.name!=="ErrnoError")throw Ie;return Ie.errno}},fd_seek:function(u,m,T,q,_e){var Ie,De,Ke=(De=T,Ue((Ie=m)==Ie>>>0||Ie==(0|Ie)),Ue(De===(0|De)),De+2097152>>>0<4194305-!!Ie?(Ie>>>0)+4294967296*De:NaN);try{if(isNaN(Ke))return 61;var kt=ar.getStreamFromFD(u);return F.llseek(kt,Ke,q),nt=[kt.position>>>0,(Be=kt.position,+Math.abs(Be)>=1?Be>0?+Math.floor(Be/4294967296)>>>0:~~+Math.ceil((Be-+(~~Be>>>0))/4294967296)>>>0:0)],we[_e>>2]=nt[0],we[_e+4>>2]=nt[1],kt.getdents&&Ke===0&&q===0&&(kt.getdents=null),0}catch(Dt){if(F===void 0||Dt.name!=="ErrnoError")throw Dt;return Dt.errno}},fd_write:function(u,m,T,q){try{var _e=((Ie,De,Ke,kt)=>{for(var Dt=0,tr=0;tr<Ke;tr++){var wt=Se[De>>2],Qt=Se[De+4>>2];De+=8;var Xt=F.write(Ie,de,wt,Qt,kt);if(Xt<0)return-1;Dt+=Xt}return Dt})(ar.getStreamFromFD(u),m,T);return Se[q>>2]=_e,0}catch(Ie){if(F===void 0||Ie.name!=="ErrnoError")throw Ie;return Ie.errno}}},fn=function(){var u={env:Wr,wasi_snapshot_preview1:Wr};function m(Ke,kt){var Dt,tr;return fn=Ke.exports,Ue(x=fn.memory,"memory not found in wasm exports"),Dt=x.buffer,p.HEAP8=de=new Int8Array(Dt),p.HEAP16=Ae=new Int16Array(Dt),p.HEAPU8=ge=new Uint8Array(Dt),p.HEAPU16=new Uint16Array(Dt),p.HEAP32=we=new Int32Array(Dt),p.HEAPU32=Se=new Uint32Array(Dt),p.HEAPF32=new Float32Array(Dt),p.HEAPF64=new Float64Array(Dt),tr=fn.__wasm_call_ctors,Z.unshift(tr),Ce("wasm-instantiate"),fn}be("wasm-instantiate");var T,q,_e,Ie,De=p;if(p.instantiateWasm)try{return p.instantiateWasm(u,m)}catch(Ke){K(`Module.instantiateWasm callback failed with error: ${Ke}`),n(Ke)}return(T=O,q=et,_e=u,Ie=function(Ke){Ue(p===De,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?"),De=null,m(Ke.instance)},T||typeof WebAssembly.instantiateStreaming!="function"||ft(q)||ht(q)||_||typeof fetch!="function"?U(q,_e,Ie):fetch(q,{credentials:"same-origin"}).then(Ke=>WebAssembly.instantiateStreaming(Ke,_e).then(Ie,function(kt){return K(`wasm streaming compile failed: ${kt}`),K("falling back to ArrayBuffer instantiation"),U(q,_e,Ie)}))).catch(n),{}}(),pr=gt("__errno_location"),as=p._fflush=gt("fflush"),ys=p._main=gt("__main_argc_argv"),os=()=>(os=fn.emscripten_stack_init)(),Jn=()=>(Jn=fn.emscripten_stack_get_end)(),ls=gt("stackAlloc"),Fn=()=>(Fn=fn.emscripten_stack_get_current)();function Kn(u=[]){Ue(xe==0,'cannot call main when async dependencies remain! (listen on Module["onRuntimeInitialized"])'),Ue(oe.length==0,"cannot call main when preRun functions remain to be called");var m=ys;u.unshift(Y);var T=u.length,q=ls(4*(T+1)),_e=q;u.forEach(De=>{Se[_e>>2]=(Ke=>{var kt=Gr(Ke)+1,Dt=ls(kt);return Cn(Ke,Dt,kt),Dt})(De),_e+=4}),Se[_e>>2]=0;try{var Ie=m(T,q);return In(Ie,!0),Ie}catch(De){return(Ke=>{if(Ke instanceof tt||Ke=="unwind")return fe;dt(),Ke instanceof WebAssembly.RuntimeError&&Fn()<=0&&K("Stack overflow detected.  You can try increasing -sSTACK_SIZE (currently set to 65536)"),z(1,Ke)})(De)}}function zn(){var u;os(),Ue(!(3&(u=Jn()))),u==0&&(u+=4),Se[u>>2]=34821223,Se[u+4>>2]=2310721022,Se[0]=1668509029}function On(u=V){function m(){Nr||(Nr=!0,p.calledRun=!0,Re||(Ue(!qe),qe=!0,dt(),p.noFSInit||F.init.initialized||F.init(),F.ignorePermissions=!1,Ze(Z),dt(),Ze(pe),k(p),p.onRuntimeInitialized&&p.onRuntimeInitialized(),Zn&&Kn(u),function(){if(dt(),p.postRun)for(typeof p.postRun=="function"&&(p.postRun=[p.postRun]);p.postRun.length;)T=p.postRun.shift(),Ee.unshift(T);var T;Ze(Ee)}()))}xe>0||(zn(),function(){if(p.preRun)for(typeof p.preRun=="function"&&(p.preRun=[p.preRun]);p.preRun.length;)T=p.preRun.shift(),oe.unshift(T);var T;Ze(oe)}(),xe>0||(p.setStatus?(p.setStatus("Running..."),setTimeout(function(){setTimeout(function(){p.setStatus("")},1),m()},1)):m(),dt()))}if(p.dynCall_jiji=gt("dynCall_jiji"),p.___emscripten_embedded_file_data=18226032,p.addRunDependency=be,p.removeRunDependency=Ce,p.FS_createPath=F.createPath,p.FS_createLazyFile=F.createLazyFile,p.FS_createDevice=F.createDevice,p.FS_createPreloadedFile=F.createPreloadedFile,p.FS=F,p.FS_createDataFile=F.createDataFile,p.FS_unlink=F.unlink,["writeI53ToI64","writeI53ToI64Clamped","writeI53ToI64Signaling","writeI53ToU64Clamped","writeI53ToU64Signaling","readI53FromI64","readI53FromU64","convertI32PairToI53","convertU32PairToI53","growMemory","isLeapYear","ydayFromDate","arraySum","addDays","inetPton4","inetNtop4","inetPton6","inetNtop6","readSockaddr","writeSockaddr","getHostByName","getCallstack","emscriptenLog","convertPCtoSourceLocation","readEmAsmArgs","jstoi_q","jstoi_s","listenOnce","autoResumeAudioContext","dynCallLegacy","getDynCaller","dynCall","runtimeKeepalivePush","runtimeKeepalivePop","callUserCallback","maybeExit","asmjsMangle","handleAllocatorInit","HandleAllocator","getNativeTypeSize","STACK_SIZE","STACK_ALIGN","POINTER_SIZE","ASSERTIONS","getCFunc","ccall","cwrap","uleb128Encode","sigToWasmTypes","generateFuncType","convertJsFunctionToWasm","getEmptyTableSlot","updateTableMap","getFunctionAddress","addFunction","removeFunction","reallyNegative","unSign","strLen","reSign","formatString","intArrayToString","AsciiToString","UTF16ToString","stringToUTF16","lengthBytesUTF16","UTF32ToString","stringToUTF32","lengthBytesUTF32","stringToNewUTF8","writeArrayToMemory","registerKeyEventCallback","maybeCStringToJsString","findEventTarget","findCanvasEventTarget","getBoundingClientRect","fillMouseEventData","registerMouseEventCallback","registerWheelEventCallback","registerUiEventCallback","registerFocusEventCallback","fillDeviceOrientationEventData","registerDeviceOrientationEventCallback","fillDeviceMotionEventData","registerDeviceMotionEventCallback","screenOrientation","fillOrientationChangeEventData","registerOrientationChangeEventCallback","fillFullscreenChangeEventData","registerFullscreenChangeEventCallback","JSEvents_requestFullscreen","JSEvents_resizeCanvasForFullscreen","registerRestoreOldStyle","hideEverythingExceptGivenElement","restoreHiddenElements","setLetterbox","softFullscreenResizeWebGLRenderTarget","doRequestFullscreen","fillPointerlockChangeEventData","registerPointerlockChangeEventCallback","registerPointerlockErrorEventCallback","requestPointerLock","fillVisibilityChangeEventData","registerVisibilityChangeEventCallback","registerTouchEventCallback","fillGamepadEventData","registerGamepadEventCallback","registerBeforeUnloadEventCallback","fillBatteryEventData","battery","registerBatteryEventCallback","setCanvasElementSize","getCanvasElementSize","jsStackTrace","stackTrace","checkWasiClock","wasiRightsToMuslOFlags","wasiOFlagsToMuslOFlags","createDyncallWrapper","safeSetTimeout","setImmediateWrapped","clearImmediateWrapped","polyfillSetImmediate","getPromise","makePromise","idsToPromises","makePromiseCallback","ExceptionInfo","findMatchingCatch","setMainLoop","getSocketFromFD","getSocketAddress","FS_mkdirTree","_setNetworkCallback","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","webgl_enable_ANGLE_instanced_arrays","webgl_enable_OES_vertex_array_object","webgl_enable_WEBGL_draw_buffers","webgl_enable_WEBGL_multi_draw","emscriptenWebGLGet","computeUnpackAlignedImageSize","colorChannelsInGlTextureFormat","emscriptenWebGLGetTexPixelData","__glGenObject","emscriptenWebGLGetUniform","webglGetUniformLocation","webglPrepareUniformLocationsBeforeFirstUse","webglGetLeftBracePos","emscriptenWebGLGetVertexAttrib","__glGetActiveAttribOrUniform","writeGLArray","registerWebGlEventCallback","runAndAbortIfError","SDL_unicode","SDL_ttfContext","SDL_audio","ALLOC_NORMAL","ALLOC_STACK","allocate","writeStringToMemory","writeAsciiToMemory"].forEach(function(u){typeof globalThis>"u"||Object.getOwnPropertyDescriptor(globalThis,u)||Object.defineProperty(globalThis,u,{configurable:!0,get(){var m=`\`${u}\` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line`,T=u;T.startsWith("_")||(T="$"+u),m+=` (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='${T}')`,H(u)&&(m+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"),$t(m)}}),Oe(u)}),["run","addOnPreRun","addOnInit","addOnPreMain","addOnExit","addOnPostRun","FS_createFolder","FS_createLink","FS_readFile","out","err","callMain","abort","wasmMemory","wasmExports","stackAlloc","stackSave","stackRestore","getTempRet0","setTempRet0","writeStackCookie","checkStackCookie","convertI32PairToI53Checked","ptrToString","zeroMemory","exitJS","getHeapMax","abortOnCannotGrowMemory","ENV","MONTH_DAYS_REGULAR","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR_CUMULATIVE","MONTH_DAYS_LEAP_CUMULATIVE","ERRNO_CODES","ERRNO_MESSAGES","setErrNo","DNS","Protocols","Sockets","initRandomFill","randomFill","timers","warnOnce","UNWIND_CACHE","readEmAsmArgsArray","getExecutableName","handleException","keepRuntimeAlive","asyncLoad","alignMemory","mmapAlloc","wasmTable","noExitRuntime","freeTableIndexes","functionsInTableMap","setValue","getValue","PATH","PATH_FS","UTF8Decoder","UTF8ArrayToString","UTF8ToString","stringToUTF8Array","stringToUTF8","lengthBytesUTF8","intArrayFromString","stringToAscii","UTF16Decoder","stringToUTF8OnStack","JSEvents","specialHTMLTargets","currentFullscreenStrategy","restoreOldWindowedStyle","demangle","demangleAll","ExitStatus","getEnvStrings","doReadv","doWritev","promiseMap","uncaughtExceptionCount","exceptionLast","exceptionCaught","Browser","wget","SYSCALLS","preloadPlugins","FS_modeStringToFlags","FS_getMode","FS_stdin_getChar_buffer","FS_stdin_getChar","MEMFS","TTY","PIPEFS","SOCKFS","tempFixedLengthArray","miniTempWebGLFloatBuffers","miniTempWebGLIntBuffers","GL","emscripten_webgl_power_preferences","AL","GLUT","EGL","GLEW","IDBStore","SDL","SDL_gfx","allocateUTF8","allocateUTF8OnStack"].forEach(Oe),He=function u(){Nr||On(),Nr||(He=u)},p.preInit)for(typeof p.preInit=="function"&&(p.preInit=[p.preInit]);p.preInit.length>0;)p.preInit.pop()();var Zn=!0;return p.noInitialRun&&(Zn=!1),On(),Te.ready});function wf(Te){if(Te.includes("."))return Te;if(Te.includes(":")){let[V,Y]=Te.split(":").map(Number);return Y===0?`${V} o'clock`:Y<10?`${V} oh ${Y}`:`${V} ${Y}`}let k=parseInt(Te.slice(0,4),10);if(k<1100||k%1e3<10)return Te;let n=Te.slice(0,2),p=parseInt(Te.slice(2,4),10),I=Te.endsWith("s")?"s":"";if(k%1e3>=100&&k%1e3<=999){if(p===0)return`${n} hundred${I}`;if(p<10)return`${n} oh ${p}${I}`}return`${n} ${p}${I}`}function yf(Te){const k=Te[0]==="$"?"dollar":"pound";if(isNaN(Number(Te.slice(1))))return`${Te.slice(1)} ${k}s`;if(!Te.includes(".")){let V=Te.slice(1)==="1"?"":"s";return`${Te.slice(1)} ${k}${V}`}const[n,p]=Te.slice(1).split("."),I=parseInt(p.padEnd(2,"0"),10);return`${n} ${k}${n==="1"?"":"s"} and ${I} ${Te[0]==="$"?I===1?"cent":"cents":I===1?"penny":"pence"}`}function bf(Te){let[k,n]=Te.split(".");return`${k} point ${n.split("").join(" ")}`}const vf=new RegExp(`(\\s*[${Sh=';:,.!?¡¿—…"«»“”(){}[]',Sh.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}]+\\s*)+`,"g");var Sh;async function Ch(Te,k="a",n=!0){n&&(Te=function(z){return z.replace(/[‘’]/g,"'").replace(/«/g,"“").replace(/»/g,"”").replace(/[“”]/g,'"').replace(/\(/g,"«").replace(/\)/g,"»").replace(/、/g,", ").replace(/。/g,". ").replace(/！/g,"! ").replace(/，/g,", ").replace(/：/g,": ").replace(/；/g,"; ").replace(/？/g,"? ").replace(/[^\S \n]/g," ").replace(/  +/," ").replace(new RegExp("(?<=\\n) +(?=\\n)","g"),"").replace(/\bD[Rr]\.(?= [A-Z])/g,"Doctor").replace(/\b(?:Mr\.|MR\.(?= [A-Z]))/g,"Mister").replace(/\b(?:Ms\.|MS\.(?= [A-Z]))/g,"Miss").replace(/\b(?:Mrs\.|MRS\.(?= [A-Z]))/g,"Mrs").replace(/\betc\.(?! [A-Z])/gi,"etc").replace(/\b(y)eah?\b/gi,"$1e'a").replace(new RegExp("\\d*\\.\\d+|\\b\\d{4}s?\\b|(?<!:)\\b(?:[1-9]|1[0-2]):[0-5]\\d\\b(?!:)","g"),wf).replace(new RegExp("(?<=\\d),(?=\\d)","g"),"").replace(/[$£]\d+(?:\.\d+)?(?: hundred| thousand| (?:[bm]|tr)illion)*\b|[$£]\d+\.\d\d?\b/gi,yf).replace(/\d*\.\d+/g,bf).replace(new RegExp("(?<=\\d)-(?=\\d)","g")," to ").replace(new RegExp("(?<=\\d)S","g")," S").replace(new RegExp("(?<=[BCDFGHJ-NP-TV-Z])'?s\\b","g"),"'S").replace(new RegExp("(?<=X')S\\b","g"),"s").replace(/(?:[A-Za-z]\.){2,} [a-z]/g,$=>$.replace(/\./g,"-")).replace(new RegExp("(?<=[A-Z])\\.(?=[A-Z])","gi"),"-").trim()}(Te));const p=function(z,$){const y=[];let _=0;for(const A of z.matchAll($)){const b=A[0];_<A.index&&y.push({match:!1,text:z.slice(_,A.index)}),b.length>0&&y.push({match:!0,text:b}),_=A.index+b.length}return _<z.length&&y.push({match:!1,text:z.slice(_)}),y}(Te,vf);var I="en";k==="a"?I="en-us":k==="e"&&(I="es");let Y=(await Promise.all(p.map(async({match:z,text:$})=>z?$:await async function(y,_){return(await gf({arguments:["-v",_,"--ipa=3","--phonout","generated",'--sep=" "',"-q","--ipa=3",'"'+y+'"']})).FS.readFile("generated",{encoding:"utf8"}).replace(/(\r\n|\n|\r)/g," ").trim()}($,I)))).join("").replace(/kəkˈoːɹoʊ/g,"kˈoʊkəɹoʊ").replace(/kəkˈɔːɹəʊ/g,"kˈəʊkəɹəʊ").replace(/ʲ/g,"j").replace(/r/g,"ɹ").replace(/x/g,"k").replace(/ɬ/g,"l").replace(new RegExp("(?<=[a-zɹː])(?=hˈʌndɹɪd)","g")," ").replace(/ z(?=[;:,.!?¡¿—…"«»“” ]|$)/g,"z");return k==="a"&&(Y=Y.replace(new RegExp("(?<=nˈaɪn)ti(?!ː)","g"),"di")),Y.trim()}function Kp(Te,k=!0){return".!?…。？！".includes(Te)||k&&Te===`
`}function xf(Te,k){let n=k;for(;n<Te.length&&!/\s/.test(Te[n]);)++n;return Te.substring(k,n)}const kf=new Set(["mr","mrs","ms","dr","prof","sr","jr","sgt","col","gen","rep","sen","gov","lt","maj","capt","st","mt","etc","co","inc","ltd","dept","vs","p","pg","jan","feb","mar","apr","jun","jul","aug","sep","sept","oct","nov","dec","sun","mon","tu","tue","tues","wed","th","thu","thur","thurs","fri","sat"]);function Mf(Te){return Te=Te.replace(/['’]s$/i,"").replace(/\.+$/,""),kf.has(Te.toLowerCase())}const Ph=new Map([[")","("],["]","["],["}","{"],["》","《"],["〉","〈"],["›","‹"],["»","«"],["〉","〈"],["」","「"],["』","『"],["〕","〔"],["】","【"]]),Tf=new Set(Ph.values());function $f(Te,k,n,p){if(Te==='"'||Te==="'")return Te==="'"&&n>0&&n<p.length-1&&/[A-Za-z]/.test(p[n-1])&&/[A-Za-z]/.test(p[n+1])?void 0:void(k.length&&k.at(-1)===Te?k.pop():k.push(Te));if(Tf.has(Te))return void k.push(Te);const I=Ph.get(Te);I&&k.length&&k.at(-1)===I&&k.pop()}class Qp{constructor(){this._buffer="",this._sentences=[],this._resolver=null,this._closed=!1}push(...k){for(const n of k)this._buffer+=n,this._process()}close(){if(this._closed)throw new Error("Stream is already closed.");this._closed=!0,this.flush()}flush(){const k=this._buffer.trim();k.length>0&&this._sentences.push(k),this._buffer="",this._resolve()}_resolve(){this._resolver&&(this._resolver(),this._resolver=null)}_process(){let k=0;const n=this._buffer,p=n.length;let I=0,V=[];const Y=z=>{let $=z;for(;$+1<p&&Kp(n[$+1],!1);)++$;for(;$+1<p&&(y=n[$+1],`"')]}」』`.includes(y));)++$;var y;let _=$+1;for(;_<p&&/\s/.test(n[_]);)++_;return{end:$,nextNonSpace:_}};for(;I<p;){const z=n[I];if($f(z,V,I,n),V.length===0&&Kp(z)){const $=n.slice(k,I);if(/(^|\n)\d+$/.test($)){++I;continue}const{end:y,nextNonSpace:_}=Y(I);if(I===_-1&&z!==`
`){++I;continue}if(_===p)break;let A=I-1;for(;A>=0&&/\S/.test(n[A]);)A--;A=Math.max(k,A+1);const b=xf(n,A);if(!b){++I;continue}if((/https?[,:]\/\//.test(b)||b.includes("@"))&&!Kp(b.at(-1))){I=A+b.length;continue}if(Mf(b)){++I;continue}if(/^([A-Za-z]\.)+$/.test(b)&&_<p&&/[A-Z]/.test(n[_])){++I;continue}if(z==="."&&_<p&&/[a-z]/.test(n[_])){++I;continue}const j=n.substring(k,y+1).trim();if(j==="..."||j==="…"){++I;continue}j&&this._sentences.push(j),I=k=y+1}else++I}this._buffer=n.substring(k),this._sentences.length>0&&this._resolve()}async*[Symbol.asyncIterator](){if(this._resolver)throw new Error("Another iterator is already active.");for(;;)if(this._sentences.length>0)yield this._sentences.shift();else{if(this._closed)break;await new Promise(k=>{this._resolver=k})}}[Symbol.iterator](){this.flush();const k=this._sentences[Symbol.iterator]();return this._sentences=[],k}get sentences(){return this._sentences}}var el={};const tl=Object.freeze({af_heart:{name:"Heart",language:"en-us",gender:"Female",traits:"❤️",targetQuality:"A",overallGrade:"A"},af_alloy:{name:"Alloy",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C"},af_aoede:{name:"Aoede",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C+"},af_bella:{name:"Bella",language:"en-us",gender:"Female",traits:"🔥",targetQuality:"A",overallGrade:"A-"},af_jessica:{name:"Jessica",language:"en-us",gender:"Female",targetQuality:"C",overallGrade:"D"},af_kore:{name:"Kore",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C+"},af_nicole:{name:"Nicole",language:"en-us",gender:"Female",traits:"🎧",targetQuality:"B",overallGrade:"B-"},af_nova:{name:"Nova",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C"},af_river:{name:"River",language:"en-us",gender:"Female",targetQuality:"C",overallGrade:"D"},af_sarah:{name:"Sarah",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C+"},af_sky:{name:"Sky",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C-"},am_adam:{name:"Adam",language:"en-us",gender:"Male",targetQuality:"D",overallGrade:"F+"},am_echo:{name:"Echo",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_eric:{name:"Eric",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_fenrir:{name:"Fenrir",language:"en-us",gender:"Male",targetQuality:"B",overallGrade:"C+"},am_liam:{name:"Liam",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_michael:{name:"Michael",language:"en-us",gender:"Male",targetQuality:"B",overallGrade:"C+"},am_onyx:{name:"Onyx",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_puck:{name:"Puck",language:"en-us",gender:"Male",targetQuality:"B",overallGrade:"C+"},am_santa:{name:"Santa",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D-"},bf_emma:{name:"Emma",language:"en-gb",gender:"Female",traits:"🚺",targetQuality:"B",overallGrade:"B-"},bf_isabella:{name:"Isabella",language:"en-gb",gender:"Female",targetQuality:"B",overallGrade:"C"},bm_george:{name:"George",language:"en-gb",gender:"Male",targetQuality:"B",overallGrade:"C"},bm_lewis:{name:"Lewis",language:"en-gb",gender:"Male",targetQuality:"C",overallGrade:"D+"},bf_alice:{name:"Alice",language:"en-gb",gender:"Female",traits:"🚺",targetQuality:"C",overallGrade:"D"},bf_lily:{name:"Lily",language:"en-gb",gender:"Female",traits:"🚺",targetQuality:"C",overallGrade:"D"},bm_daniel:{name:"Daniel",language:"en-gb",gender:"Male",traits:"🚹",targetQuality:"C",overallGrade:"D"},bm_fable:{name:"Fable",language:"en-gb",gender:"Male",traits:"🚹",targetQuality:"B",overallGrade:"C"},ef_dora:{name:"dora",language:"es",gender:"Female",traits:"🚺",targetQuality:"C",overallGrade:"D"},em_alex:{name:"alex",language:"es",gender:"Male",traits:"🚹",targetQuality:"C",overallGrade:"D"},em_santa:{name:"santa",language:"es",gender:"Male",traits:"🚹",targetQuality:"C",overallGrade:"D"}}),Xp=new Map;async function Ef(Te){if(Xp.has(Te))return Xp.get(Te);const k=new Float32Array(await async function(n){if(el!=null&&el.readFile){const z=typeof __dirname<"u"?__dirname:void 0,$=el.resolve(z,`../voices/${n}.bin`),{buffer:y}=await el.readFile($);return y}const p=`https://huggingface.co/onnx-community/Kokoro-82M-v1.0-ONNX/resolve/main/voices/${n}.bin`;let I;try{I=await caches.open("kokoro-voices");const z=await I.match(p);if(z)return await z.arrayBuffer()}catch(z){console.warn("Unable to open cache",z)}const V=await fetch(p),Y=await V.arrayBuffer();if(I)try{await I.put(p,new Response(Y,{headers:V.headers}))}catch(z){console.warn("Unable to cache file",z)}return Y}(Te));return Xp.set(Te,k),k}class Yp{constructor(k,n){this.model=k,this.tokenizer=n}static async from_pretrained(k,{dtype:n="fp32",device:p=null,progress_callback:I=null}={}){const V=_f.from_pretrained(k,{progress_callback:I,dtype:n,device:p}),Y=mf.from_pretrained(k,{progress_callback:I}),z=await Promise.all([V,Y]);return new Yp(...z)}get voices(){return tl}list_voices(){console.table(tl)}_validate_voice(k){if(!tl.hasOwnProperty(k))throw console.error(`Voice "${k}" not found. Available voices:`),console.table(tl),new Error(`Voice "${k}" not found. Should be one of: ${Object.keys(tl).join(", ")}.`);return k.at(0)}async generate(k,{voice:n="af_heart",speed:p=1}={}){const I=this._validate_voice(n),V=await Ch(k,I),{input_ids:Y}=this.tokenizer(V,{truncation:!0});return this.generate_from_ids(Y,{voice:n,speed:p})}async generate_from_ids(k,{voice:n="af_heart",speed:p=1}={}){const I=256*Math.min(Math.max(k.dims.at(-1)-2,0),509),V=(await Ef(n)).slice(I,I+256),Y={input_ids:k,style:new Eh("float32",V,[1,256]),speed:new Eh("float32",[p],[1])},{waveform:z}=await this.model(Y);return new ff(z.data,24e3)}async*stream(k,{voice:n="af_heart",speed:p=1,split_pattern:I=null}={}){const V=this._validate_voice(n);let Y;if(k instanceof Qp)Y=k;else{if(typeof k!="string")throw new Error("Invalid input type. Expected string or TextSplitterStream.");{Y=new Qp;const z=I?k.split(I).map($=>$.trim()).filter($=>$.length>0):[k];Y.push(...z)}}for await(const z of Y){const $=await Ch(z,V),{input_ids:y}=this.tokenizer($,{truncation:!0}),_=await this.generate_from_ids(y,{voice:n,speed:p});yield{text:z,phonemes:$,audio:_}}}}const Sf=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));Wn.KokoroTTS=Yp,Wn.TextSplitterStream=Qp,Object.defineProperty(Wn,Symbol.toStringTag,{value:"Module"})});
